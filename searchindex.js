Search.setIndex({"alltitles": {"(1,1,1), (2,1,p), and (3,1,p) Quantum Random Access Codes": [[11, "p-and-3-1-p-quantum-random-access-codes"]], "0.2.0": [[18, "release-notes-0-2-0"]], "0.3.0": [[18, "release-notes-0-3-0"]], "0.4.0": [[18, "release-notes-0-4-0"]], "0.5.0": [[18, "release-notes-0-5-0"]], "0.6.0": [[18, "release-notes-0-6-0"]], "0.7.0": [[18, "release-notes-0-7-0"]], "A Simple Quantum Relaxation": [[11, "a-simple-quantum-relaxation"]], "ADMM Optimizer": [[117, null]], "ADMMOptimizationResult": [[21, null]], "ADMMOptimizer": [[22, null]], "ADMMParameters": [[23, null]], "ADMMState": [[24, null]], "Adding/removing linear and quadratic constraints": [[113, "Adding/removing-linear-and-quadratic-constraints"]], "Algorithm Globals Migration": [[16, "algorithm-globals-migration"]], "Algorithms and results": [[1, "algorithms-and-results"]], "Alternative: Solve the Problem in Two Explicit Steps": [[124, "Alternative:-Solve-the-Problem-in-Two-Explicit-Steps"]], "Analysis": [[122, "Analysis"]], "Analysis of Samples": [[115, "Analysis-of-Samples"]], "Appendix": [[124, "Appendix"]], "Application Classes for Optimization Problems": [[121, null]], "Application classes": [[118, "Application-classes"]], "Applications": [[3, "applications"]], "Approximate Universal Quantum Computing for Optimization Problems": [[118, "Approximate-Universal-Quantum-Computing-for-Optimization-Problems"]], "Background on Quantum Random Access Optimization: Quantum relaxations, quantum random access codes, rounding schemes": [[11, null]], "Base class for converters": [[4, "base-class-for-converters"]], "Base classes for algorithms and results": [[1, "base-classes-for-algorithms-and-results"]], "Base classes for applications": [[3, "base-classes-for-applications"]], "BaseAggregator": [[25, null]], "BinPacking": [[58, null]], "Brute force approach": [[118, "Brute-force-approach"], [118, "id2"]], "Bug Fixes": [[18, "bug-fixes"], [18, "release-notes-0-6-0-bug-fixes"], [18, "release-notes-0-5-0-bug-fixes"], [18, "release-notes-0-4-0-bug-fixes"], [18, "release-notes-0-3-0-bug-fixes"], [18, "release-notes-0-2-0-bug-fixes"]], "COBYLA": [[91, null]], "Calling 3-ADMM-H algorithm": [[117, "Calling-3-ADMM-H-algorithm"]], "Check that GroverOptimizer finds the correct value": [[116, "Check-that-GroverOptimizer-finds-the-correct-value"]], "Checking that the full Hamiltonian gives the right cost": [[118, "Checking-that-the-full-Hamiltonian-gives-the-right-cost"], [118, "id4"]], "Classical Solution": [[117, "Classical-Solution"]], "Classical Solver Result": [[117, "Classical-Solver-Result"]], "Classical solution": [[119, "Classical-solution"]], "Classical solution using IBM ILOG CPLEX": [[119, "Classical-solution-using-IBM-ILOG-CPLEX"]], "Clique": [[59, null]], "CobylaOptimizer": [[26, null]], "Commutation of Quantum Relaxation": [[11, "commutation-of-quantum-relaxation"]], "Constraint": [[98, null]], "Construct the Ising Hamiltonian": [[119, "Construct-the-Ising-Hamiltonian"]], "Converters": [[4, "converters"]], "Converters for Quadratic Programs": [[114, null]], "Converting a QUBO to a SparsePauliOp": [[115, "Converting-a-QUBO-to-a-SparsePauliOp"]], "CplexOptimizer": [[27, null]], "CplexSolver and GurobiSolver": [[123, "CplexSolver-and-GurobiSolver"]], "Deprecation Notes": [[18, "deprecation-notes"], [18, "release-notes-0-3-0-deprecation-notes"], [18, "release-notes-0-2-0-deprecation-notes"]], "Directly constructing a QuadraticProgram": [[113, "Directly-constructing-a-QuadraticProgram"]], "Encode the problem into a quantum Hamiltonian": [[124, "Encode-the-problem-into-a-quantum-Hamiltonian"]], "Encoded Problem Hamiltonians": [[11, "encoded-problem-hamiltonians"]], "EncodingCommutationVerifier": [[49, null]], "Exact Problem Solution with the NumpyMinimumEigensolver": [[124, "Exact-Problem-Solution-with-the-NumpyMinimumEigensolver"]], "ExactCover": [[60, null]], "Example": [[117, "Example"]], "Execution with V2 Sampler": [[115, "Execution-with-V2-Sampler"]], "Explanations\u2026": [[10, "explanations"]], "Find the Minimum of a QUBO Problem using GroverOptimizer": [[116, "Find-the-Minimum-of-a-QUBO-Problem-using-GroverOptimizer"]], "From Hamiltonian to QP formulation": [[119, "From-Hamiltonian-to-QP-formulation"]], "Getting started": [[12, null]], "GoemansWilliamsonOptimizationResult": [[28, null]], "GoemansWilliamsonOptimizer": [[29, null]], "GraphOptimizationApplication": [[61, null]], "GraphPartition": [[62, null]], "Grover Adaptive Search": [[116, "Grover-Adaptive-Search"]], "Grover Optimizer": [[116, null]], "Grover Optimizer with SamplerV2": [[16, "grover-optimizer-with-samplerv2"]], "GroverOptimizationResult": [[30, null]], "GroverOptimizer": [[14, "groveroptimizer"], [15, "groveroptimizer"], [31, null]], "GurobiOptimizer": [[32, null]], "How to check the Hamiltonian": [[121, "How-to-check-the-Hamiltonian"]], "How to verify correctness of your encoding": [[124, "How-to-verify-correctness-of-your-encoding"]], "INFINITY": [[81, null]], "Improving Variational Quantum Optimization using CVaR": [[120, null]], "Indicator constraints of Docplex": [[123, "Indicator-constraints-of-Docplex"]], "InequalityToEquality": [[73, null], [114, "InequalityToEquality"]], "Initialization": [[117, "Initialization"], [119, "Initialization"]], "Inspect the results of subroutines": [[124, "Inspect-the-results-of-subroutines"]], "Installation": [[12, "installation"]], "IntegerToBinary": [[74, null], [114, "IntegerToBinary"]], "IntermediateResult": [[33, null]], "Interpret the solution": [[124, "Interpret-the-solution"]], "Introduction": [[113, "Introduction"], [115, "Introduction"], [116, "Introduction"], [117, "Introduction"], [118, "Introduction"], [120, "Introduction"], [121, "Introduction"], [122, "Introduction"]], "Key Changes": [[16, "key-changes"]], "Knapsack": [[63, null]], "Knapsack problem": [[121, "Knapsack-problem"]], "LinearConstraint": [[99, null]], "LinearEqualityToPenalty": [[75, null], [114, "LinearEqualityToPenalty"]], "LinearExpression": [[100, null]], "LinearInequalityToPenalty": [[76, null]], "Loading a QuadraticProgram from a docplex model": [[113, "Loading-a-QuadraticProgram-from-a-docplex-model"]], "Loading a QuadraticProgram from an LP file": [[113, "Loading-a-QuadraticProgram-from-an-LP-file"]], "Magic State Rounding": [[11, "magic-state-rounding"]], "MagicRounding": [[50, null]], "Manually perform rounding on the relaxed problem results": [[124, "Manually-perform-rounding-on-the-relaxed-problem-results"]], "Manually solve the relaxed problem.": [[124, "Manually-solve-the-relaxed-problem."]], "Mapping to the Ising problem": [[118, "Mapping-to-the-Ising-problem"], [118, "id3"]], "Max-Cut and Traveling Salesman Problem": [[118, null]], "Max-Cut problem": [[118, "Max-Cut-problem"]], "Maxcut": [[64, null]], "MaximizeToMinimize": [[77, null]], "MeanAggregator": [[34, null]], "Migration Checklist": [[16, "migration-checklist"]], "Migration Example: Complete Workflow": [[16, "migration-example-complete-workflow"]], "Migration from qiskit-algorithms to qiskit-optimization": [[16, "migration-from-qiskit-algorithms-to-qiskit-optimization"]], "MinimizeToMaximize": [[78, null]], "Minimizer": [[92, null]], "Minimum Eigen Optimizer": [[115, null]], "Minimum Eigen Optimizer using SamplingVQE": [[120, "Minimum-Eigen-Optimizer-using-SamplingVQE"]], "Minimum Eigensolvers": [[5, "minimum-eigensolvers"], [16, "minimum-eigensolvers"]], "Minimum Eigensolvers (qiskit_optimization.minimum_eigensolvers)": [[5, null]], "MinimumEigenOptimizationResult": [[35, null]], "MinimumEigenOptimizer": [[14, "minimumeigenoptimizer"], [15, "minimumeigenoptimizer"], [36, null]], "MultiStartOptimizer": [[37, null]], "NELDER_MEAD": [[93, null]], "New Features": [[18, "new-features"], [18, "release-notes-0-6-0-new-features"], [18, "release-notes-0-5-0-new-features"], [18, "release-notes-0-4-0-new-features"], [18, "release-notes-0-3-0-new-features"], [18, "release-notes-0-2-0-new-features"]], "Next Steps": [[13, "next-steps"]], "NumPyMinimumEigensolver": [[14, "numpyminimumeigensolver"], [15, "numpyminimumeigensolver"], [82, null]], "NumPyMinimumEigensolverResult": [[83, null]], "NumberPartition": [[65, null]], "Optimization Tutorials": [[125, null]], "Optimization algorithms (qiskit_optimization.algorithms)": [[1, null]], "Optimization applications (qiskit_optimization.applications)": [[3, null]], "Optimization converters (qiskit_optimization.converters)": [[4, null]], "Optimization problems (qiskit_optimization.problems)": [[7, null]], "OptimizationAlgorithm": [[38, null]], "OptimizationApplication": [[66, null]], "OptimizationResult": [[39, null]], "OptimizationResultStatus": [[40, null]], "Optimizer": [[94, null]], "Optimizer Base Classes": [[6, "optimizer-base-classes"]], "OptimizerResult": [[95, null]], "Optimizers": [[6, "optimizers"]], "Optimizers (qiskit_optimization.optimizers)": [[6, null]], "Optimizers Migration": [[16, "optimizers-migration"]], "Optional installs": [[12, "optional-installs"]], "Other Notes": [[18, "other-notes"]], "Overview": [[13, "overview"], [14, "overview"], [15, "overview"], [16, "overview"]], "Parameters": [[117, "Parameters"]], "Portfolio Optimization": [[120, "Portfolio-Optimization"]], "Preliminaries: relaxing QUBOs": [[122, "Preliminaries:-relaxing-QUBOs"]], "Prelude": [[18, "prelude"], [18, "release-notes-0-6-0-prelude"], [18, "release-notes-0-5-0-prelude"]], "QAOA": [[14, "qaoa"], [15, "qaoa"], [84, null], [122, "QAOA"]], "QAOA with SamplerV2": [[16, "qaoa-with-samplerv2"]], "QRAO (Quantum Random Access Optimization) Migration": [[16, "qrao-quantum-random-access-optimization-migration"]], "Qiskit Optimization API Reference": [[0, null]], "Qiskit Optimization Explanations": [[10, null]], "Qiskit Optimization Migration Guide": [[17, null]], "Qiskit Optimization overview": [[13, null]], "Qiskit Optimization v0.5 Migration Guide": [[14, null]], "Qiskit Optimization v0.6 Migration Guide": [[15, null]], "Qiskit Optimization v0.7 Migration Guide": [[16, null]], "Qiskit optimization module (qiskit_optimization)": [[0, "qiskit-optimization-module-qiskit-optimization"]], "QiskitOptimizationError": [[19, null]], "Quadratic Programs": [[113, null]], "Quadratic program": [[7, "quadratic-program"]], "Quadratic program translators (qiskit_optimization.translators)": [[8, null]], "QuadraticConstraint": [[101, null]], "QuadraticExpression": [[102, null]], "QuadraticObjective": [[103, null]], "QuadraticProgram": [[20, null]], "QuadraticProgramConverter": [[79, null]], "QuadraticProgramElement": [[104, null]], "QuadraticProgramToQubo": [[80, null]], "Quantum Random Access Encoding and Optimization": [[2, "quantum-random-access-encoding-and-optimization"]], "Quantum Random Access Optimization": [[124, null]], "Quantum Random Access Optimization (qiskit_optimization.algorithms.qrao)": [[2, null]], "Quantum Relaxation": [[11, "quantum-relaxation"]], "Quantum Relaxations via Quantum Random Access Codes (QRACs)": [[11, "quantum-relaxations-via-quantum-random-access-codes-qracs"]], "Quantum Rounding Schemes": [[11, "quantum-rounding-schemes"]], "Quantum Solution": [[117, "Quantum-Solution"]], "Quantum Solver Results": [[117, "Quantum-Solver-Results"]], "Quantum solution": [[119, "Quantum-solution"]], "Quantum solution from the ground up": [[119, "Quantum-solution-from-the-ground-up"]], "QuantumRandomAccessEncoding": [[51, null]], "QuantumRandomAccessOptimizationResult": [[52, null]], "QuantumRandomAccessOptimizer": [[53, null]], "Ready to get going?\u2026": [[12, "ready-to-get-going"]], "Recovering Encoded Bits": [[11, "recovering-encoded-bits"]], "RecursiveMinimumEigenOptimizationResult": [[41, null]], "RecursiveMinimumEigenOptimizer": [[42, null], [115, "RecursiveMinimumEigenOptimizer"]], "References": [[11, "references"], [115, "References"], [116, "References"], [117, "References"], [119, "References"], [120, "References"], [122, "References"]], "Relaxations": [[11, "relaxations"]], "Release Notes": [[18, null]], "Rounding schemes": [[2, "rounding-schemes"]], "RoundingContext": [[54, null]], "RoundingResult": [[55, null]], "RoundingScheme": [[56, null]], "Running it on quantum computer": [[118, "Running-it-on-quantum-computer"], [118, "id5"]], "SKModel": [[67, null]], "SPSA": [[96, null]], "SamplingMinimumEigensolver": [[85, null]], "SamplingMinimumEigensolverResult": [[86, null]], "SamplingVQE": [[15, "samplingvqe"], [87, null]], "SamplingVQE Migration": [[16, "samplingvqe-migration"]], "SamplingVQEResult": [[88, null]], "SciPyOptimizer": [[97, null]], "ScipyMilpOptimizer": [[43, null]], "Semi-deterministic Rounding": [[11, "semi-deterministic-rounding"]], "SemideterministicRounding": [[57, null]], "Set up a combinatorial optimization problem": [[124, "Set-up-a-combinatorial-optimization-problem"]], "SetPacking": [[68, null]], "SlsqpOptimizationResult": [[44, null]], "SlsqpOptimizer": [[45, null]], "SolutionSample": [[46, null]], "Solve the problem using the QuantumRandomAccessOptimizer": [[124, "Solve-the-problem-using-the-QuantumRandomAccessOptimizer"]], "Solve the problem using the QuantumRandomAccessOptimizer with MagicRounding": [[124, "Solve-the-problem-using-the-QuantumRandomAccessOptimizer-with-MagicRounding"]], "Solving a QUBO with the MinimumEigenOptimizer": [[115, "Solving-a-QUBO-with-the-MinimumEigenOptimizer"]], "StableSet": [[69, null]], "Standard QAOA": [[122, "Standard-QAOA"]], "Step 1": [[119, "Step-1"]], "Step 2": [[119, "Step-2"]], "Step 3": [[119, "Step-3"]], "Step 4": [[119, "Step-4"]], "Step 5": [[119, "Step-5"]], "Submodules": [[0, "submodules"], [1, "submodules"]], "Substituting Variables": [[113, "Substituting-Variables"]], "The Introduction": [[119, "The-Introduction"]], "The Model": [[119, "The-Model"]], "Translators": [[8, "translators"]], "Translators between QuadraticProgram and Docplex/Gurobipy": [[123, "Translators-between-QuadraticProgram-and-Docplex/Gurobipy"]], "Traveling Salesman Problem": [[118, "Traveling-Salesman-Problem"]], "Tsp": [[70, null]], "Upgrade Notes": [[18, "upgrade-notes"], [18, "release-notes-0-6-0-upgrade-notes"], [18, "release-notes-0-5-0-upgrade-notes"], [18, "release-notes-0-4-0-upgrade-notes"], [18, "release-notes-0-3-0-upgrade-notes"], [18, "release-notes-0-2-0-upgrade-notes"]], "Using Classical Optimization Solvers and Models with Qiskit Optimization": [[123, null]], "Utility functions": [[9, "utility-functions"]], "Utility functions (qiskit_optimization.utils)": [[9, null]], "V2 Primitives Migration": [[16, "v2-primitives-migration"]], "VQE": [[89, null]], "VQE (former) \u2192 SamplingVQE (new)": [[14, "vqe-former-samplingvqe-new"]], "VQE with EstimatorV2": [[16, "vqe-with-estimatorv2"]], "VQEResult": [[90, null]], "Variable": [[105, null]], "Vehicle Routing": [[119, null]], "VehicleRouting": [[71, null]], "Vertex cover problem": [[121, "Vertex-cover-problem"]], "VertexCover": [[72, null]], "Warm-start QAOA": [[122, "Warm-start-QAOA"], [122, "id2"]], "Warm-starting quantum optimization": [[122, null]], "WarmStartQAOAFactory": [[47, null]], "WarmStartQAOAOptimizer": [[14, "warmstartqaoaoptimizer"], [15, "warmstartqaoaoptimizer"], [48, null]], "Weighted Max-Cut": [[118, "Weighted-Max-Cut"]], "algorithm_globals": [[112, null]], "from_docplex_mp": [[106, null]], "from_gurobipy": [[107, null]], "from_ising": [[108, null]], "to_docplex_mp": [[109, null]], "to_gurobipy": [[110, null]], "to_ising": [[111, null]]}, "docnames": ["apidocs/qiskit_optimization", "apidocs/qiskit_optimization.algorithms", "apidocs/qiskit_optimization.algorithms.qrao", "apidocs/qiskit_optimization.applications", "apidocs/qiskit_optimization.converters", "apidocs/qiskit_optimization.minimum_eigensolvers", "apidocs/qiskit_optimization.optimizers", "apidocs/qiskit_optimization.problems", "apidocs/qiskit_optimization.translators", "apidocs/qiskit_optimization.utils", "explanations/index", "explanations/qrao", "getting_started", "index", "migration/01_migration_guide_to_v0.5", "migration/02_migration_guide_to_v0.6", "migration/03_migration_guide_to_v0.7", "migration/index", "release_notes", "stubs/qiskit_optimization.QiskitOptimizationError", "stubs/qiskit_optimization.QuadraticProgram", "stubs/qiskit_optimization.algorithms.ADMMOptimizationResult", "stubs/qiskit_optimization.algorithms.ADMMOptimizer", "stubs/qiskit_optimization.algorithms.ADMMParameters", "stubs/qiskit_optimization.algorithms.ADMMState", "stubs/qiskit_optimization.algorithms.BaseAggregator", "stubs/qiskit_optimization.algorithms.CobylaOptimizer", "stubs/qiskit_optimization.algorithms.CplexOptimizer", "stubs/qiskit_optimization.algorithms.GoemansWilliamsonOptimizationResult", "stubs/qiskit_optimization.algorithms.GoemansWilliamsonOptimizer", "stubs/qiskit_optimization.algorithms.GroverOptimizationResult", "stubs/qiskit_optimization.algorithms.GroverOptimizer", "stubs/qiskit_optimization.algorithms.GurobiOptimizer", "stubs/qiskit_optimization.algorithms.IntermediateResult", "stubs/qiskit_optimization.algorithms.MeanAggregator", "stubs/qiskit_optimization.algorithms.MinimumEigenOptimizationResult", "stubs/qiskit_optimization.algorithms.MinimumEigenOptimizer", "stubs/qiskit_optimization.algorithms.MultiStartOptimizer", "stubs/qiskit_optimization.algorithms.OptimizationAlgorithm", "stubs/qiskit_optimization.algorithms.OptimizationResult", "stubs/qiskit_optimization.algorithms.OptimizationResultStatus", "stubs/qiskit_optimization.algorithms.RecursiveMinimumEigenOptimizationResult", "stubs/qiskit_optimization.algorithms.RecursiveMinimumEigenOptimizer", "stubs/qiskit_optimization.algorithms.ScipyMilpOptimizer", "stubs/qiskit_optimization.algorithms.SlsqpOptimizationResult", "stubs/qiskit_optimization.algorithms.SlsqpOptimizer", "stubs/qiskit_optimization.algorithms.SolutionSample", "stubs/qiskit_optimization.algorithms.WarmStartQAOAFactory", "stubs/qiskit_optimization.algorithms.WarmStartQAOAOptimizer", "stubs/qiskit_optimization.algorithms.qrao.EncodingCommutationVerifier", "stubs/qiskit_optimization.algorithms.qrao.MagicRounding", "stubs/qiskit_optimization.algorithms.qrao.QuantumRandomAccessEncoding", "stubs/qiskit_optimization.algorithms.qrao.QuantumRandomAccessOptimizationResult", "stubs/qiskit_optimization.algorithms.qrao.QuantumRandomAccessOptimizer", "stubs/qiskit_optimization.algorithms.qrao.RoundingContext", "stubs/qiskit_optimization.algorithms.qrao.RoundingResult", "stubs/qiskit_optimization.algorithms.qrao.RoundingScheme", "stubs/qiskit_optimization.algorithms.qrao.SemideterministicRounding", "stubs/qiskit_optimization.applications.BinPacking", "stubs/qiskit_optimization.applications.Clique", "stubs/qiskit_optimization.applications.ExactCover", "stubs/qiskit_optimization.applications.GraphOptimizationApplication", "stubs/qiskit_optimization.applications.GraphPartition", "stubs/qiskit_optimization.applications.Knapsack", "stubs/qiskit_optimization.applications.Maxcut", "stubs/qiskit_optimization.applications.NumberPartition", "stubs/qiskit_optimization.applications.OptimizationApplication", "stubs/qiskit_optimization.applications.SKModel", "stubs/qiskit_optimization.applications.SetPacking", "stubs/qiskit_optimization.applications.StableSet", "stubs/qiskit_optimization.applications.Tsp", "stubs/qiskit_optimization.applications.VehicleRouting", "stubs/qiskit_optimization.applications.VertexCover", "stubs/qiskit_optimization.converters.InequalityToEquality", "stubs/qiskit_optimization.converters.IntegerToBinary", "stubs/qiskit_optimization.converters.LinearEqualityToPenalty", "stubs/qiskit_optimization.converters.LinearInequalityToPenalty", "stubs/qiskit_optimization.converters.MaximizeToMinimize", "stubs/qiskit_optimization.converters.MinimizeToMaximize", "stubs/qiskit_optimization.converters.QuadraticProgramConverter", "stubs/qiskit_optimization.converters.QuadraticProgramToQubo", "stubs/qiskit_optimization.infinity.INFINITY", "stubs/qiskit_optimization.minimum_eigensolvers.NumPyMinimumEigensolver", "stubs/qiskit_optimization.minimum_eigensolvers.NumPyMinimumEigensolverResult", "stubs/qiskit_optimization.minimum_eigensolvers.QAOA", "stubs/qiskit_optimization.minimum_eigensolvers.SamplingMinimumEigensolver", "stubs/qiskit_optimization.minimum_eigensolvers.SamplingMinimumEigensolverResult", "stubs/qiskit_optimization.minimum_eigensolvers.SamplingVQE", "stubs/qiskit_optimization.minimum_eigensolvers.SamplingVQEResult", "stubs/qiskit_optimization.minimum_eigensolvers.VQE", "stubs/qiskit_optimization.minimum_eigensolvers.VQEResult", "stubs/qiskit_optimization.optimizers.COBYLA", "stubs/qiskit_optimization.optimizers.Minimizer", "stubs/qiskit_optimization.optimizers.NELDER_MEAD", "stubs/qiskit_optimization.optimizers.Optimizer", "stubs/qiskit_optimization.optimizers.OptimizerResult", "stubs/qiskit_optimization.optimizers.SPSA", "stubs/qiskit_optimization.optimizers.SciPyOptimizer", "stubs/qiskit_optimization.problems.Constraint", "stubs/qiskit_optimization.problems.LinearConstraint", "stubs/qiskit_optimization.problems.LinearExpression", "stubs/qiskit_optimization.problems.QuadraticConstraint", "stubs/qiskit_optimization.problems.QuadraticExpression", "stubs/qiskit_optimization.problems.QuadraticObjective", "stubs/qiskit_optimization.problems.QuadraticProgramElement", "stubs/qiskit_optimization.problems.Variable", "stubs/qiskit_optimization.translators.from_docplex_mp", "stubs/qiskit_optimization.translators.from_gurobipy", "stubs/qiskit_optimization.translators.from_ising", "stubs/qiskit_optimization.translators.to_docplex_mp", "stubs/qiskit_optimization.translators.to_gurobipy", "stubs/qiskit_optimization.translators.to_ising", "stubs/qiskit_optimization.utils.algorithm_globals", "tutorials/01_quadratic_program", "tutorials/02_converters_for_quadratic_programs", "tutorials/03_minimum_eigen_optimizer", "tutorials/04_grover_optimizer", "tutorials/05_admm_optimizer", "tutorials/06_examples_max_cut_and_tsp", "tutorials/07_examples_vehicle_routing", "tutorials/08_cvar_optimization", "tutorials/09_application_classes", "tutorials/10_warm_start_qaoa", "tutorials/11_using_classical_optimization_solvers_and_models", "tutorials/12_quantum_random_access_optimizer", "tutorials/index"], "envversion": {"nbsphinx": 4, "sphinx": 62, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1}, "filenames": ["apidocs/qiskit_optimization.rst", "apidocs/qiskit_optimization.algorithms.rst", "apidocs/qiskit_optimization.algorithms.qrao.rst", "apidocs/qiskit_optimization.applications.rst", "apidocs/qiskit_optimization.converters.rst", "apidocs/qiskit_optimization.minimum_eigensolvers.rst", "apidocs/qiskit_optimization.optimizers.rst", "apidocs/qiskit_optimization.problems.rst", "apidocs/qiskit_optimization.translators.rst", "apidocs/qiskit_optimization.utils.rst", "explanations/index.rst", "explanations/qrao.rst", "getting_started.rst", "index.rst", "migration/01_migration_guide_to_v0.5.rst", "migration/02_migration_guide_to_v0.6.rst", "migration/03_migration_guide_to_v0.7.rst", "migration/index.rst", "release_notes.rst", "stubs/qiskit_optimization.QiskitOptimizationError.rst", "stubs/qiskit_optimization.QuadraticProgram.rst", "stubs/qiskit_optimization.algorithms.ADMMOptimizationResult.rst", "stubs/qiskit_optimization.algorithms.ADMMOptimizer.rst", "stubs/qiskit_optimization.algorithms.ADMMParameters.rst", "stubs/qiskit_optimization.algorithms.ADMMState.rst", "stubs/qiskit_optimization.algorithms.BaseAggregator.rst", "stubs/qiskit_optimization.algorithms.CobylaOptimizer.rst", "stubs/qiskit_optimization.algorithms.CplexOptimizer.rst", "stubs/qiskit_optimization.algorithms.GoemansWilliamsonOptimizationResult.rst", "stubs/qiskit_optimization.algorithms.GoemansWilliamsonOptimizer.rst", "stubs/qiskit_optimization.algorithms.GroverOptimizationResult.rst", "stubs/qiskit_optimization.algorithms.GroverOptimizer.rst", "stubs/qiskit_optimization.algorithms.GurobiOptimizer.rst", "stubs/qiskit_optimization.algorithms.IntermediateResult.rst", "stubs/qiskit_optimization.algorithms.MeanAggregator.rst", "stubs/qiskit_optimization.algorithms.MinimumEigenOptimizationResult.rst", "stubs/qiskit_optimization.algorithms.MinimumEigenOptimizer.rst", "stubs/qiskit_optimization.algorithms.MultiStartOptimizer.rst", "stubs/qiskit_optimization.algorithms.OptimizationAlgorithm.rst", "stubs/qiskit_optimization.algorithms.OptimizationResult.rst", "stubs/qiskit_optimization.algorithms.OptimizationResultStatus.rst", "stubs/qiskit_optimization.algorithms.RecursiveMinimumEigenOptimizationResult.rst", "stubs/qiskit_optimization.algorithms.RecursiveMinimumEigenOptimizer.rst", "stubs/qiskit_optimization.algorithms.ScipyMilpOptimizer.rst", "stubs/qiskit_optimization.algorithms.SlsqpOptimizationResult.rst", "stubs/qiskit_optimization.algorithms.SlsqpOptimizer.rst", "stubs/qiskit_optimization.algorithms.SolutionSample.rst", "stubs/qiskit_optimization.algorithms.WarmStartQAOAFactory.rst", "stubs/qiskit_optimization.algorithms.WarmStartQAOAOptimizer.rst", "stubs/qiskit_optimization.algorithms.qrao.EncodingCommutationVerifier.rst", "stubs/qiskit_optimization.algorithms.qrao.MagicRounding.rst", "stubs/qiskit_optimization.algorithms.qrao.QuantumRandomAccessEncoding.rst", "stubs/qiskit_optimization.algorithms.qrao.QuantumRandomAccessOptimizationResult.rst", "stubs/qiskit_optimization.algorithms.qrao.QuantumRandomAccessOptimizer.rst", "stubs/qiskit_optimization.algorithms.qrao.RoundingContext.rst", "stubs/qiskit_optimization.algorithms.qrao.RoundingResult.rst", "stubs/qiskit_optimization.algorithms.qrao.RoundingScheme.rst", "stubs/qiskit_optimization.algorithms.qrao.SemideterministicRounding.rst", "stubs/qiskit_optimization.applications.BinPacking.rst", "stubs/qiskit_optimization.applications.Clique.rst", "stubs/qiskit_optimization.applications.ExactCover.rst", "stubs/qiskit_optimization.applications.GraphOptimizationApplication.rst", "stubs/qiskit_optimization.applications.GraphPartition.rst", "stubs/qiskit_optimization.applications.Knapsack.rst", "stubs/qiskit_optimization.applications.Maxcut.rst", "stubs/qiskit_optimization.applications.NumberPartition.rst", "stubs/qiskit_optimization.applications.OptimizationApplication.rst", "stubs/qiskit_optimization.applications.SKModel.rst", "stubs/qiskit_optimization.applications.SetPacking.rst", "stubs/qiskit_optimization.applications.StableSet.rst", "stubs/qiskit_optimization.applications.Tsp.rst", "stubs/qiskit_optimization.applications.VehicleRouting.rst", "stubs/qiskit_optimization.applications.VertexCover.rst", "stubs/qiskit_optimization.converters.InequalityToEquality.rst", "stubs/qiskit_optimization.converters.IntegerToBinary.rst", "stubs/qiskit_optimization.converters.LinearEqualityToPenalty.rst", "stubs/qiskit_optimization.converters.LinearInequalityToPenalty.rst", "stubs/qiskit_optimization.converters.MaximizeToMinimize.rst", "stubs/qiskit_optimization.converters.MinimizeToMaximize.rst", "stubs/qiskit_optimization.converters.QuadraticProgramConverter.rst", "stubs/qiskit_optimization.converters.QuadraticProgramToQubo.rst", "stubs/qiskit_optimization.infinity.INFINITY.rst", "stubs/qiskit_optimization.minimum_eigensolvers.NumPyMinimumEigensolver.rst", "stubs/qiskit_optimization.minimum_eigensolvers.NumPyMinimumEigensolverResult.rst", "stubs/qiskit_optimization.minimum_eigensolvers.QAOA.rst", "stubs/qiskit_optimization.minimum_eigensolvers.SamplingMinimumEigensolver.rst", "stubs/qiskit_optimization.minimum_eigensolvers.SamplingMinimumEigensolverResult.rst", "stubs/qiskit_optimization.minimum_eigensolvers.SamplingVQE.rst", "stubs/qiskit_optimization.minimum_eigensolvers.SamplingVQEResult.rst", "stubs/qiskit_optimization.minimum_eigensolvers.VQE.rst", "stubs/qiskit_optimization.minimum_eigensolvers.VQEResult.rst", "stubs/qiskit_optimization.optimizers.COBYLA.rst", "stubs/qiskit_optimization.optimizers.Minimizer.rst", "stubs/qiskit_optimization.optimizers.NELDER_MEAD.rst", "stubs/qiskit_optimization.optimizers.Optimizer.rst", "stubs/qiskit_optimization.optimizers.OptimizerResult.rst", "stubs/qiskit_optimization.optimizers.SPSA.rst", "stubs/qiskit_optimization.optimizers.SciPyOptimizer.rst", "stubs/qiskit_optimization.problems.Constraint.rst", "stubs/qiskit_optimization.problems.LinearConstraint.rst", "stubs/qiskit_optimization.problems.LinearExpression.rst", "stubs/qiskit_optimization.problems.QuadraticConstraint.rst", "stubs/qiskit_optimization.problems.QuadraticExpression.rst", "stubs/qiskit_optimization.problems.QuadraticObjective.rst", "stubs/qiskit_optimization.problems.QuadraticProgramElement.rst", "stubs/qiskit_optimization.problems.Variable.rst", "stubs/qiskit_optimization.translators.from_docplex_mp.rst", "stubs/qiskit_optimization.translators.from_gurobipy.rst", "stubs/qiskit_optimization.translators.from_ising.rst", "stubs/qiskit_optimization.translators.to_docplex_mp.rst", "stubs/qiskit_optimization.translators.to_gurobipy.rst", "stubs/qiskit_optimization.translators.to_ising.rst", "stubs/qiskit_optimization.utils.algorithm_globals.rst", "tutorials/01_quadratic_program.ipynb", "tutorials/02_converters_for_quadratic_programs.ipynb", "tutorials/03_minimum_eigen_optimizer.ipynb", "tutorials/04_grover_optimizer.ipynb", "tutorials/05_admm_optimizer.ipynb", "tutorials/06_examples_max_cut_and_tsp.ipynb", "tutorials/07_examples_vehicle_routing.ipynb", "tutorials/08_cvar_optimization.ipynb", "tutorials/09_application_classes.ipynb", "tutorials/10_warm_start_qaoa.ipynb", "tutorials/11_using_classical_optimization_solvers_and_models.ipynb", "tutorials/12_quantum_random_access_optimizer.ipynb", "tutorials/index.rst"], "indexentries": {"admmoptimizationresult (class in qiskit_optimization.algorithms)": [[21, "qiskit_optimization.algorithms.ADMMOptimizationResult", false]], "admmoptimizer (class in qiskit_optimization.algorithms)": [[22, "qiskit_optimization.algorithms.ADMMOptimizer", false]], "admmparameters (class in qiskit_optimization.algorithms)": [[23, "qiskit_optimization.algorithms.ADMMParameters", false]], "admmstate (class in qiskit_optimization.algorithms)": [[24, "qiskit_optimization.algorithms.ADMMState", false]], "aggregate() (baseaggregator method)": [[25, "qiskit_optimization.algorithms.BaseAggregator.aggregate", false]], "aggregate() (meanaggregator method)": [[34, "qiskit_optimization.algorithms.MeanAggregator.aggregate", false]], "aggregation (qaoa attribute)": [[84, "qiskit_optimization.minimum_eigensolvers.QAOA.aggregation", false]], "aggregation (samplingvqe attribute)": [[87, "qiskit_optimization.minimum_eigensolvers.SamplingVQE.aggregation", false]], "algorithm_globals (in module qiskit_optimization.utils)": [[112, "qiskit_optimization.utils.algorithm_globals", false]], "all_iterations (intermediateresult attribute)": [[33, "qiskit_optimization.algorithms.IntermediateResult.ALL_ITERATIONS", false]], "ansatz (samplingvqe attribute)": [[87, "qiskit_optimization.minimum_eigensolvers.SamplingVQE.ansatz", false]], "ansatz (vqe attribute)": [[89, "qiskit_optimization.minimum_eigensolvers.VQE.ansatz", false]], "as_tuple() (variable method)": [[105, "qiskit_optimization.problems.Variable.as_tuple", false]], "aux_operators_evaluated (numpyminimumeigensolverresult attribute)": [[83, "qiskit_optimization.minimum_eigensolvers.NumPyMinimumEigensolverResult.aux_operators_evaluated", false]], "aux_operators_evaluated (samplingminimumeigensolverresult attribute)": [[86, "qiskit_optimization.minimum_eigensolvers.SamplingMinimumEigensolverResult.aux_operators_evaluated", false]], "aux_operators_evaluated (samplingvqeresult attribute)": [[88, "qiskit_optimization.minimum_eigensolvers.SamplingVQEResult.aux_operators_evaluated", false]], "aux_operators_evaluated (vqeresult attribute)": [[90, "qiskit_optimization.minimum_eigensolvers.VQEResult.aux_operators_evaluated", false]], "baseaggregator (class in qiskit_optimization.algorithms)": [[25, "qiskit_optimization.algorithms.BaseAggregator", false]], "bases (roundingresult attribute)": [[55, "qiskit_optimization.algorithms.qrao.RoundingResult.bases", false]], "basis_counts (roundingresult attribute)": [[55, "qiskit_optimization.algorithms.qrao.RoundingResult.basis_counts", false]], "basis_sampling (magicrounding attribute)": [[50, "qiskit_optimization.algorithms.qrao.MagicRounding.basis_sampling", false]], "basis_shots (roundingresult attribute)": [[55, "qiskit_optimization.algorithms.qrao.RoundingResult.basis_shots", false]], "best_measurement (samplingminimumeigensolverresult attribute)": [[86, "qiskit_optimization.minimum_eigensolvers.SamplingMinimumEigensolverResult.best_measurement", false]], "best_measurement (samplingvqeresult attribute)": [[88, "qiskit_optimization.minimum_eigensolvers.SamplingVQEResult.best_measurement", false]], "binary_var() (quadraticprogram method)": [[20, "qiskit_optimization.QuadraticProgram.binary_var", false]], "binary_var_dict() (quadraticprogram method)": [[20, "qiskit_optimization.QuadraticProgram.binary_var_dict", false]], "binary_var_list() (quadraticprogram method)": [[20, "qiskit_optimization.QuadraticProgram.binary_var_list", false]], "binpacking (class in qiskit_optimization.applications)": [[58, "qiskit_optimization.applications.BinPacking", false]], "bounds (linearexpression attribute)": [[100, "qiskit_optimization.problems.LinearExpression.bounds", false]], "bounds (quadraticexpression attribute)": [[102, "qiskit_optimization.problems.QuadraticExpression.bounds", false]], "bounds_support_level (cobyla attribute)": [[91, "qiskit_optimization.optimizers.COBYLA.bounds_support_level", false]], "bounds_support_level (nelder_mead attribute)": [[93, "qiskit_optimization.optimizers.NELDER_MEAD.bounds_support_level", false]], "bounds_support_level (optimizer attribute)": [[94, "qiskit_optimization.optimizers.Optimizer.bounds_support_level", false]], "bounds_support_level (scipyoptimizer attribute)": [[97, "qiskit_optimization.optimizers.SciPyOptimizer.bounds_support_level", false]], "bounds_support_level (spsa attribute)": [[96, "qiskit_optimization.optimizers.SPSA.bounds_support_level", false]], "calibrate() (spsa static method)": [[96, "qiskit_optimization.optimizers.SPSA.calibrate", false]], "callback (qaoa attribute)": [[84, "qiskit_optimization.minimum_eigensolvers.QAOA.callback", false]], "callback (samplingvqe attribute)": [[87, "qiskit_optimization.minimum_eigensolvers.SamplingVQE.callback", false]], "callback (vqe attribute)": [[89, "qiskit_optimization.minimum_eigensolvers.VQE.callback", false]], "circuit (roundingcontext attribute)": [[54, "qiskit_optimization.algorithms.qrao.RoundingContext.circuit", false]], "clear() (quadraticprogram method)": [[20, "qiskit_optimization.QuadraticProgram.clear", false]], "clip (cobylaoptimizer attribute)": [[26, "qiskit_optimization.algorithms.CobylaOptimizer.clip", false]], "clip (multistartoptimizer attribute)": [[37, "qiskit_optimization.algorithms.MultiStartOptimizer.clip", false]], "clip (slsqpoptimizer attribute)": [[45, "qiskit_optimization.algorithms.SlsqpOptimizer.clip", false]], "clique (class in qiskit_optimization.applications)": [[59, "qiskit_optimization.applications.Clique", false]], "cobyla (class in qiskit_optimization.optimizers)": [[91, "qiskit_optimization.optimizers.COBYLA", false]], "cobylaoptimizer (class in qiskit_optimization.algorithms)": [[26, "qiskit_optimization.algorithms.CobylaOptimizer", false]], "coefficients (linearexpression attribute)": [[100, "qiskit_optimization.problems.LinearExpression.coefficients", false]], "coefficients (quadraticexpression attribute)": [[102, "qiskit_optimization.problems.QuadraticExpression.coefficients", false]], "combine() (numpyminimumeigensolverresult method)": [[83, "qiskit_optimization.minimum_eigensolvers.NumPyMinimumEigensolverResult.combine", false]], "combine() (optimizerresult method)": [[95, "qiskit_optimization.optimizers.OptimizerResult.combine", false]], "combine() (samplingminimumeigensolverresult method)": [[86, "qiskit_optimization.minimum_eigensolvers.SamplingMinimumEigensolverResult.combine", false]], "combine() (samplingvqeresult method)": [[88, "qiskit_optimization.minimum_eigensolvers.SamplingVQEResult.combine", false]], "combine() (vqeresult method)": [[90, "qiskit_optimization.minimum_eigensolvers.VQEResult.combine", false]], "compression_ratio (quantumrandomaccessencoding attribute)": [[51, "qiskit_optimization.algorithms.qrao.QuantumRandomAccessEncoding.compression_ratio", false]], "compute_minimum_eigenvalue() (numpyminimumeigensolver method)": [[82, "qiskit_optimization.minimum_eigensolvers.NumPyMinimumEigensolver.compute_minimum_eigenvalue", false]], "compute_minimum_eigenvalue() (qaoa method)": [[84, "qiskit_optimization.minimum_eigensolvers.QAOA.compute_minimum_eigenvalue", false]], "compute_minimum_eigenvalue() (samplingminimumeigensolver method)": [[85, "qiskit_optimization.minimum_eigensolvers.SamplingMinimumEigensolver.compute_minimum_eigenvalue", false]], "compute_minimum_eigenvalue() (samplingvqe method)": [[87, "qiskit_optimization.minimum_eigensolvers.SamplingVQE.compute_minimum_eigenvalue", false]], "compute_minimum_eigenvalue() (vqe method)": [[89, "qiskit_optimization.minimum_eigensolvers.VQE.compute_minimum_eigenvalue", false]], "constant (quadraticobjective attribute)": [[103, "qiskit_optimization.problems.QuadraticObjective.constant", false]], "constraint (class in qiskit_optimization.problems)": [[98, "qiskit_optimization.problems.Constraint", false]], "continuous_var() (quadraticprogram method)": [[20, "qiskit_optimization.QuadraticProgram.continuous_var", false]], "continuous_var_dict() (quadraticprogram method)": [[20, "qiskit_optimization.QuadraticProgram.continuous_var_dict", false]], "continuous_var_list() (quadraticprogram method)": [[20, "qiskit_optimization.QuadraticProgram.continuous_var_list", false]], "convert() (inequalitytoequality method)": [[73, "qiskit_optimization.converters.InequalityToEquality.convert", false]], "convert() (integertobinary method)": [[74, "qiskit_optimization.converters.IntegerToBinary.convert", false]], "convert() (linearequalitytopenalty method)": [[75, "qiskit_optimization.converters.LinearEqualityToPenalty.convert", false]], "convert() (linearinequalitytopenalty method)": [[76, "qiskit_optimization.converters.LinearInequalityToPenalty.convert", false]], "convert() (maximizetominimize method)": [[77, "qiskit_optimization.converters.MaximizeToMinimize.convert", false]], "convert() (minimizetomaximize method)": [[78, "qiskit_optimization.converters.MinimizeToMaximize.convert", false]], "convert() (quadraticprogramconverter method)": [[79, "qiskit_optimization.converters.QuadraticProgramConverter.convert", false]], "convert() (quadraticprogramtoqubo method)": [[80, "qiskit_optimization.converters.QuadraticProgramToQubo.convert", false]], "cost_function_evals (samplingvqeresult attribute)": [[88, "qiskit_optimization.minimum_eigensolvers.SamplingVQEResult.cost_function_evals", false]], "cost_function_evals (vqeresult attribute)": [[90, "qiskit_optimization.minimum_eigensolvers.VQEResult.cost_function_evals", false]], "cplex_parameters (cplexoptimizer attribute)": [[27, "qiskit_optimization.algorithms.CplexOptimizer.cplex_parameters", false]], "cplexoptimizer (class in qiskit_optimization.algorithms)": [[27, "qiskit_optimization.algorithms.CplexOptimizer", false]], "create_initial_state() (warmstartqaoafactory method)": [[47, "qiskit_optimization.algorithms.WarmStartQAOAFactory.create_initial_state", false]], "create_initial_variables() (warmstartqaoafactory method)": [[47, "qiskit_optimization.algorithms.WarmStartQAOAFactory.create_initial_variables", false]], "create_mixer() (warmstartqaoafactory method)": [[47, "qiskit_optimization.algorithms.WarmStartQAOAFactory.create_mixer", false]], "create_random_instance() (tsp static method)": [[70, "qiskit_optimization.applications.Tsp.create_random_instance", false]], "create_random_instance() (vehiclerouting static method)": [[71, "qiskit_optimization.applications.VehicleRouting.create_random_instance", false]], "depot (vehiclerouting attribute)": [[71, "qiskit_optimization.applications.VehicleRouting.depot", false]], "disorder() (skmodel method)": [[67, "qiskit_optimization.applications.SKModel.disorder", false]], "disp (cplexoptimizer attribute)": [[27, "qiskit_optimization.algorithms.CplexOptimizer.disp", false]], "disp (gurobioptimizer attribute)": [[32, "qiskit_optimization.algorithms.GurobiOptimizer.disp", false]], "disp (scipymilpoptimizer attribute)": [[43, "qiskit_optimization.algorithms.ScipyMilpOptimizer.disp", false]], "draw() (clique method)": [[59, "qiskit_optimization.applications.Clique.draw", false]], "draw() (graphoptimizationapplication method)": [[61, "qiskit_optimization.applications.GraphOptimizationApplication.draw", false]], "draw() (graphpartition method)": [[62, "qiskit_optimization.applications.GraphPartition.draw", false]], "draw() (maxcut method)": [[64, "qiskit_optimization.applications.Maxcut.draw", false]], "draw() (stableset method)": [[69, "qiskit_optimization.applications.StableSet.draw", false]], "draw() (tsp method)": [[70, "qiskit_optimization.applications.Tsp.draw", false]], "draw() (vehiclerouting method)": [[71, "qiskit_optimization.applications.VehicleRouting.draw", false]], "draw() (vertexcover method)": [[72, "qiskit_optimization.applications.VertexCover.draw", false]], "eigenstate (numpyminimumeigensolverresult attribute)": [[83, "qiskit_optimization.minimum_eigensolvers.NumPyMinimumEigensolverResult.eigenstate", false]], "eigenstate (samplingminimumeigensolverresult attribute)": [[86, "qiskit_optimization.minimum_eigensolvers.SamplingMinimumEigensolverResult.eigenstate", false]], "eigenstate (samplingvqeresult attribute)": [[88, "qiskit_optimization.minimum_eigensolvers.SamplingVQEResult.eigenstate", false]], "eigenvalue (numpyminimumeigensolverresult attribute)": [[83, "qiskit_optimization.minimum_eigensolvers.NumPyMinimumEigensolverResult.eigenvalue", false]], "eigenvalue (samplingminimumeigensolverresult attribute)": [[86, "qiskit_optimization.minimum_eigensolvers.SamplingMinimumEigensolverResult.eigenvalue", false]], "eigenvalue (samplingvqeresult attribute)": [[88, "qiskit_optimization.minimum_eigensolvers.SamplingVQEResult.eigenvalue", false]], "eigenvalue (vqeresult attribute)": [[90, "qiskit_optimization.minimum_eigensolvers.VQEResult.eigenvalue", false]], "encode() (quantumrandomaccessencoding method)": [[51, "qiskit_optimization.algorithms.qrao.QuantumRandomAccessEncoding.encode", false]], "encoding (quantumrandomaccessoptimizationresult attribute)": [[52, "qiskit_optimization.algorithms.qrao.QuantumRandomAccessOptimizationResult.encoding", false]], "encoding (roundingcontext attribute)": [[54, "qiskit_optimization.algorithms.qrao.RoundingContext.encoding", false]], "encodingcommutationverifier (class in qiskit_optimization.algorithms.qrao)": [[49, "qiskit_optimization.algorithms.qrao.EncodingCommutationVerifier", false]], "estimate_stddev() (spsa static method)": [[96, "qiskit_optimization.optimizers.SPSA.estimate_stddev", false]], "estimator (vqe attribute)": [[89, "qiskit_optimization.minimum_eigensolvers.VQE.estimator", false]], "evaluate() (constraint method)": [[98, "qiskit_optimization.problems.Constraint.evaluate", false]], "evaluate() (linearconstraint method)": [[99, "qiskit_optimization.problems.LinearConstraint.evaluate", false]], "evaluate() (linearexpression method)": [[100, "qiskit_optimization.problems.LinearExpression.evaluate", false]], "evaluate() (quadraticconstraint method)": [[101, "qiskit_optimization.problems.QuadraticConstraint.evaluate", false]], "evaluate() (quadraticexpression method)": [[102, "qiskit_optimization.problems.QuadraticExpression.evaluate", false]], "evaluate() (quadraticobjective method)": [[103, "qiskit_optimization.problems.QuadraticObjective.evaluate", false]], "evaluate_gradient() (linearexpression method)": [[100, "qiskit_optimization.problems.LinearExpression.evaluate_gradient", false]], "evaluate_gradient() (quadraticexpression method)": [[102, "qiskit_optimization.problems.QuadraticExpression.evaluate_gradient", false]], "evaluate_gradient() (quadraticobjective method)": [[103, "qiskit_optimization.problems.QuadraticObjective.evaluate_gradient", false]], "exactcover (class in qiskit_optimization.applications)": [[60, "qiskit_optimization.applications.ExactCover", false]], "expectation_values (roundingcontext attribute)": [[54, "qiskit_optimization.algorithms.qrao.RoundingContext.expectation_values", false]], "expectation_values (roundingresult attribute)": [[55, "qiskit_optimization.algorithms.qrao.RoundingResult.expectation_values", false]], "export_as_lp_string() (quadraticprogram method)": [[20, "qiskit_optimization.QuadraticProgram.export_as_lp_string", false]], "failure (optimizationresultstatus attribute)": [[40, "qiskit_optimization.algorithms.OptimizationResultStatus.FAILURE", false]], "filter_criterion (numpyminimumeigensolver attribute)": [[82, "qiskit_optimization.minimum_eigensolvers.NumPyMinimumEigensolver.filter_criterion", false]], "freeze() (quantumrandomaccessencoding method)": [[51, "qiskit_optimization.algorithms.qrao.QuantumRandomAccessEncoding.freeze", false]], "from_docplex_mp() (in module qiskit_optimization.translators)": [[106, "qiskit_optimization.translators.from_docplex_mp", false]], "from_gurobipy() (in module qiskit_optimization.translators)": [[107, "qiskit_optimization.translators.from_gurobipy", false]], "from_ising() (in module qiskit_optimization.translators)": [[108, "qiskit_optimization.translators.from_ising", false]], "from_ising() (quadraticprogram method)": [[20, "qiskit_optimization.QuadraticProgram.from_ising", false]], "frozen (quantumrandomaccessencoding attribute)": [[51, "qiskit_optimization.algorithms.qrao.QuantumRandomAccessEncoding.frozen", false]], "fun (optimizerresult attribute)": [[95, "qiskit_optimization.optimizers.OptimizerResult.fun", false]], "fval (admmoptimizationresult attribute)": [[21, "qiskit_optimization.algorithms.ADMMOptimizationResult.fval", false]], "fval (goemanswilliamsonoptimizationresult attribute)": [[28, "qiskit_optimization.algorithms.GoemansWilliamsonOptimizationResult.fval", false]], "fval (groveroptimizationresult attribute)": [[30, "qiskit_optimization.algorithms.GroverOptimizationResult.fval", false]], "fval (minimumeigenoptimizationresult attribute)": [[35, "qiskit_optimization.algorithms.MinimumEigenOptimizationResult.fval", false]], "fval (optimizationresult attribute)": [[39, "qiskit_optimization.algorithms.OptimizationResult.fval", false]], "fval (quantumrandomaccessoptimizationresult attribute)": [[52, "qiskit_optimization.algorithms.qrao.QuantumRandomAccessOptimizationResult.fval", false]], "fval (recursiveminimumeigenoptimizationresult attribute)": [[41, "qiskit_optimization.algorithms.RecursiveMinimumEigenOptimizationResult.fval", false]], "fval (slsqpoptimizationresult attribute)": [[44, "qiskit_optimization.algorithms.SlsqpOptimizationResult.fval", false]], "fval (solutionsample attribute)": [[46, "qiskit_optimization.algorithms.SolutionSample.fval", false]], "fx (slsqpoptimizationresult attribute)": [[44, "qiskit_optimization.algorithms.SlsqpOptimizationResult.fx", false]], "get_compatibility_msg() (admmoptimizer method)": [[22, "qiskit_optimization.algorithms.ADMMOptimizer.get_compatibility_msg", false]], "get_compatibility_msg() (cobylaoptimizer method)": [[26, "qiskit_optimization.algorithms.CobylaOptimizer.get_compatibility_msg", false]], "get_compatibility_msg() (cplexoptimizer method)": [[27, "qiskit_optimization.algorithms.CplexOptimizer.get_compatibility_msg", false]], "get_compatibility_msg() (goemanswilliamsonoptimizer method)": [[29, "qiskit_optimization.algorithms.GoemansWilliamsonOptimizer.get_compatibility_msg", false]], "get_compatibility_msg() (groveroptimizer method)": [[31, "qiskit_optimization.algorithms.GroverOptimizer.get_compatibility_msg", false]], "get_compatibility_msg() (gurobioptimizer method)": [[32, "qiskit_optimization.algorithms.GurobiOptimizer.get_compatibility_msg", false]], "get_compatibility_msg() (minimumeigenoptimizer method)": [[36, "qiskit_optimization.algorithms.MinimumEigenOptimizer.get_compatibility_msg", false]], "get_compatibility_msg() (multistartoptimizer method)": [[37, "qiskit_optimization.algorithms.MultiStartOptimizer.get_compatibility_msg", false]], "get_compatibility_msg() (optimizationalgorithm method)": [[38, "qiskit_optimization.algorithms.OptimizationAlgorithm.get_compatibility_msg", false]], "get_compatibility_msg() (quadraticprogramtoqubo static method)": [[80, "qiskit_optimization.converters.QuadraticProgramToQubo.get_compatibility_msg", false]], "get_compatibility_msg() (quantumrandomaccessoptimizer method)": [[53, "qiskit_optimization.algorithms.qrao.QuantumRandomAccessOptimizer.get_compatibility_msg", false]], "get_compatibility_msg() (recursiveminimumeigenoptimizer method)": [[42, "qiskit_optimization.algorithms.RecursiveMinimumEigenOptimizer.get_compatibility_msg", false]], "get_compatibility_msg() (scipymilpoptimizer method)": [[43, "qiskit_optimization.algorithms.ScipyMilpOptimizer.get_compatibility_msg", false]], "get_compatibility_msg() (slsqpoptimizer method)": [[45, "qiskit_optimization.algorithms.SlsqpOptimizer.get_compatibility_msg", false]], "get_compatibility_msg() (warmstartqaoaoptimizer method)": [[48, "qiskit_optimization.algorithms.WarmStartQAOAOptimizer.get_compatibility_msg", false]], "get_correlations() (admmoptimizationresult method)": [[21, "qiskit_optimization.algorithms.ADMMOptimizationResult.get_correlations", false]], "get_correlations() (goemanswilliamsonoptimizationresult method)": [[28, "qiskit_optimization.algorithms.GoemansWilliamsonOptimizationResult.get_correlations", false]], "get_correlations() (groveroptimizationresult method)": [[30, "qiskit_optimization.algorithms.GroverOptimizationResult.get_correlations", false]], "get_correlations() (minimumeigenoptimizationresult method)": [[35, "qiskit_optimization.algorithms.MinimumEigenOptimizationResult.get_correlations", false]], "get_correlations() (optimizationresult method)": [[39, "qiskit_optimization.algorithms.OptimizationResult.get_correlations", false]], "get_correlations() (quantumrandomaccessoptimizationresult method)": [[52, "qiskit_optimization.algorithms.qrao.QuantumRandomAccessOptimizationResult.get_correlations", false]], "get_correlations() (recursiveminimumeigenoptimizationresult method)": [[41, "qiskit_optimization.algorithms.RecursiveMinimumEigenOptimizationResult.get_correlations", false]], "get_correlations() (slsqpoptimizationresult method)": [[44, "qiskit_optimization.algorithms.SlsqpOptimizationResult.get_correlations", false]], "get_feasibility_info() (quadraticprogram method)": [[20, "qiskit_optimization.QuadraticProgram.get_feasibility_info", false]], "get_figure() (binpacking method)": [[58, "qiskit_optimization.applications.BinPacking.get_figure", false]], "get_gset_result() (maxcut static method)": [[64, "qiskit_optimization.applications.Maxcut.get_gset_result", false]], "get_linear_constraint() (quadraticprogram method)": [[20, "qiskit_optimization.QuadraticProgram.get_linear_constraint", false]], "get_num_binary_vars() (quadraticprogram method)": [[20, "qiskit_optimization.QuadraticProgram.get_num_binary_vars", false]], "get_num_continuous_vars() (quadraticprogram method)": [[20, "qiskit_optimization.QuadraticProgram.get_num_continuous_vars", false]], "get_num_integer_vars() (quadraticprogram method)": [[20, "qiskit_optimization.QuadraticProgram.get_num_integer_vars", false]], "get_num_linear_constraints() (quadraticprogram method)": [[20, "qiskit_optimization.QuadraticProgram.get_num_linear_constraints", false]], "get_num_quadratic_constraints() (quadraticprogram method)": [[20, "qiskit_optimization.QuadraticProgram.get_num_quadratic_constraints", false]], "get_num_vars() (quadraticprogram method)": [[20, "qiskit_optimization.QuadraticProgram.get_num_vars", false]], "get_quadratic_constraint() (quadraticprogram method)": [[20, "qiskit_optimization.QuadraticProgram.get_quadratic_constraint", false]], "get_support_level() (cobyla method)": [[91, "qiskit_optimization.optimizers.COBYLA.get_support_level", false]], "get_support_level() (nelder_mead method)": [[93, "qiskit_optimization.optimizers.NELDER_MEAD.get_support_level", false]], "get_support_level() (optimizer method)": [[94, "qiskit_optimization.optimizers.Optimizer.get_support_level", false]], "get_support_level() (scipyoptimizer method)": [[97, "qiskit_optimization.optimizers.SciPyOptimizer.get_support_level", false]], "get_support_level() (spsa method)": [[96, "qiskit_optimization.optimizers.SPSA.get_support_level", false]], "get_variable() (quadraticprogram method)": [[20, "qiskit_optimization.QuadraticProgram.get_variable", false]], "goemanswilliamsonoptimizationresult (class in qiskit_optimization.algorithms)": [[28, "qiskit_optimization.algorithms.GoemansWilliamsonOptimizationResult", false]], "goemanswilliamsonoptimizer (class in qiskit_optimization.algorithms)": [[29, "qiskit_optimization.algorithms.GoemansWilliamsonOptimizer", false]], "gradient (vqe attribute)": [[89, "qiskit_optimization.minimum_eigensolvers.VQE.gradient", false]], "gradient_num_diff() (cobyla static method)": [[91, "qiskit_optimization.optimizers.COBYLA.gradient_num_diff", false]], "gradient_num_diff() (nelder_mead static method)": [[93, "qiskit_optimization.optimizers.NELDER_MEAD.gradient_num_diff", false]], "gradient_num_diff() (optimizer static method)": [[94, "qiskit_optimization.optimizers.Optimizer.gradient_num_diff", false]], "gradient_num_diff() (scipyoptimizer static method)": [[97, "qiskit_optimization.optimizers.SciPyOptimizer.gradient_num_diff", false]], "gradient_num_diff() (spsa static method)": [[96, "qiskit_optimization.optimizers.SPSA.gradient_num_diff", false]], "gradient_support_level (cobyla attribute)": [[91, "qiskit_optimization.optimizers.COBYLA.gradient_support_level", false]], "gradient_support_level (nelder_mead attribute)": [[93, "qiskit_optimization.optimizers.NELDER_MEAD.gradient_support_level", false]], "gradient_support_level (optimizer attribute)": [[94, "qiskit_optimization.optimizers.Optimizer.gradient_support_level", false]], "gradient_support_level (scipyoptimizer attribute)": [[97, "qiskit_optimization.optimizers.SciPyOptimizer.gradient_support_level", false]], "gradient_support_level (spsa attribute)": [[96, "qiskit_optimization.optimizers.SPSA.gradient_support_level", false]], "graph (clique attribute)": [[59, "qiskit_optimization.applications.Clique.graph", false]], "graph (graphoptimizationapplication attribute)": [[61, "qiskit_optimization.applications.GraphOptimizationApplication.graph", false]], "graph (graphpartition attribute)": [[62, "qiskit_optimization.applications.GraphPartition.graph", false]], "graph (maxcut attribute)": [[64, "qiskit_optimization.applications.Maxcut.graph", false]], "graph (skmodel attribute)": [[67, "qiskit_optimization.applications.SKModel.graph", false]], "graph (stableset attribute)": [[69, "qiskit_optimization.applications.StableSet.graph", false]], "graph (tsp attribute)": [[70, "qiskit_optimization.applications.Tsp.graph", false]], "graph (vehiclerouting attribute)": [[71, "qiskit_optimization.applications.VehicleRouting.graph", false]], "graph (vertexcover attribute)": [[72, "qiskit_optimization.applications.VertexCover.graph", false]], "graphoptimizationapplication (class in qiskit_optimization.applications)": [[61, "qiskit_optimization.applications.GraphOptimizationApplication", false]], "graphpartition (class in qiskit_optimization.applications)": [[62, "qiskit_optimization.applications.GraphPartition", false]], "groveroptimizationresult (class in qiskit_optimization.algorithms)": [[30, "qiskit_optimization.algorithms.GroverOptimizationResult", false]], "groveroptimizer (class in qiskit_optimization.algorithms)": [[31, "qiskit_optimization.algorithms.GroverOptimizer", false]], "gurobioptimizer (class in qiskit_optimization.algorithms)": [[32, "qiskit_optimization.algorithms.GurobiOptimizer", false]], "history (recursiveminimumeigenoptimizationresult attribute)": [[41, "qiskit_optimization.algorithms.RecursiveMinimumEigenOptimizationResult.history", false]], "imode (slsqpoptimizationresult attribute)": [[44, "qiskit_optimization.algorithms.SlsqpOptimizationResult.imode", false]], "inequalitytoequality (class in qiskit_optimization.converters)": [[73, "qiskit_optimization.converters.InequalityToEquality", false]], "infeasible (optimizationresultstatus attribute)": [[40, "qiskit_optimization.algorithms.OptimizationResultStatus.INFEASIBLE", false]], "infinity (in module qiskit_optimization.infinity)": [[81, "qiskit_optimization.infinity.INFINITY", false]], "initial_point (qaoa attribute)": [[84, "qiskit_optimization.minimum_eigensolvers.QAOA.initial_point", false]], "initial_point (samplingvqe attribute)": [[87, "qiskit_optimization.minimum_eigensolvers.SamplingVQE.initial_point", false]], "initial_point (vqe attribute)": [[89, "qiskit_optimization.minimum_eigensolvers.VQE.initial_point", false]], "initial_point_support_level (cobyla attribute)": [[91, "qiskit_optimization.optimizers.COBYLA.initial_point_support_level", false]], "initial_point_support_level (nelder_mead attribute)": [[93, "qiskit_optimization.optimizers.NELDER_MEAD.initial_point_support_level", false]], "initial_point_support_level (optimizer attribute)": [[94, "qiskit_optimization.optimizers.Optimizer.initial_point_support_level", false]], "initial_point_support_level (scipyoptimizer attribute)": [[97, "qiskit_optimization.optimizers.SciPyOptimizer.initial_point_support_level", false]], "initial_point_support_level (spsa attribute)": [[96, "qiskit_optimization.optimizers.SPSA.initial_point_support_level", false]], "initial_state (qaoa attribute)": [[84, "qiskit_optimization.minimum_eigensolvers.QAOA.initial_state", false]], "integer_var() (quadraticprogram method)": [[20, "qiskit_optimization.QuadraticProgram.integer_var", false]], "integer_var_dict() (quadraticprogram method)": [[20, "qiskit_optimization.QuadraticProgram.integer_var_dict", false]], "integer_var_list() (quadraticprogram method)": [[20, "qiskit_optimization.QuadraticProgram.integer_var_list", false]], "integertobinary (class in qiskit_optimization.converters)": [[74, "qiskit_optimization.converters.IntegerToBinary", false]], "intermediate_fval (groveroptimizationresult attribute)": [[30, "qiskit_optimization.algorithms.GroverOptimizationResult.intermediate_fval", false]], "intermediateresult (class in qiskit_optimization.algorithms)": [[33, "qiskit_optimization.algorithms.IntermediateResult", false]], "interpret() (binpacking method)": [[58, "qiskit_optimization.applications.BinPacking.interpret", false]], "interpret() (clique method)": [[59, "qiskit_optimization.applications.Clique.interpret", false]], "interpret() (exactcover method)": [[60, "qiskit_optimization.applications.ExactCover.interpret", false]], "interpret() (graphoptimizationapplication method)": [[61, "qiskit_optimization.applications.GraphOptimizationApplication.interpret", false]], "interpret() (graphpartition method)": [[62, "qiskit_optimization.applications.GraphPartition.interpret", false]], "interpret() (inequalitytoequality method)": [[73, "qiskit_optimization.converters.InequalityToEquality.interpret", false]], "interpret() (integertobinary method)": [[74, "qiskit_optimization.converters.IntegerToBinary.interpret", false]], "interpret() (knapsack method)": [[63, "qiskit_optimization.applications.Knapsack.interpret", false]], "interpret() (linearequalitytopenalty method)": [[75, "qiskit_optimization.converters.LinearEqualityToPenalty.interpret", false]], "interpret() (linearinequalitytopenalty method)": [[76, "qiskit_optimization.converters.LinearInequalityToPenalty.interpret", false]], "interpret() (maxcut method)": [[64, "qiskit_optimization.applications.Maxcut.interpret", false]], "interpret() (maximizetominimize method)": [[77, "qiskit_optimization.converters.MaximizeToMinimize.interpret", false]], "interpret() (minimizetomaximize method)": [[78, "qiskit_optimization.converters.MinimizeToMaximize.interpret", false]], "interpret() (numberpartition method)": [[65, "qiskit_optimization.applications.NumberPartition.interpret", false]], "interpret() (optimizationapplication method)": [[66, "qiskit_optimization.applications.OptimizationApplication.interpret", false]], "interpret() (quadraticprogramconverter method)": [[79, "qiskit_optimization.converters.QuadraticProgramConverter.interpret", false]], "interpret() (quadraticprogramtoqubo method)": [[80, "qiskit_optimization.converters.QuadraticProgramToQubo.interpret", false]], "interpret() (setpacking method)": [[68, "qiskit_optimization.applications.SetPacking.interpret", false]], "interpret() (skmodel method)": [[67, "qiskit_optimization.applications.SKModel.interpret", false]], "interpret() (stableset method)": [[69, "qiskit_optimization.applications.StableSet.interpret", false]], "interpret() (tsp method)": [[70, "qiskit_optimization.applications.Tsp.interpret", false]], "interpret() (vehiclerouting method)": [[71, "qiskit_optimization.applications.VehicleRouting.interpret", false]], "interpret() (vertexcover method)": [[72, "qiskit_optimization.applications.VertexCover.interpret", false]], "is_bounds_ignored (cobyla attribute)": [[91, "qiskit_optimization.optimizers.COBYLA.is_bounds_ignored", false]], "is_bounds_ignored (nelder_mead attribute)": [[93, "qiskit_optimization.optimizers.NELDER_MEAD.is_bounds_ignored", false]], "is_bounds_ignored (optimizer attribute)": [[94, "qiskit_optimization.optimizers.Optimizer.is_bounds_ignored", false]], "is_bounds_ignored (scipyoptimizer attribute)": [[97, "qiskit_optimization.optimizers.SciPyOptimizer.is_bounds_ignored", false]], "is_bounds_ignored (spsa attribute)": [[96, "qiskit_optimization.optimizers.SPSA.is_bounds_ignored", false]], "is_bounds_required (cobyla attribute)": [[91, "qiskit_optimization.optimizers.COBYLA.is_bounds_required", false]], "is_bounds_required (nelder_mead attribute)": [[93, "qiskit_optimization.optimizers.NELDER_MEAD.is_bounds_required", false]], "is_bounds_required (optimizer attribute)": [[94, "qiskit_optimization.optimizers.Optimizer.is_bounds_required", false]], "is_bounds_required (scipyoptimizer attribute)": [[97, "qiskit_optimization.optimizers.SciPyOptimizer.is_bounds_required", false]], "is_bounds_required (spsa attribute)": [[96, "qiskit_optimization.optimizers.SPSA.is_bounds_required", false]], "is_bounds_supported (cobyla attribute)": [[91, "qiskit_optimization.optimizers.COBYLA.is_bounds_supported", false]], "is_bounds_supported (nelder_mead attribute)": [[93, "qiskit_optimization.optimizers.NELDER_MEAD.is_bounds_supported", false]], "is_bounds_supported (optimizer attribute)": [[94, "qiskit_optimization.optimizers.Optimizer.is_bounds_supported", false]], "is_bounds_supported (scipyoptimizer attribute)": [[97, "qiskit_optimization.optimizers.SciPyOptimizer.is_bounds_supported", false]], "is_bounds_supported (spsa attribute)": [[96, "qiskit_optimization.optimizers.SPSA.is_bounds_supported", false]], "is_compatible() (admmoptimizer method)": [[22, "qiskit_optimization.algorithms.ADMMOptimizer.is_compatible", false]], "is_compatible() (cobylaoptimizer method)": [[26, "qiskit_optimization.algorithms.CobylaOptimizer.is_compatible", false]], "is_compatible() (cplexoptimizer method)": [[27, "qiskit_optimization.algorithms.CplexOptimizer.is_compatible", false]], "is_compatible() (goemanswilliamsonoptimizer method)": [[29, "qiskit_optimization.algorithms.GoemansWilliamsonOptimizer.is_compatible", false]], "is_compatible() (groveroptimizer method)": [[31, "qiskit_optimization.algorithms.GroverOptimizer.is_compatible", false]], "is_compatible() (gurobioptimizer method)": [[32, "qiskit_optimization.algorithms.GurobiOptimizer.is_compatible", false]], "is_compatible() (minimumeigenoptimizer method)": [[36, "qiskit_optimization.algorithms.MinimumEigenOptimizer.is_compatible", false]], "is_compatible() (multistartoptimizer method)": [[37, "qiskit_optimization.algorithms.MultiStartOptimizer.is_compatible", false]], "is_compatible() (optimizationalgorithm method)": [[38, "qiskit_optimization.algorithms.OptimizationAlgorithm.is_compatible", false]], "is_compatible() (quadraticprogramtoqubo method)": [[80, "qiskit_optimization.converters.QuadraticProgramToQubo.is_compatible", false]], "is_compatible() (quantumrandomaccessoptimizer method)": [[53, "qiskit_optimization.algorithms.qrao.QuantumRandomAccessOptimizer.is_compatible", false]], "is_compatible() (recursiveminimumeigenoptimizer method)": [[42, "qiskit_optimization.algorithms.RecursiveMinimumEigenOptimizer.is_compatible", false]], "is_compatible() (scipymilpoptimizer method)": [[43, "qiskit_optimization.algorithms.ScipyMilpOptimizer.is_compatible", false]], "is_compatible() (slsqpoptimizer method)": [[45, "qiskit_optimization.algorithms.SlsqpOptimizer.is_compatible", false]], "is_compatible() (warmstartqaoaoptimizer method)": [[48, "qiskit_optimization.algorithms.WarmStartQAOAOptimizer.is_compatible", false]], "is_cplex_installed() (cplexoptimizer static method)": [[27, "qiskit_optimization.algorithms.CplexOptimizer.is_cplex_installed", false]], "is_feasible() (quadraticprogram method)": [[20, "qiskit_optimization.QuadraticProgram.is_feasible", false]], "is_gradient_ignored (cobyla attribute)": [[91, "qiskit_optimization.optimizers.COBYLA.is_gradient_ignored", false]], "is_gradient_ignored (nelder_mead attribute)": [[93, "qiskit_optimization.optimizers.NELDER_MEAD.is_gradient_ignored", false]], "is_gradient_ignored (optimizer attribute)": [[94, "qiskit_optimization.optimizers.Optimizer.is_gradient_ignored", false]], "is_gradient_ignored (scipyoptimizer attribute)": [[97, "qiskit_optimization.optimizers.SciPyOptimizer.is_gradient_ignored", false]], "is_gradient_ignored (spsa attribute)": [[96, "qiskit_optimization.optimizers.SPSA.is_gradient_ignored", false]], "is_gradient_required (cobyla attribute)": [[91, "qiskit_optimization.optimizers.COBYLA.is_gradient_required", false]], "is_gradient_required (nelder_mead attribute)": [[93, "qiskit_optimization.optimizers.NELDER_MEAD.is_gradient_required", false]], "is_gradient_required (optimizer attribute)": [[94, "qiskit_optimization.optimizers.Optimizer.is_gradient_required", false]], "is_gradient_required (scipyoptimizer attribute)": [[97, "qiskit_optimization.optimizers.SciPyOptimizer.is_gradient_required", false]], "is_gradient_required (spsa attribute)": [[96, "qiskit_optimization.optimizers.SPSA.is_gradient_required", false]], "is_gradient_supported (cobyla attribute)": [[91, "qiskit_optimization.optimizers.COBYLA.is_gradient_supported", false]], "is_gradient_supported (nelder_mead attribute)": [[93, "qiskit_optimization.optimizers.NELDER_MEAD.is_gradient_supported", false]], "is_gradient_supported (optimizer attribute)": [[94, "qiskit_optimization.optimizers.Optimizer.is_gradient_supported", false]], "is_gradient_supported (scipyoptimizer attribute)": [[97, "qiskit_optimization.optimizers.SciPyOptimizer.is_gradient_supported", false]], "is_gradient_supported (spsa attribute)": [[96, "qiskit_optimization.optimizers.SPSA.is_gradient_supported", false]], "is_gurobi_installed() (gurobioptimizer static method)": [[32, "qiskit_optimization.algorithms.GurobiOptimizer.is_gurobi_installed", false]], "is_initial_point_ignored (cobyla attribute)": [[91, "qiskit_optimization.optimizers.COBYLA.is_initial_point_ignored", false]], "is_initial_point_ignored (nelder_mead attribute)": [[93, "qiskit_optimization.optimizers.NELDER_MEAD.is_initial_point_ignored", false]], "is_initial_point_ignored (optimizer attribute)": [[94, "qiskit_optimization.optimizers.Optimizer.is_initial_point_ignored", false]], "is_initial_point_ignored (scipyoptimizer attribute)": [[97, "qiskit_optimization.optimizers.SciPyOptimizer.is_initial_point_ignored", false]], "is_initial_point_ignored (spsa attribute)": [[96, "qiskit_optimization.optimizers.SPSA.is_initial_point_ignored", false]], "is_initial_point_required (cobyla attribute)": [[91, "qiskit_optimization.optimizers.COBYLA.is_initial_point_required", false]], "is_initial_point_required (nelder_mead attribute)": [[93, "qiskit_optimization.optimizers.NELDER_MEAD.is_initial_point_required", false]], "is_initial_point_required (optimizer attribute)": [[94, "qiskit_optimization.optimizers.Optimizer.is_initial_point_required", false]], "is_initial_point_required (scipyoptimizer attribute)": [[97, "qiskit_optimization.optimizers.SciPyOptimizer.is_initial_point_required", false]], "is_initial_point_required (spsa attribute)": [[96, "qiskit_optimization.optimizers.SPSA.is_initial_point_required", false]], "is_initial_point_supported (cobyla attribute)": [[91, "qiskit_optimization.optimizers.COBYLA.is_initial_point_supported", false]], "is_initial_point_supported (nelder_mead attribute)": [[93, "qiskit_optimization.optimizers.NELDER_MEAD.is_initial_point_supported", false]], "is_initial_point_supported (optimizer attribute)": [[94, "qiskit_optimization.optimizers.Optimizer.is_initial_point_supported", false]], "is_initial_point_supported (scipyoptimizer attribute)": [[97, "qiskit_optimization.optimizers.SciPyOptimizer.is_initial_point_supported", false]], "is_initial_point_supported (spsa attribute)": [[96, "qiskit_optimization.optimizers.SPSA.is_initial_point_supported", false]], "its (slsqpoptimizationresult attribute)": [[44, "qiskit_optimization.algorithms.SlsqpOptimizationResult.its", false]], "jac (optimizerresult attribute)": [[95, "qiskit_optimization.optimizers.OptimizerResult.jac", false]], "knapsack (class in qiskit_optimization.applications)": [[63, "qiskit_optimization.applications.Knapsack", false]], "last_iteration (intermediateresult attribute)": [[33, "qiskit_optimization.algorithms.IntermediateResult.LAST_ITERATION", false]], "linear (linearconstraint attribute)": [[99, "qiskit_optimization.problems.LinearConstraint.linear", false]], "linear (quadraticconstraint attribute)": [[101, "qiskit_optimization.problems.QuadraticConstraint.linear", false]], "linear (quadraticobjective attribute)": [[103, "qiskit_optimization.problems.QuadraticObjective.linear", false]], "linear_constraint() (quadraticprogram method)": [[20, "qiskit_optimization.QuadraticProgram.linear_constraint", false]], "linear_constraints (quadraticprogram attribute)": [[20, "qiskit_optimization.QuadraticProgram.linear_constraints", false]], "linear_constraints_index (quadraticprogram attribute)": [[20, "qiskit_optimization.QuadraticProgram.linear_constraints_index", false]], "linearconstraint (class in qiskit_optimization.problems)": [[99, "qiskit_optimization.problems.LinearConstraint", false]], "linearequalitytopenalty (class in qiskit_optimization.converters)": [[75, "qiskit_optimization.converters.LinearEqualityToPenalty", false]], "linearexpression (class in qiskit_optimization.problems)": [[100, "qiskit_optimization.problems.LinearExpression", false]], "linearinequalitytopenalty (class in qiskit_optimization.converters)": [[76, "qiskit_optimization.converters.LinearInequalityToPenalty", false]], "lowerbound (variable attribute)": [[105, "qiskit_optimization.problems.Variable.lowerbound", false]], "magicrounding (class in qiskit_optimization.algorithms.qrao)": [[50, "qiskit_optimization.algorithms.qrao.MagicRounding", false]], "max_cut_value() (goemanswilliamsonoptimizer static method)": [[29, "qiskit_optimization.algorithms.GoemansWilliamsonOptimizer.max_cut_value", false]], "max_vars_per_qubit (quantumrandomaccessencoding attribute)": [[51, "qiskit_optimization.algorithms.qrao.QuantumRandomAccessEncoding.max_vars_per_qubit", false]], "max_vars_per_qubit (quantumrandomaccessoptimizer attribute)": [[53, "qiskit_optimization.algorithms.qrao.QuantumRandomAccessOptimizer.max_vars_per_qubit", false]], "max_weight (knapsack attribute)": [[63, "qiskit_optimization.applications.Knapsack.max_weight", false]], "maxcut (class in qiskit_optimization.applications)": [[64, "qiskit_optimization.applications.Maxcut", false]], "maximize() (quadraticprogram method)": [[20, "qiskit_optimization.QuadraticProgram.maximize", false]], "maximizetominimize (class in qiskit_optimization.converters)": [[77, "qiskit_optimization.converters.MaximizeToMinimize", false]], "meanaggregator (class in qiskit_optimization.algorithms)": [[34, "qiskit_optimization.algorithms.MeanAggregator", false]], "min_eigen_solver (minimumeigenoptimizer attribute)": [[36, "qiskit_optimization.algorithms.MinimumEigenOptimizer.min_eigen_solver", false]], "min_eigen_solver (quantumrandomaccessoptimizer attribute)": [[53, "qiskit_optimization.algorithms.qrao.QuantumRandomAccessOptimizer.min_eigen_solver", false]], "min_eigen_solver (warmstartqaoaoptimizer attribute)": [[48, "qiskit_optimization.algorithms.WarmStartQAOAOptimizer.min_eigen_solver", false]], "min_eigen_solver_result (minimumeigenoptimizationresult attribute)": [[35, "qiskit_optimization.algorithms.MinimumEigenOptimizationResult.min_eigen_solver_result", false]], "minimize() (cobyla method)": [[91, "qiskit_optimization.optimizers.COBYLA.minimize", false]], "minimize() (nelder_mead method)": [[93, "qiskit_optimization.optimizers.NELDER_MEAD.minimize", false]], "minimize() (optimizer method)": [[94, "qiskit_optimization.optimizers.Optimizer.minimize", false]], "minimize() (quadraticprogram method)": [[20, "qiskit_optimization.QuadraticProgram.minimize", false]], "minimize() (scipyoptimizer method)": [[97, "qiskit_optimization.optimizers.SciPyOptimizer.minimize", false]], "minimize() (spsa method)": [[96, "qiskit_optimization.optimizers.SPSA.minimize", false]], "minimizer (class in qiskit_optimization.optimizers)": [[92, "qiskit_optimization.optimizers.Minimizer", false]], "minimizetomaximize (class in qiskit_optimization.converters)": [[78, "qiskit_optimization.converters.MinimizeToMaximize", false]], "minimum_recovery_probability (quantumrandomaccessencoding attribute)": [[51, "qiskit_optimization.algorithms.qrao.QuantumRandomAccessEncoding.minimum_recovery_probability", false]], "minimumeigenoptimizationresult (class in qiskit_optimization.algorithms)": [[35, "qiskit_optimization.algorithms.MinimumEigenOptimizationResult", false]], "minimumeigenoptimizer (class in qiskit_optimization.algorithms)": [[36, "qiskit_optimization.algorithms.MinimumEigenOptimizer", false]], "mixer (qaoa attribute)": [[84, "qiskit_optimization.minimum_eigensolvers.QAOA.mixer", false]], "mode (inequalitytoequality attribute)": [[73, "qiskit_optimization.converters.InequalityToEquality.mode", false]], "module": [[0, "module-qiskit_optimization", false], [1, "module-qiskit_optimization.algorithms", false], [2, "module-qiskit_optimization.algorithms.qrao", false], [3, "module-qiskit_optimization.applications", false], [4, "module-qiskit_optimization.converters", false], [5, "module-qiskit_optimization.minimum_eigensolvers", false], [6, "module-qiskit_optimization.optimizers", false], [7, "module-qiskit_optimization.problems", false], [8, "module-qiskit_optimization.translators", false], [9, "module-qiskit_optimization.utils", false]], "multi_start_solve() (cobylaoptimizer method)": [[26, "qiskit_optimization.algorithms.CobylaOptimizer.multi_start_solve", false]], "multi_start_solve() (multistartoptimizer method)": [[37, "qiskit_optimization.algorithms.MultiStartOptimizer.multi_start_solve", false]], "multi_start_solve() (slsqpoptimizer method)": [[45, "qiskit_optimization.algorithms.SlsqpOptimizer.multi_start_solve", false]], "multistartoptimizer (class in qiskit_optimization.algorithms)": [[37, "qiskit_optimization.algorithms.MultiStartOptimizer", false]], "n_input_qubits (groveroptimizationresult attribute)": [[30, "qiskit_optimization.algorithms.GroverOptimizationResult.n_input_qubits", false]], "n_output_qubits (groveroptimizationresult attribute)": [[30, "qiskit_optimization.algorithms.GroverOptimizationResult.n_output_qubits", false]], "name (constraint attribute)": [[98, "qiskit_optimization.problems.Constraint.name", false]], "name (linearconstraint attribute)": [[99, "qiskit_optimization.problems.LinearConstraint.name", false]], "name (quadraticconstraint attribute)": [[101, "qiskit_optimization.problems.QuadraticConstraint.name", false]], "name (quadraticprogram attribute)": [[20, "qiskit_optimization.QuadraticProgram.name", false]], "name (variable attribute)": [[105, "qiskit_optimization.problems.Variable.name", false]], "nelder_mead (class in qiskit_optimization.optimizers)": [[93, "qiskit_optimization.optimizers.NELDER_MEAD", false]], "nfev (optimizerresult attribute)": [[95, "qiskit_optimization.optimizers.OptimizerResult.nfev", false]], "nit (optimizerresult attribute)": [[95, "qiskit_optimization.optimizers.OptimizerResult.nit", false]], "njev (optimizerresult attribute)": [[95, "qiskit_optimization.optimizers.OptimizerResult.njev", false]], "no_iterations (intermediateresult attribute)": [[33, "qiskit_optimization.algorithms.IntermediateResult.NO_ITERATIONS", false]], "num_qubits (quantumrandomaccessencoding attribute)": [[51, "qiskit_optimization.algorithms.qrao.QuantumRandomAccessEncoding.num_qubits", false]], "num_sites (skmodel attribute)": [[67, "qiskit_optimization.applications.SKModel.num_sites", false]], "num_vars (quantumrandomaccessencoding attribute)": [[51, "qiskit_optimization.algorithms.qrao.QuantumRandomAccessEncoding.num_vars", false]], "num_vehicles (vehiclerouting attribute)": [[71, "qiskit_optimization.applications.VehicleRouting.num_vehicles", false]], "numberpartition (class in qiskit_optimization.applications)": [[65, "qiskit_optimization.applications.NumberPartition", false]], "numpyminimumeigensolver (class in qiskit_optimization.minimum_eigensolvers)": [[82, "qiskit_optimization.minimum_eigensolvers.NumPyMinimumEigensolver", false]], "numpyminimumeigensolverresult (class in qiskit_optimization.minimum_eigensolvers)": [[83, "qiskit_optimization.minimum_eigensolvers.NumPyMinimumEigensolverResult", false]], "objective (quadraticprogram attribute)": [[20, "qiskit_optimization.QuadraticProgram.objective", false]], "offset (quantumrandomaccessencoding attribute)": [[51, "qiskit_optimization.algorithms.qrao.QuantumRandomAccessEncoding.offset", false]], "operation_counts (groveroptimizationresult attribute)": [[30, "qiskit_optimization.algorithms.GroverOptimizationResult.operation_counts", false]], "optimal_circuit (samplingvqeresult attribute)": [[88, "qiskit_optimization.minimum_eigensolvers.SamplingVQEResult.optimal_circuit", false]], "optimal_circuit (vqeresult attribute)": [[90, "qiskit_optimization.minimum_eigensolvers.VQEResult.optimal_circuit", false]], "optimal_parameters (samplingvqeresult attribute)": [[88, "qiskit_optimization.minimum_eigensolvers.SamplingVQEResult.optimal_parameters", false]], "optimal_parameters (vqeresult attribute)": [[90, "qiskit_optimization.minimum_eigensolvers.VQEResult.optimal_parameters", false]], "optimal_point (samplingvqeresult attribute)": [[88, "qiskit_optimization.minimum_eigensolvers.SamplingVQEResult.optimal_point", false]], "optimal_point (vqeresult attribute)": [[90, "qiskit_optimization.minimum_eigensolvers.VQEResult.optimal_point", false]], "optimal_value (samplingvqeresult attribute)": [[88, "qiskit_optimization.minimum_eigensolvers.SamplingVQEResult.optimal_value", false]], "optimal_value (vqeresult attribute)": [[90, "qiskit_optimization.minimum_eigensolvers.VQEResult.optimal_value", false]], "optimizationalgorithm (class in qiskit_optimization.algorithms)": [[38, "qiskit_optimization.algorithms.OptimizationAlgorithm", false]], "optimizationapplication (class in qiskit_optimization.applications)": [[66, "qiskit_optimization.applications.OptimizationApplication", false]], "optimizationresult (class in qiskit_optimization.algorithms)": [[39, "qiskit_optimization.algorithms.OptimizationResult", false]], "optimizationresultstatus (class in qiskit_optimization.algorithms)": [[40, "qiskit_optimization.algorithms.OptimizationResultStatus", false]], "optimizer (class in qiskit_optimization.optimizers)": [[94, "qiskit_optimization.optimizers.Optimizer", false]], "optimizer (qaoa attribute)": [[84, "qiskit_optimization.minimum_eigensolvers.QAOA.optimizer", false]], "optimizer (samplingvqe attribute)": [[87, "qiskit_optimization.minimum_eigensolvers.SamplingVQE.optimizer", false]], "optimizer (vqe attribute)": [[89, "qiskit_optimization.minimum_eigensolvers.VQE.optimizer", false]], "optimizer_evals (samplingvqeresult attribute)": [[88, "qiskit_optimization.minimum_eigensolvers.SamplingVQEResult.optimizer_evals", false]], "optimizer_evals (vqeresult attribute)": [[90, "qiskit_optimization.minimum_eigensolvers.VQEResult.optimizer_evals", false]], "optimizer_result (samplingvqeresult attribute)": [[88, "qiskit_optimization.minimum_eigensolvers.SamplingVQEResult.optimizer_result", false]], "optimizer_result (vqeresult attribute)": [[90, "qiskit_optimization.minimum_eigensolvers.VQEResult.optimizer_result", false]], "optimizer_time (samplingvqeresult attribute)": [[88, "qiskit_optimization.minimum_eigensolvers.SamplingVQEResult.optimizer_time", false]], "optimizer_time (vqeresult attribute)": [[90, "qiskit_optimization.minimum_eigensolvers.VQEResult.optimizer_time", false]], "optimizerresult (class in qiskit_optimization.optimizers)": [[95, "qiskit_optimization.optimizers.OptimizerResult", false]], "parameters (admmoptimizer attribute)": [[22, "qiskit_optimization.algorithms.ADMMOptimizer.parameters", false]], "parse_gset_format() (maxcut static method)": [[64, "qiskit_optimization.applications.Maxcut.parse_gset_format", false]], "parse_tsplib_format() (tsp static method)": [[70, "qiskit_optimization.applications.Tsp.parse_tsplib_format", false]], "pass_manager (samplingvqe attribute)": [[87, "qiskit_optimization.minimum_eigensolvers.SamplingVQE.pass_manager", false]], "pass_manager (vqe attribute)": [[89, "qiskit_optimization.minimum_eigensolvers.VQE.pass_manager", false]], "penalty (linearequalitytopenalty attribute)": [[75, "qiskit_optimization.converters.LinearEqualityToPenalty.penalty", false]], "penalty (linearinequalitytopenalty attribute)": [[76, "qiskit_optimization.converters.LinearInequalityToPenalty.penalty", false]], "penalty (quadraticprogramtoqubo attribute)": [[80, "qiskit_optimization.converters.QuadraticProgramToQubo.penalty", false]], "prettyprint() (admmoptimizationresult method)": [[21, "qiskit_optimization.algorithms.ADMMOptimizationResult.prettyprint", false]], "prettyprint() (goemanswilliamsonoptimizationresult method)": [[28, "qiskit_optimization.algorithms.GoemansWilliamsonOptimizationResult.prettyprint", false]], "prettyprint() (groveroptimizationresult method)": [[30, "qiskit_optimization.algorithms.GroverOptimizationResult.prettyprint", false]], "prettyprint() (minimumeigenoptimizationresult method)": [[35, "qiskit_optimization.algorithms.MinimumEigenOptimizationResult.prettyprint", false]], "prettyprint() (optimizationresult method)": [[39, "qiskit_optimization.algorithms.OptimizationResult.prettyprint", false]], "prettyprint() (quadraticprogram method)": [[20, "qiskit_optimization.QuadraticProgram.prettyprint", false]], "prettyprint() (quantumrandomaccessoptimizationresult method)": [[52, "qiskit_optimization.algorithms.qrao.QuantumRandomAccessOptimizationResult.prettyprint", false]], "prettyprint() (recursiveminimumeigenoptimizationresult method)": [[41, "qiskit_optimization.algorithms.RecursiveMinimumEigenOptimizationResult.prettyprint", false]], "prettyprint() (slsqpoptimizationresult method)": [[44, "qiskit_optimization.algorithms.SlsqpOptimizationResult.prettyprint", false]], "print_options() (cobyla method)": [[91, "qiskit_optimization.optimizers.COBYLA.print_options", false]], "print_options() (nelder_mead method)": [[93, "qiskit_optimization.optimizers.NELDER_MEAD.print_options", false]], "print_options() (optimizer method)": [[94, "qiskit_optimization.optimizers.Optimizer.print_options", false]], "print_options() (scipyoptimizer method)": [[97, "qiskit_optimization.optimizers.SciPyOptimizer.print_options", false]], "print_options() (spsa method)": [[96, "qiskit_optimization.optimizers.SPSA.print_options", false]], "probability (solutionsample attribute)": [[46, "qiskit_optimization.algorithms.SolutionSample.probability", false]], "problem (quantumrandomaccessencoding attribute)": [[51, "qiskit_optimization.algorithms.qrao.QuantumRandomAccessEncoding.problem", false]], "process_result() (quantumrandomaccessoptimizer method)": [[53, "qiskit_optimization.algorithms.qrao.QuantumRandomAccessOptimizer.process_result", false]], "q2vars (quantumrandomaccessencoding attribute)": [[51, "qiskit_optimization.algorithms.qrao.QuantumRandomAccessEncoding.q2vars", false]], "qaoa (class in qiskit_optimization.minimum_eigensolvers)": [[84, "qiskit_optimization.minimum_eigensolvers.QAOA", false]], "qiskit_optimization": [[0, "module-qiskit_optimization", false]], "qiskit_optimization.algorithms": [[1, "module-qiskit_optimization.algorithms", false]], "qiskit_optimization.algorithms.qrao": [[2, "module-qiskit_optimization.algorithms.qrao", false]], "qiskit_optimization.applications": [[3, "module-qiskit_optimization.applications", false]], "qiskit_optimization.converters": [[4, "module-qiskit_optimization.converters", false]], "qiskit_optimization.minimum_eigensolvers": [[5, "module-qiskit_optimization.minimum_eigensolvers", false]], "qiskit_optimization.optimizers": [[6, "module-qiskit_optimization.optimizers", false]], "qiskit_optimization.problems": [[7, "module-qiskit_optimization.problems", false]], "qiskit_optimization.translators": [[8, "module-qiskit_optimization.translators", false]], "qiskit_optimization.utils": [[9, "module-qiskit_optimization.utils", false]], "qiskitoptimizationerror": [[19, "qiskit_optimization.QiskitOptimizationError", false]], "quadratic (quadraticconstraint attribute)": [[101, "qiskit_optimization.problems.QuadraticConstraint.quadratic", false]], "quadratic (quadraticobjective attribute)": [[103, "qiskit_optimization.problems.QuadraticObjective.quadratic", false]], "quadratic_constraint() (quadraticprogram method)": [[20, "qiskit_optimization.QuadraticProgram.quadratic_constraint", false]], "quadratic_constraints (quadraticprogram attribute)": [[20, "qiskit_optimization.QuadraticProgram.quadratic_constraints", false]], "quadratic_constraints_index (quadraticprogram attribute)": [[20, "qiskit_optimization.QuadraticProgram.quadratic_constraints_index", false]], "quadratic_program (constraint attribute)": [[98, "qiskit_optimization.problems.Constraint.quadratic_program", false]], "quadratic_program (linearconstraint attribute)": [[99, "qiskit_optimization.problems.LinearConstraint.quadratic_program", false]], "quadratic_program (linearexpression attribute)": [[100, "qiskit_optimization.problems.LinearExpression.quadratic_program", false]], "quadratic_program (quadraticconstraint attribute)": [[101, "qiskit_optimization.problems.QuadraticConstraint.quadratic_program", false]], "quadratic_program (quadraticexpression attribute)": [[102, "qiskit_optimization.problems.QuadraticExpression.quadratic_program", false]], "quadratic_program (quadraticobjective attribute)": [[103, "qiskit_optimization.problems.QuadraticObjective.quadratic_program", false]], "quadratic_program (quadraticprogramelement attribute)": [[104, "qiskit_optimization.problems.QuadraticProgramElement.quadratic_program", false]], "quadratic_program (variable attribute)": [[105, "qiskit_optimization.problems.Variable.quadratic_program", false]], "quadraticconstraint (class in qiskit_optimization.problems)": [[101, "qiskit_optimization.problems.QuadraticConstraint", false]], "quadraticexpression (class in qiskit_optimization.problems)": [[102, "qiskit_optimization.problems.QuadraticExpression", false]], "quadraticobjective (class in qiskit_optimization.problems)": [[103, "qiskit_optimization.problems.QuadraticObjective", false]], "quadraticprogram (class in qiskit_optimization)": [[20, "qiskit_optimization.QuadraticProgram", false]], "quadraticprogramconverter (class in qiskit_optimization.converters)": [[79, "qiskit_optimization.converters.QuadraticProgramConverter", false]], "quadraticprogramelement (class in qiskit_optimization.problems)": [[104, "qiskit_optimization.problems.QuadraticProgramElement", false]], "quadraticprogramtoqubo (class in qiskit_optimization.converters)": [[80, "qiskit_optimization.converters.QuadraticProgramToQubo", false]], "quantumrandomaccessencoding (class in qiskit_optimization.algorithms.qrao)": [[51, "qiskit_optimization.algorithms.qrao.QuantumRandomAccessEncoding", false]], "quantumrandomaccessoptimizationresult (class in qiskit_optimization.algorithms.qrao)": [[52, "qiskit_optimization.algorithms.qrao.QuantumRandomAccessOptimizationResult", false]], "quantumrandomaccessoptimizer (class in qiskit_optimization.algorithms.qrao)": [[53, "qiskit_optimization.algorithms.qrao.QuantumRandomAccessOptimizer", false]], "qubit_op (quantumrandomaccessencoding attribute)": [[51, "qiskit_optimization.algorithms.qrao.QuantumRandomAccessEncoding.qubit_op", false]], "random (in module qiskit_optimization.utils)": [[112, "qiskit_optimization.utils.random", false]], "random_seed (in module qiskit_optimization.utils)": [[112, "qiskit_optimization.utils.random_seed", false]], "raw_results (admmoptimizationresult attribute)": [[21, "qiskit_optimization.algorithms.ADMMOptimizationResult.raw_results", false]], "raw_results (goemanswilliamsonoptimizationresult attribute)": [[28, "qiskit_optimization.algorithms.GoemansWilliamsonOptimizationResult.raw_results", false]], "raw_results (groveroptimizationresult attribute)": [[30, "qiskit_optimization.algorithms.GroverOptimizationResult.raw_results", false]], "raw_results (minimumeigenoptimizationresult attribute)": [[35, "qiskit_optimization.algorithms.MinimumEigenOptimizationResult.raw_results", false]], "raw_results (optimizationresult attribute)": [[39, "qiskit_optimization.algorithms.OptimizationResult.raw_results", false]], "raw_results (quantumrandomaccessoptimizationresult attribute)": [[52, "qiskit_optimization.algorithms.qrao.QuantumRandomAccessOptimizationResult.raw_results", false]], "raw_results (recursiveminimumeigenoptimizationresult attribute)": [[41, "qiskit_optimization.algorithms.RecursiveMinimumEigenOptimizationResult.raw_results", false]], "raw_results (slsqpoptimizationresult attribute)": [[44, "qiskit_optimization.algorithms.SlsqpOptimizationResult.raw_results", false]], "raw_samples (groveroptimizationresult attribute)": [[30, "qiskit_optimization.algorithms.GroverOptimizationResult.raw_samples", false]], "raw_samples (minimumeigenoptimizationresult attribute)": [[35, "qiskit_optimization.algorithms.MinimumEigenOptimizationResult.raw_samples", false]], "read_from_lp_file() (quadraticprogram method)": [[20, "qiskit_optimization.QuadraticProgram.read_from_lp_file", false]], "recursiveminimumeigenoptimizationresult (class in qiskit_optimization.algorithms)": [[41, "qiskit_optimization.algorithms.RecursiveMinimumEigenOptimizationResult", false]], "recursiveminimumeigenoptimizer (class in qiskit_optimization.algorithms)": [[42, "qiskit_optimization.algorithms.RecursiveMinimumEigenOptimizer", false]], "relaxed_fval (quantumrandomaccessoptimizationresult attribute)": [[52, "qiskit_optimization.algorithms.qrao.QuantumRandomAccessOptimizationResult.relaxed_fval", false]], "relaxed_result (quantumrandomaccessoptimizationresult attribute)": [[52, "qiskit_optimization.algorithms.qrao.QuantumRandomAccessOptimizationResult.relaxed_result", false]], "remove_linear_constraint() (quadraticprogram method)": [[20, "qiskit_optimization.QuadraticProgram.remove_linear_constraint", false]], "remove_quadratic_constraint() (quadraticprogram method)": [[20, "qiskit_optimization.QuadraticProgram.remove_quadratic_constraint", false]], "replacements (recursiveminimumeigenoptimizationresult attribute)": [[41, "qiskit_optimization.algorithms.RecursiveMinimumEigenOptimizationResult.replacements", false]], "reps (qaoa attribute)": [[84, "qiskit_optimization.minimum_eigensolvers.QAOA.reps", false]], "rhs (constraint attribute)": [[98, "qiskit_optimization.problems.Constraint.rhs", false]], "rhs (linearconstraint attribute)": [[99, "qiskit_optimization.problems.LinearConstraint.rhs", false]], "rhs (quadraticconstraint attribute)": [[101, "qiskit_optimization.problems.QuadraticConstraint.rhs", false]], "round() (magicrounding method)": [[50, "qiskit_optimization.algorithms.qrao.MagicRounding.round", false]], "round() (roundingscheme method)": [[56, "qiskit_optimization.algorithms.qrao.RoundingScheme.round", false]], "round() (semideterministicrounding method)": [[57, "qiskit_optimization.algorithms.qrao.SemideterministicRounding.round", false]], "rounding_result (quantumrandomaccessoptimizationresult attribute)": [[52, "qiskit_optimization.algorithms.qrao.QuantumRandomAccessOptimizationResult.rounding_result", false]], "rounding_scheme (quantumrandomaccessoptimizer attribute)": [[53, "qiskit_optimization.algorithms.qrao.QuantumRandomAccessOptimizer.rounding_scheme", false]], "roundingcontext (class in qiskit_optimization.algorithms.qrao)": [[54, "qiskit_optimization.algorithms.qrao.RoundingContext", false]], "roundingresult (class in qiskit_optimization.algorithms.qrao)": [[55, "qiskit_optimization.algorithms.qrao.RoundingResult", false]], "roundingscheme (class in qiskit_optimization.algorithms.qrao)": [[56, "qiskit_optimization.algorithms.qrao.RoundingScheme", false]], "sample_most_likely() (binpacking static method)": [[58, "qiskit_optimization.applications.BinPacking.sample_most_likely", false]], "sample_most_likely() (clique static method)": [[59, "qiskit_optimization.applications.Clique.sample_most_likely", false]], "sample_most_likely() (exactcover static method)": [[60, "qiskit_optimization.applications.ExactCover.sample_most_likely", false]], "sample_most_likely() (graphoptimizationapplication static method)": [[61, "qiskit_optimization.applications.GraphOptimizationApplication.sample_most_likely", false]], "sample_most_likely() (graphpartition static method)": [[62, "qiskit_optimization.applications.GraphPartition.sample_most_likely", false]], "sample_most_likely() (knapsack static method)": [[63, "qiskit_optimization.applications.Knapsack.sample_most_likely", false]], "sample_most_likely() (maxcut static method)": [[64, "qiskit_optimization.applications.Maxcut.sample_most_likely", false]], "sample_most_likely() (numberpartition static method)": [[65, "qiskit_optimization.applications.NumberPartition.sample_most_likely", false]], "sample_most_likely() (optimizationapplication static method)": [[66, "qiskit_optimization.applications.OptimizationApplication.sample_most_likely", false]], "sample_most_likely() (setpacking static method)": [[68, "qiskit_optimization.applications.SetPacking.sample_most_likely", false]], "sample_most_likely() (skmodel static method)": [[67, "qiskit_optimization.applications.SKModel.sample_most_likely", false]], "sample_most_likely() (stableset static method)": [[69, "qiskit_optimization.applications.StableSet.sample_most_likely", false]], "sample_most_likely() (tsp static method)": [[70, "qiskit_optimization.applications.Tsp.sample_most_likely", false]], "sample_most_likely() (vehiclerouting static method)": [[71, "qiskit_optimization.applications.VehicleRouting.sample_most_likely", false]], "sample_most_likely() (vertexcover static method)": [[72, "qiskit_optimization.applications.VertexCover.sample_most_likely", false]], "sampler (magicrounding attribute)": [[50, "qiskit_optimization.algorithms.qrao.MagicRounding.sampler", false]], "sampler (samplingvqe attribute)": [[87, "qiskit_optimization.minimum_eigensolvers.SamplingVQE.sampler", false]], "samples (admmoptimizationresult attribute)": [[21, "qiskit_optimization.algorithms.ADMMOptimizationResult.samples", false]], "samples (goemanswilliamsonoptimizationresult attribute)": [[28, "qiskit_optimization.algorithms.GoemansWilliamsonOptimizationResult.samples", false]], "samples (groveroptimizationresult attribute)": [[30, "qiskit_optimization.algorithms.GroverOptimizationResult.samples", false]], "samples (minimumeigenoptimizationresult attribute)": [[35, "qiskit_optimization.algorithms.MinimumEigenOptimizationResult.samples", false]], "samples (optimizationresult attribute)": [[39, "qiskit_optimization.algorithms.OptimizationResult.samples", false]], "samples (quantumrandomaccessoptimizationresult attribute)": [[52, "qiskit_optimization.algorithms.qrao.QuantumRandomAccessOptimizationResult.samples", false]], "samples (recursiveminimumeigenoptimizationresult attribute)": [[41, "qiskit_optimization.algorithms.RecursiveMinimumEigenOptimizationResult.samples", false]], "samples (roundingresult attribute)": [[55, "qiskit_optimization.algorithms.qrao.RoundingResult.samples", false]], "samples (slsqpoptimizationresult attribute)": [[44, "qiskit_optimization.algorithms.SlsqpOptimizationResult.samples", false]], "samplingminimumeigensolver (class in qiskit_optimization.minimum_eigensolvers)": [[85, "qiskit_optimization.minimum_eigensolvers.SamplingMinimumEigensolver", false]], "samplingminimumeigensolverresult (class in qiskit_optimization.minimum_eigensolvers)": [[86, "qiskit_optimization.minimum_eigensolvers.SamplingMinimumEigensolverResult", false]], "samplingvqe (class in qiskit_optimization.minimum_eigensolvers)": [[87, "qiskit_optimization.minimum_eigensolvers.SamplingVQE", false]], "samplingvqeresult (class in qiskit_optimization.minimum_eigensolvers)": [[88, "qiskit_optimization.minimum_eigensolvers.SamplingVQEResult", false]], "scipymilpoptimizer (class in qiskit_optimization.algorithms)": [[43, "qiskit_optimization.algorithms.ScipyMilpOptimizer", false]], "scipyoptimizer (class in qiskit_optimization.optimizers)": [[97, "qiskit_optimization.optimizers.SciPyOptimizer", false]], "sdp_solution (goemanswilliamsonoptimizationresult attribute)": [[28, "qiskit_optimization.algorithms.GoemansWilliamsonOptimizationResult.sdp_solution", false]], "semideterministicrounding (class in qiskit_optimization.algorithms.qrao)": [[57, "qiskit_optimization.algorithms.qrao.SemideterministicRounding", false]], "sense (constraint attribute)": [[98, "qiskit_optimization.problems.Constraint.sense", false]], "sense (linearconstraint attribute)": [[99, "qiskit_optimization.problems.LinearConstraint.sense", false]], "sense (quadraticconstraint attribute)": [[101, "qiskit_optimization.problems.QuadraticConstraint.sense", false]], "sense (quadraticobjective attribute)": [[103, "qiskit_optimization.problems.QuadraticObjective.sense", false]], "set_max_evals_grouped() (cobyla method)": [[91, "qiskit_optimization.optimizers.COBYLA.set_max_evals_grouped", false]], "set_max_evals_grouped() (nelder_mead method)": [[93, "qiskit_optimization.optimizers.NELDER_MEAD.set_max_evals_grouped", false]], "set_max_evals_grouped() (optimizer method)": [[94, "qiskit_optimization.optimizers.Optimizer.set_max_evals_grouped", false]], "set_max_evals_grouped() (scipyoptimizer method)": [[97, "qiskit_optimization.optimizers.SciPyOptimizer.set_max_evals_grouped", false]], "set_max_evals_grouped() (spsa method)": [[96, "qiskit_optimization.optimizers.SPSA.set_max_evals_grouped", false]], "set_options() (cobyla method)": [[91, "qiskit_optimization.optimizers.COBYLA.set_options", false]], "set_options() (nelder_mead method)": [[93, "qiskit_optimization.optimizers.NELDER_MEAD.set_options", false]], "set_options() (optimizer method)": [[94, "qiskit_optimization.optimizers.Optimizer.set_options", false]], "set_options() (scipyoptimizer method)": [[97, "qiskit_optimization.optimizers.SciPyOptimizer.set_options", false]], "set_options() (spsa method)": [[96, "qiskit_optimization.optimizers.SPSA.set_options", false]], "setpacking (class in qiskit_optimization.applications)": [[68, "qiskit_optimization.applications.SetPacking", false]], "setting (cobyla attribute)": [[91, "qiskit_optimization.optimizers.COBYLA.setting", false]], "setting (nelder_mead attribute)": [[93, "qiskit_optimization.optimizers.NELDER_MEAD.setting", false]], "setting (optimizer attribute)": [[94, "qiskit_optimization.optimizers.Optimizer.setting", false]], "setting (scipyoptimizer attribute)": [[97, "qiskit_optimization.optimizers.SciPyOptimizer.setting", false]], "setting (spsa attribute)": [[96, "qiskit_optimization.optimizers.SPSA.setting", false]], "settings (cobyla attribute)": [[91, "qiskit_optimization.optimizers.COBYLA.settings", false]], "settings (nelder_mead attribute)": [[93, "qiskit_optimization.optimizers.NELDER_MEAD.settings", false]], "settings (optimizer attribute)": [[94, "qiskit_optimization.optimizers.Optimizer.settings", false]], "settings (scipyoptimizer attribute)": [[97, "qiskit_optimization.optimizers.SciPyOptimizer.settings", false]], "settings (spsa attribute)": [[96, "qiskit_optimization.optimizers.SPSA.settings", false]], "size (clique attribute)": [[59, "qiskit_optimization.applications.Clique.size", false]], "skmodel (class in qiskit_optimization.applications)": [[67, "qiskit_optimization.applications.SKModel", false]], "slsqpoptimizationresult (class in qiskit_optimization.algorithms)": [[44, "qiskit_optimization.algorithms.SlsqpOptimizationResult", false]], "slsqpoptimizer (class in qiskit_optimization.algorithms)": [[45, "qiskit_optimization.algorithms.SlsqpOptimizer", false]], "smode (slsqpoptimizationresult attribute)": [[44, "qiskit_optimization.algorithms.SlsqpOptimizationResult.smode", false]], "solutionsample (class in qiskit_optimization.algorithms)": [[46, "qiskit_optimization.algorithms.SolutionSample", false]], "solve() (admmoptimizer method)": [[22, "qiskit_optimization.algorithms.ADMMOptimizer.solve", false]], "solve() (cobylaoptimizer method)": [[26, "qiskit_optimization.algorithms.CobylaOptimizer.solve", false]], "solve() (cplexoptimizer method)": [[27, "qiskit_optimization.algorithms.CplexOptimizer.solve", false]], "solve() (goemanswilliamsonoptimizer method)": [[29, "qiskit_optimization.algorithms.GoemansWilliamsonOptimizer.solve", false]], "solve() (groveroptimizer method)": [[31, "qiskit_optimization.algorithms.GroverOptimizer.solve", false]], "solve() (gurobioptimizer method)": [[32, "qiskit_optimization.algorithms.GurobiOptimizer.solve", false]], "solve() (minimumeigenoptimizer method)": [[36, "qiskit_optimization.algorithms.MinimumEigenOptimizer.solve", false]], "solve() (multistartoptimizer method)": [[37, "qiskit_optimization.algorithms.MultiStartOptimizer.solve", false]], "solve() (optimizationalgorithm method)": [[38, "qiskit_optimization.algorithms.OptimizationAlgorithm.solve", false]], "solve() (quantumrandomaccessoptimizer method)": [[53, "qiskit_optimization.algorithms.qrao.QuantumRandomAccessOptimizer.solve", false]], "solve() (recursiveminimumeigenoptimizer method)": [[42, "qiskit_optimization.algorithms.RecursiveMinimumEigenOptimizer.solve", false]], "solve() (scipymilpoptimizer method)": [[43, "qiskit_optimization.algorithms.ScipyMilpOptimizer.solve", false]], "solve() (slsqpoptimizer method)": [[45, "qiskit_optimization.algorithms.SlsqpOptimizer.solve", false]], "solve() (warmstartqaoaoptimizer method)": [[48, "qiskit_optimization.algorithms.WarmStartQAOAOptimizer.solve", false]], "solve_relaxed() (quantumrandomaccessoptimizer method)": [[53, "qiskit_optimization.algorithms.qrao.QuantumRandomAccessOptimizer.solve_relaxed", false]], "spsa (class in qiskit_optimization.optimizers)": [[96, "qiskit_optimization.optimizers.SPSA", false]], "stableset (class in qiskit_optimization.applications)": [[69, "qiskit_optimization.applications.StableSet", false]], "state (admmoptimizationresult attribute)": [[21, "qiskit_optimization.algorithms.ADMMOptimizationResult.state", false]], "state_preparation_circuit() (quantumrandomaccessencoding method)": [[51, "qiskit_optimization.algorithms.qrao.QuantumRandomAccessEncoding.state_preparation_circuit", false]], "status (admmoptimizationresult attribute)": [[21, "qiskit_optimization.algorithms.ADMMOptimizationResult.status", false]], "status (goemanswilliamsonoptimizationresult attribute)": [[28, "qiskit_optimization.algorithms.GoemansWilliamsonOptimizationResult.status", false]], "status (groveroptimizationresult attribute)": [[30, "qiskit_optimization.algorithms.GroverOptimizationResult.status", false]], "status (minimumeigenoptimizationresult attribute)": [[35, "qiskit_optimization.algorithms.MinimumEigenOptimizationResult.status", false]], "status (optimizationresult attribute)": [[39, "qiskit_optimization.algorithms.OptimizationResult.status", false]], "status (quadraticprogram attribute)": [[20, "qiskit_optimization.QuadraticProgram.status", false]], "status (quantumrandomaccessoptimizationresult attribute)": [[52, "qiskit_optimization.algorithms.qrao.QuantumRandomAccessOptimizationResult.status", false]], "status (recursiveminimumeigenoptimizationresult attribute)": [[41, "qiskit_optimization.algorithms.RecursiveMinimumEigenOptimizationResult.status", false]], "status (slsqpoptimizationresult attribute)": [[44, "qiskit_optimization.algorithms.SlsqpOptimizationResult.status", false]], "status (solutionsample attribute)": [[46, "qiskit_optimization.algorithms.SolutionSample.status", false]], "substitute_variables() (quadraticprogram method)": [[20, "qiskit_optimization.QuadraticProgram.substitute_variables", false]], "success (optimizationresultstatus attribute)": [[40, "qiskit_optimization.algorithms.OptimizationResultStatus.SUCCESS", false]], "supports_aux_operators() (numpyminimumeigensolver class method)": [[82, "qiskit_optimization.minimum_eigensolvers.NumPyMinimumEigensolver.supports_aux_operators", false]], "supports_aux_operators() (qaoa class method)": [[84, "qiskit_optimization.minimum_eigensolvers.QAOA.supports_aux_operators", false]], "supports_aux_operators() (samplingminimumeigensolver class method)": [[85, "qiskit_optimization.minimum_eigensolvers.SamplingMinimumEigensolver.supports_aux_operators", false]], "supports_aux_operators() (samplingvqe class method)": [[87, "qiskit_optimization.minimum_eigensolvers.SamplingVQE.supports_aux_operators", false]], "supports_aux_operators() (vqe class method)": [[89, "qiskit_optimization.minimum_eigensolvers.VQE.supports_aux_operators", false]], "threshold (groveroptimizationresult attribute)": [[30, "qiskit_optimization.algorithms.GroverOptimizationResult.threshold", false]], "to_array() (linearexpression method)": [[100, "qiskit_optimization.problems.LinearExpression.to_array", false]], "to_array() (quadraticexpression method)": [[102, "qiskit_optimization.problems.QuadraticExpression.to_array", false]], "to_dict() (linearexpression method)": [[100, "qiskit_optimization.problems.LinearExpression.to_dict", false]], "to_dict() (quadraticexpression method)": [[102, "qiskit_optimization.problems.QuadraticExpression.to_dict", false]], "to_docplex_mp() (in module qiskit_optimization.translators)": [[109, "qiskit_optimization.translators.to_docplex_mp", false]], "to_gurobipy() (in module qiskit_optimization.translators)": [[110, "qiskit_optimization.translators.to_gurobipy", false]], "to_ising() (in module qiskit_optimization.translators)": [[111, "qiskit_optimization.translators.to_ising", false]], "to_ising() (quadraticprogram method)": [[20, "qiskit_optimization.QuadraticProgram.to_ising", false]], "to_quadratic_program() (binpacking method)": [[58, "qiskit_optimization.applications.BinPacking.to_quadratic_program", false]], "to_quadratic_program() (clique method)": [[59, "qiskit_optimization.applications.Clique.to_quadratic_program", false]], "to_quadratic_program() (exactcover method)": [[60, "qiskit_optimization.applications.ExactCover.to_quadratic_program", false]], "to_quadratic_program() (graphoptimizationapplication method)": [[61, "qiskit_optimization.applications.GraphOptimizationApplication.to_quadratic_program", false]], "to_quadratic_program() (graphpartition method)": [[62, "qiskit_optimization.applications.GraphPartition.to_quadratic_program", false]], "to_quadratic_program() (knapsack method)": [[63, "qiskit_optimization.applications.Knapsack.to_quadratic_program", false]], "to_quadratic_program() (maxcut method)": [[64, "qiskit_optimization.applications.Maxcut.to_quadratic_program", false]], "to_quadratic_program() (numberpartition method)": [[65, "qiskit_optimization.applications.NumberPartition.to_quadratic_program", false]], "to_quadratic_program() (optimizationapplication method)": [[66, "qiskit_optimization.applications.OptimizationApplication.to_quadratic_program", false]], "to_quadratic_program() (setpacking method)": [[68, "qiskit_optimization.applications.SetPacking.to_quadratic_program", false]], "to_quadratic_program() (skmodel method)": [[67, "qiskit_optimization.applications.SKModel.to_quadratic_program", false]], "to_quadratic_program() (stableset method)": [[69, "qiskit_optimization.applications.StableSet.to_quadratic_program", false]], "to_quadratic_program() (tsp method)": [[70, "qiskit_optimization.applications.Tsp.to_quadratic_program", false]], "to_quadratic_program() (vehiclerouting method)": [[71, "qiskit_optimization.applications.VehicleRouting.to_quadratic_program", false]], "to_quadratic_program() (vertexcover method)": [[72, "qiskit_optimization.applications.VertexCover.to_quadratic_program", false]], "trials (cobylaoptimizer attribute)": [[26, "qiskit_optimization.algorithms.CobylaOptimizer.trials", false]], "trials (multistartoptimizer attribute)": [[37, "qiskit_optimization.algorithms.MultiStartOptimizer.trials", false]], "trials (slsqpoptimizer attribute)": [[45, "qiskit_optimization.algorithms.SlsqpOptimizer.trials", false]], "tsp (class in qiskit_optimization.applications)": [[70, "qiskit_optimization.applications.Tsp", false]], "tsp_value() (tsp static method)": [[70, "qiskit_optimization.applications.Tsp.tsp_value", false]], "upperbound (variable attribute)": [[105, "qiskit_optimization.problems.Variable.upperbound", false]], "var2op (quantumrandomaccessencoding attribute)": [[51, "qiskit_optimization.algorithms.qrao.QuantumRandomAccessEncoding.var2op", false]], "variable (class in qiskit_optimization.problems)": [[105, "qiskit_optimization.problems.Variable", false]], "variable_names (admmoptimizationresult attribute)": [[21, "qiskit_optimization.algorithms.ADMMOptimizationResult.variable_names", false]], "variable_names (goemanswilliamsonoptimizationresult attribute)": [[28, "qiskit_optimization.algorithms.GoemansWilliamsonOptimizationResult.variable_names", false]], "variable_names (groveroptimizationresult attribute)": [[30, "qiskit_optimization.algorithms.GroverOptimizationResult.variable_names", false]], "variable_names (minimumeigenoptimizationresult attribute)": [[35, "qiskit_optimization.algorithms.MinimumEigenOptimizationResult.variable_names", false]], "variable_names (optimizationresult attribute)": [[39, "qiskit_optimization.algorithms.OptimizationResult.variable_names", false]], "variable_names (quantumrandomaccessoptimizationresult attribute)": [[52, "qiskit_optimization.algorithms.qrao.QuantumRandomAccessOptimizationResult.variable_names", false]], "variable_names (recursiveminimumeigenoptimizationresult attribute)": [[41, "qiskit_optimization.algorithms.RecursiveMinimumEigenOptimizationResult.variable_names", false]], "variable_names (slsqpoptimizationresult attribute)": [[44, "qiskit_optimization.algorithms.SlsqpOptimizationResult.variable_names", false]], "variables (admmoptimizationresult attribute)": [[21, "qiskit_optimization.algorithms.ADMMOptimizationResult.variables", false]], "variables (goemanswilliamsonoptimizationresult attribute)": [[28, "qiskit_optimization.algorithms.GoemansWilliamsonOptimizationResult.variables", false]], "variables (groveroptimizationresult attribute)": [[30, "qiskit_optimization.algorithms.GroverOptimizationResult.variables", false]], "variables (minimumeigenoptimizationresult attribute)": [[35, "qiskit_optimization.algorithms.MinimumEigenOptimizationResult.variables", false]], "variables (optimizationresult attribute)": [[39, "qiskit_optimization.algorithms.OptimizationResult.variables", false]], "variables (quadraticprogram attribute)": [[20, "qiskit_optimization.QuadraticProgram.variables", false]], "variables (quantumrandomaccessoptimizationresult attribute)": [[52, "qiskit_optimization.algorithms.qrao.QuantumRandomAccessOptimizationResult.variables", false]], "variables (recursiveminimumeigenoptimizationresult attribute)": [[41, "qiskit_optimization.algorithms.RecursiveMinimumEigenOptimizationResult.variables", false]], "variables (slsqpoptimizationresult attribute)": [[44, "qiskit_optimization.algorithms.SlsqpOptimizationResult.variables", false]], "variables_dict (admmoptimizationresult attribute)": [[21, "qiskit_optimization.algorithms.ADMMOptimizationResult.variables_dict", false]], "variables_dict (goemanswilliamsonoptimizationresult attribute)": [[28, "qiskit_optimization.algorithms.GoemansWilliamsonOptimizationResult.variables_dict", false]], "variables_dict (groveroptimizationresult attribute)": [[30, "qiskit_optimization.algorithms.GroverOptimizationResult.variables_dict", false]], "variables_dict (minimumeigenoptimizationresult attribute)": [[35, "qiskit_optimization.algorithms.MinimumEigenOptimizationResult.variables_dict", false]], "variables_dict (optimizationresult attribute)": [[39, "qiskit_optimization.algorithms.OptimizationResult.variables_dict", false]], "variables_dict (quantumrandomaccessoptimizationresult attribute)": [[52, "qiskit_optimization.algorithms.qrao.QuantumRandomAccessOptimizationResult.variables_dict", false]], "variables_dict (recursiveminimumeigenoptimizationresult attribute)": [[41, "qiskit_optimization.algorithms.RecursiveMinimumEigenOptimizationResult.variables_dict", false]], "variables_dict (slsqpoptimizationresult attribute)": [[44, "qiskit_optimization.algorithms.SlsqpOptimizationResult.variables_dict", false]], "variables_index (quadraticprogram attribute)": [[20, "qiskit_optimization.QuadraticProgram.variables_index", false]], "vartype (variable attribute)": [[105, "qiskit_optimization.problems.Variable.vartype", false]], "vehiclerouting (class in qiskit_optimization.applications)": [[71, "qiskit_optimization.applications.VehicleRouting", false]], "vertexcover (class in qiskit_optimization.applications)": [[72, "qiskit_optimization.applications.VertexCover", false]], "vqe (class in qiskit_optimization.minimum_eigensolvers)": [[89, "qiskit_optimization.minimum_eigensolvers.VQE", false]], "vqeresult (class in qiskit_optimization.minimum_eigensolvers)": [[90, "qiskit_optimization.minimum_eigensolvers.VQEResult", false]], "warmstartqaoafactory (class in qiskit_optimization.algorithms)": [[47, "qiskit_optimization.algorithms.WarmStartQAOAFactory", false]], "warmstartqaoaoptimizer (class in qiskit_optimization.algorithms)": [[48, "qiskit_optimization.algorithms.WarmStartQAOAOptimizer", false]], "with_traceback() (qiskitoptimizationerror method)": [[19, "qiskit_optimization.QiskitOptimizationError.with_traceback", false]], "wrap_function() (cobyla static method)": [[91, "qiskit_optimization.optimizers.COBYLA.wrap_function", false]], "wrap_function() (nelder_mead static method)": [[93, "qiskit_optimization.optimizers.NELDER_MEAD.wrap_function", false]], "wrap_function() (optimizer static method)": [[94, "qiskit_optimization.optimizers.Optimizer.wrap_function", false]], "wrap_function() (scipyoptimizer static method)": [[97, "qiskit_optimization.optimizers.SciPyOptimizer.wrap_function", false]], "wrap_function() (spsa static method)": [[96, "qiskit_optimization.optimizers.SPSA.wrap_function", false]], "write_to_lp_file() (quadraticprogram method)": [[20, "qiskit_optimization.QuadraticProgram.write_to_lp_file", false]], "x (admmoptimizationresult attribute)": [[21, "qiskit_optimization.algorithms.ADMMOptimizationResult.x", false]], "x (goemanswilliamsonoptimizationresult attribute)": [[28, "qiskit_optimization.algorithms.GoemansWilliamsonOptimizationResult.x", false]], "x (groveroptimizationresult attribute)": [[30, "qiskit_optimization.algorithms.GroverOptimizationResult.x", false]], "x (minimumeigenoptimizationresult attribute)": [[35, "qiskit_optimization.algorithms.MinimumEigenOptimizationResult.x", false]], "x (optimizationresult attribute)": [[39, "qiskit_optimization.algorithms.OptimizationResult.x", false]], "x (optimizerresult attribute)": [[95, "qiskit_optimization.optimizers.OptimizerResult.x", false]], "x (quantumrandomaccessoptimizationresult attribute)": [[52, "qiskit_optimization.algorithms.qrao.QuantumRandomAccessOptimizationResult.x", false]], "x (recursiveminimumeigenoptimizationresult attribute)": [[41, "qiskit_optimization.algorithms.RecursiveMinimumEigenOptimizationResult.x", false]], "x (slsqpoptimizationresult attribute)": [[44, "qiskit_optimization.algorithms.SlsqpOptimizationResult.x", false]], "x (solutionsample attribute)": [[46, "qiskit_optimization.algorithms.SolutionSample.x", false]]}, "objects": {"": [[0, 0, 0, "-", "qiskit_optimization"]], "qiskit_optimization": [[19, 1, 1, "", "QiskitOptimizationError"], [20, 3, 1, "", "QuadraticProgram"], [1, 0, 0, "-", "algorithms"], [3, 0, 0, "-", "applications"], [4, 0, 0, "-", "converters"], [5, 0, 0, "-", "minimum_eigensolvers"], [6, 0, 0, "-", "optimizers"], [7, 0, 0, "-", "problems"], [8, 0, 0, "-", "translators"], [9, 0, 0, "-", "utils"]], "qiskit_optimization.QiskitOptimizationError": [[19, 2, 1, "", "with_traceback"]], "qiskit_optimization.QuadraticProgram": [[20, 2, 1, "", "binary_var"], [20, 2, 1, "", "binary_var_dict"], [20, 2, 1, "", "binary_var_list"], [20, 2, 1, "", "clear"], [20, 2, 1, "", "continuous_var"], [20, 2, 1, "", "continuous_var_dict"], [20, 2, 1, "", "continuous_var_list"], [20, 2, 1, "", "export_as_lp_string"], [20, 2, 1, "", "from_ising"], [20, 2, 1, "", "get_feasibility_info"], [20, 2, 1, "", "get_linear_constraint"], [20, 2, 1, "", "get_num_binary_vars"], [20, 2, 1, "", "get_num_continuous_vars"], [20, 2, 1, "", "get_num_integer_vars"], [20, 2, 1, "", "get_num_linear_constraints"], [20, 2, 1, "", "get_num_quadratic_constraints"], [20, 2, 1, "", "get_num_vars"], [20, 2, 1, "", "get_quadratic_constraint"], [20, 2, 1, "", "get_variable"], [20, 2, 1, "", "integer_var"], [20, 2, 1, "", "integer_var_dict"], [20, 2, 1, "", "integer_var_list"], [20, 2, 1, "", "is_feasible"], [20, 2, 1, "", "linear_constraint"], [20, 4, 1, "", "linear_constraints"], [20, 4, 1, "", "linear_constraints_index"], [20, 2, 1, "", "maximize"], [20, 2, 1, "", "minimize"], [20, 4, 1, "", "name"], [20, 4, 1, "", "objective"], [20, 2, 1, "", "prettyprint"], [20, 2, 1, "", "quadratic_constraint"], [20, 4, 1, "", "quadratic_constraints"], [20, 4, 1, "", "quadratic_constraints_index"], [20, 2, 1, "", "read_from_lp_file"], [20, 2, 1, "", "remove_linear_constraint"], [20, 2, 1, "", "remove_quadratic_constraint"], [20, 4, 1, "", "status"], [20, 2, 1, "", "substitute_variables"], [20, 2, 1, "", "to_ising"], [20, 4, 1, "", "variables"], [20, 4, 1, "", "variables_index"], [20, 2, 1, "", "write_to_lp_file"]], "qiskit_optimization.algorithms": [[21, 3, 1, "", "ADMMOptimizationResult"], [22, 3, 1, "", "ADMMOptimizer"], [23, 3, 1, "", "ADMMParameters"], [24, 3, 1, "", "ADMMState"], [25, 3, 1, "", "BaseAggregator"], [26, 3, 1, "", "CobylaOptimizer"], [27, 3, 1, "", "CplexOptimizer"], [28, 3, 1, "", "GoemansWilliamsonOptimizationResult"], [29, 3, 1, "", "GoemansWilliamsonOptimizer"], [30, 3, 1, "", "GroverOptimizationResult"], [31, 3, 1, "", "GroverOptimizer"], [32, 3, 1, "", "GurobiOptimizer"], [33, 3, 1, "", "IntermediateResult"], [34, 3, 1, "", "MeanAggregator"], [35, 3, 1, "", "MinimumEigenOptimizationResult"], [36, 3, 1, "", "MinimumEigenOptimizer"], [37, 3, 1, "", "MultiStartOptimizer"], [38, 3, 1, "", "OptimizationAlgorithm"], [39, 3, 1, "", "OptimizationResult"], [40, 3, 1, "", "OptimizationResultStatus"], [41, 3, 1, "", "RecursiveMinimumEigenOptimizationResult"], [42, 3, 1, "", "RecursiveMinimumEigenOptimizer"], [43, 3, 1, "", "ScipyMilpOptimizer"], [44, 3, 1, "", "SlsqpOptimizationResult"], [45, 3, 1, "", "SlsqpOptimizer"], [46, 3, 1, "", "SolutionSample"], [47, 3, 1, "", "WarmStartQAOAFactory"], [48, 3, 1, "", "WarmStartQAOAOptimizer"], [2, 0, 0, "-", "qrao"]], "qiskit_optimization.algorithms.ADMMOptimizationResult": [[21, 4, 1, "", "fval"], [21, 2, 1, "", "get_correlations"], [21, 2, 1, "", "prettyprint"], [21, 4, 1, "", "raw_results"], [21, 4, 1, "", "samples"], [21, 4, 1, "", "state"], [21, 4, 1, "", "status"], [21, 4, 1, "", "variable_names"], [21, 4, 1, "", "variables"], [21, 4, 1, "", "variables_dict"], [21, 4, 1, "", "x"]], "qiskit_optimization.algorithms.ADMMOptimizer": [[22, 2, 1, "", "get_compatibility_msg"], [22, 2, 1, "", "is_compatible"], [22, 4, 1, "", "parameters"], [22, 2, 1, "", "solve"]], "qiskit_optimization.algorithms.BaseAggregator": [[25, 2, 1, "", "aggregate"]], "qiskit_optimization.algorithms.CobylaOptimizer": [[26, 4, 1, "", "clip"], [26, 2, 1, "", "get_compatibility_msg"], [26, 2, 1, "", "is_compatible"], [26, 2, 1, "", "multi_start_solve"], [26, 2, 1, "", "solve"], [26, 4, 1, "", "trials"]], "qiskit_optimization.algorithms.CplexOptimizer": [[27, 4, 1, "", "cplex_parameters"], [27, 4, 1, "", "disp"], [27, 2, 1, "", "get_compatibility_msg"], [27, 2, 1, "", "is_compatible"], [27, 2, 1, "", "is_cplex_installed"], [27, 2, 1, "", "solve"]], "qiskit_optimization.algorithms.GoemansWilliamsonOptimizationResult": [[28, 4, 1, "", "fval"], [28, 2, 1, "", "get_correlations"], [28, 2, 1, "", "prettyprint"], [28, 4, 1, "", "raw_results"], [28, 4, 1, "", "samples"], [28, 4, 1, "", "sdp_solution"], [28, 4, 1, "", "status"], [28, 4, 1, "", "variable_names"], [28, 4, 1, "", "variables"], [28, 4, 1, "", "variables_dict"], [28, 4, 1, "", "x"]], "qiskit_optimization.algorithms.GoemansWilliamsonOptimizer": [[29, 2, 1, "", "get_compatibility_msg"], [29, 2, 1, "", "is_compatible"], [29, 2, 1, "", "max_cut_value"], [29, 2, 1, "", "solve"]], "qiskit_optimization.algorithms.GroverOptimizationResult": [[30, 4, 1, "", "fval"], [30, 2, 1, "", "get_correlations"], [30, 4, 1, "", "intermediate_fval"], [30, 4, 1, "", "n_input_qubits"], [30, 4, 1, "", "n_output_qubits"], [30, 4, 1, "", "operation_counts"], [30, 2, 1, "", "prettyprint"], [30, 4, 1, "", "raw_results"], [30, 4, 1, "", "raw_samples"], [30, 4, 1, "", "samples"], [30, 4, 1, "", "status"], [30, 4, 1, "", "threshold"], [30, 4, 1, "", "variable_names"], [30, 4, 1, "", "variables"], [30, 4, 1, "", "variables_dict"], [30, 4, 1, "", "x"]], "qiskit_optimization.algorithms.GroverOptimizer": [[31, 2, 1, "", "get_compatibility_msg"], [31, 2, 1, "", "is_compatible"], [31, 2, 1, "", "solve"]], "qiskit_optimization.algorithms.GurobiOptimizer": [[32, 4, 1, "", "disp"], [32, 2, 1, "", "get_compatibility_msg"], [32, 2, 1, "", "is_compatible"], [32, 2, 1, "", "is_gurobi_installed"], [32, 2, 1, "", "solve"]], "qiskit_optimization.algorithms.IntermediateResult": [[33, 4, 1, "", "ALL_ITERATIONS"], [33, 4, 1, "", "LAST_ITERATION"], [33, 4, 1, "", "NO_ITERATIONS"]], "qiskit_optimization.algorithms.MeanAggregator": [[34, 2, 1, "", "aggregate"]], "qiskit_optimization.algorithms.MinimumEigenOptimizationResult": [[35, 4, 1, "", "fval"], [35, 2, 1, "", "get_correlations"], [35, 4, 1, "", "min_eigen_solver_result"], [35, 2, 1, "", "prettyprint"], [35, 4, 1, "", "raw_results"], [35, 4, 1, "", "raw_samples"], [35, 4, 1, "", "samples"], [35, 4, 1, "", "status"], [35, 4, 1, "", "variable_names"], [35, 4, 1, "", "variables"], [35, 4, 1, "", "variables_dict"], [35, 4, 1, "", "x"]], "qiskit_optimization.algorithms.MinimumEigenOptimizer": [[36, 2, 1, "", "get_compatibility_msg"], [36, 2, 1, "", "is_compatible"], [36, 4, 1, "", "min_eigen_solver"], [36, 2, 1, "", "solve"]], "qiskit_optimization.algorithms.MultiStartOptimizer": [[37, 4, 1, "", "clip"], [37, 2, 1, "", "get_compatibility_msg"], [37, 2, 1, "", "is_compatible"], [37, 2, 1, "", "multi_start_solve"], [37, 2, 1, "", "solve"], [37, 4, 1, "", "trials"]], "qiskit_optimization.algorithms.OptimizationAlgorithm": [[38, 2, 1, "", "get_compatibility_msg"], [38, 2, 1, "", "is_compatible"], [38, 2, 1, "", "solve"]], "qiskit_optimization.algorithms.OptimizationResult": [[39, 4, 1, "", "fval"], [39, 2, 1, "", "get_correlations"], [39, 2, 1, "", "prettyprint"], [39, 4, 1, "", "raw_results"], [39, 4, 1, "", "samples"], [39, 4, 1, "", "status"], [39, 4, 1, "", "variable_names"], [39, 4, 1, "", "variables"], [39, 4, 1, "", "variables_dict"], [39, 4, 1, "", "x"]], "qiskit_optimization.algorithms.OptimizationResultStatus": [[40, 4, 1, "", "FAILURE"], [40, 4, 1, "", "INFEASIBLE"], [40, 4, 1, "", "SUCCESS"]], "qiskit_optimization.algorithms.RecursiveMinimumEigenOptimizationResult": [[41, 4, 1, "", "fval"], [41, 2, 1, "", "get_correlations"], [41, 4, 1, "", "history"], [41, 2, 1, "", "prettyprint"], [41, 4, 1, "", "raw_results"], [41, 4, 1, "", "replacements"], [41, 4, 1, "", "samples"], [41, 4, 1, "", "status"], [41, 4, 1, "", "variable_names"], [41, 4, 1, "", "variables"], [41, 4, 1, "", "variables_dict"], [41, 4, 1, "", "x"]], "qiskit_optimization.algorithms.RecursiveMinimumEigenOptimizer": [[42, 2, 1, "", "get_compatibility_msg"], [42, 2, 1, "", "is_compatible"], [42, 2, 1, "", "solve"]], "qiskit_optimization.algorithms.ScipyMilpOptimizer": [[43, 4, 1, "", "disp"], [43, 2, 1, "", "get_compatibility_msg"], [43, 2, 1, "", "is_compatible"], [43, 2, 1, "", "solve"]], "qiskit_optimization.algorithms.SlsqpOptimizationResult": [[44, 4, 1, "", "fval"], [44, 4, 1, "", "fx"], [44, 2, 1, "", "get_correlations"], [44, 4, 1, "", "imode"], [44, 4, 1, "", "its"], [44, 2, 1, "", "prettyprint"], [44, 4, 1, "", "raw_results"], [44, 4, 1, "", "samples"], [44, 4, 1, "", "smode"], [44, 4, 1, "", "status"], [44, 4, 1, "", "variable_names"], [44, 4, 1, "", "variables"], [44, 4, 1, "", "variables_dict"], [44, 4, 1, "", "x"]], "qiskit_optimization.algorithms.SlsqpOptimizer": [[45, 4, 1, "", "clip"], [45, 2, 1, "", "get_compatibility_msg"], [45, 2, 1, "", "is_compatible"], [45, 2, 1, "", "multi_start_solve"], [45, 2, 1, "", "solve"], [45, 4, 1, "", "trials"]], "qiskit_optimization.algorithms.SolutionSample": [[46, 4, 1, "", "fval"], [46, 4, 1, "", "probability"], [46, 4, 1, "", "status"], [46, 4, 1, "", "x"]], "qiskit_optimization.algorithms.WarmStartQAOAFactory": [[47, 2, 1, "", "create_initial_state"], [47, 2, 1, "", "create_initial_variables"], [47, 2, 1, "", "create_mixer"]], "qiskit_optimization.algorithms.WarmStartQAOAOptimizer": [[48, 2, 1, "", "get_compatibility_msg"], [48, 2, 1, "", "is_compatible"], [48, 4, 1, "", "min_eigen_solver"], [48, 2, 1, "", "solve"]], "qiskit_optimization.algorithms.qrao": [[49, 3, 1, "", "EncodingCommutationVerifier"], [50, 3, 1, "", "MagicRounding"], [51, 3, 1, "", "QuantumRandomAccessEncoding"], [52, 3, 1, "", "QuantumRandomAccessOptimizationResult"], [53, 3, 1, "", "QuantumRandomAccessOptimizer"], [54, 3, 1, "", "RoundingContext"], [55, 3, 1, "", "RoundingResult"], [56, 3, 1, "", "RoundingScheme"], [57, 3, 1, "", "SemideterministicRounding"]], "qiskit_optimization.algorithms.qrao.MagicRounding": [[50, 4, 1, "", "basis_sampling"], [50, 2, 1, "", "round"], [50, 4, 1, "", "sampler"]], "qiskit_optimization.algorithms.qrao.QuantumRandomAccessEncoding": [[51, 4, 1, "", "compression_ratio"], [51, 2, 1, "", "encode"], [51, 2, 1, "", "freeze"], [51, 4, 1, "", "frozen"], [51, 4, 1, "", "max_vars_per_qubit"], [51, 4, 1, "", "minimum_recovery_probability"], [51, 4, 1, "", "num_qubits"], [51, 4, 1, "", "num_vars"], [51, 4, 1, "", "offset"], [51, 4, 1, "", "problem"], [51, 4, 1, "", "q2vars"], [51, 4, 1, "", "qubit_op"], [51, 2, 1, "", "state_preparation_circuit"], [51, 4, 1, "", "var2op"]], "qiskit_optimization.algorithms.qrao.QuantumRandomAccessOptimizationResult": [[52, 4, 1, "", "encoding"], [52, 4, 1, "", "fval"], [52, 2, 1, "", "get_correlations"], [52, 2, 1, "", "prettyprint"], [52, 4, 1, "", "raw_results"], [52, 4, 1, "", "relaxed_fval"], [52, 4, 1, "", "relaxed_result"], [52, 4, 1, "", "rounding_result"], [52, 4, 1, "", "samples"], [52, 4, 1, "", "status"], [52, 4, 1, "", "variable_names"], [52, 4, 1, "", "variables"], [52, 4, 1, "", "variables_dict"], [52, 4, 1, "", "x"]], "qiskit_optimization.algorithms.qrao.QuantumRandomAccessOptimizer": [[53, 2, 1, "", "get_compatibility_msg"], [53, 2, 1, "", "is_compatible"], [53, 4, 1, "", "max_vars_per_qubit"], [53, 4, 1, "", "min_eigen_solver"], [53, 2, 1, "", "process_result"], [53, 4, 1, "", "rounding_scheme"], [53, 2, 1, "", "solve"], [53, 2, 1, "", "solve_relaxed"]], "qiskit_optimization.algorithms.qrao.RoundingContext": [[54, 4, 1, "", "circuit"], [54, 4, 1, "", "encoding"], [54, 4, 1, "", "expectation_values"]], "qiskit_optimization.algorithms.qrao.RoundingResult": [[55, 4, 1, "", "bases"], [55, 4, 1, "", "basis_counts"], [55, 4, 1, "", "basis_shots"], [55, 4, 1, "", "expectation_values"], [55, 4, 1, "", "samples"]], "qiskit_optimization.algorithms.qrao.RoundingScheme": [[56, 2, 1, "", "round"]], "qiskit_optimization.algorithms.qrao.SemideterministicRounding": [[57, 2, 1, "", "round"]], "qiskit_optimization.applications": [[58, 3, 1, "", "BinPacking"], [59, 3, 1, "", "Clique"], [60, 3, 1, "", "ExactCover"], [61, 3, 1, "", "GraphOptimizationApplication"], [62, 3, 1, "", "GraphPartition"], [63, 3, 1, "", "Knapsack"], [64, 3, 1, "", "Maxcut"], [65, 3, 1, "", "NumberPartition"], [66, 3, 1, "", "OptimizationApplication"], [67, 3, 1, "", "SKModel"], [68, 3, 1, "", "SetPacking"], [69, 3, 1, "", "StableSet"], [70, 3, 1, "", "Tsp"], [71, 3, 1, "", "VehicleRouting"], [72, 3, 1, "", "VertexCover"]], "qiskit_optimization.applications.BinPacking": [[58, 2, 1, "", "get_figure"], [58, 2, 1, "", "interpret"], [58, 2, 1, "", "sample_most_likely"], [58, 2, 1, "", "to_quadratic_program"]], "qiskit_optimization.applications.Clique": [[59, 2, 1, "", "draw"], [59, 4, 1, "", "graph"], [59, 2, 1, "", "interpret"], [59, 2, 1, "", "sample_most_likely"], [59, 4, 1, "", "size"], [59, 2, 1, "", "to_quadratic_program"]], "qiskit_optimization.applications.ExactCover": [[60, 2, 1, "", "interpret"], [60, 2, 1, "", "sample_most_likely"], [60, 2, 1, "", "to_quadratic_program"]], "qiskit_optimization.applications.GraphOptimizationApplication": [[61, 2, 1, "", "draw"], [61, 4, 1, "", "graph"], [61, 2, 1, "", "interpret"], [61, 2, 1, "", "sample_most_likely"], [61, 2, 1, "", "to_quadratic_program"]], "qiskit_optimization.applications.GraphPartition": [[62, 2, 1, "", "draw"], [62, 4, 1, "", "graph"], [62, 2, 1, "", "interpret"], [62, 2, 1, "", "sample_most_likely"], [62, 2, 1, "", "to_quadratic_program"]], "qiskit_optimization.applications.Knapsack": [[63, 2, 1, "", "interpret"], [63, 4, 1, "", "max_weight"], [63, 2, 1, "", "sample_most_likely"], [63, 2, 1, "", "to_quadratic_program"]], "qiskit_optimization.applications.Maxcut": [[64, 2, 1, "", "draw"], [64, 2, 1, "", "get_gset_result"], [64, 4, 1, "", "graph"], [64, 2, 1, "", "interpret"], [64, 2, 1, "", "parse_gset_format"], [64, 2, 1, "", "sample_most_likely"], [64, 2, 1, "", "to_quadratic_program"]], "qiskit_optimization.applications.NumberPartition": [[65, 2, 1, "", "interpret"], [65, 2, 1, "", "sample_most_likely"], [65, 2, 1, "", "to_quadratic_program"]], "qiskit_optimization.applications.OptimizationApplication": [[66, 2, 1, "", "interpret"], [66, 2, 1, "", "sample_most_likely"], [66, 2, 1, "", "to_quadratic_program"]], "qiskit_optimization.applications.SKModel": [[67, 2, 1, "", "disorder"], [67, 4, 1, "", "graph"], [67, 2, 1, "", "interpret"], [67, 4, 1, "", "num_sites"], [67, 2, 1, "", "sample_most_likely"], [67, 2, 1, "", "to_quadratic_program"]], "qiskit_optimization.applications.SetPacking": [[68, 2, 1, "", "interpret"], [68, 2, 1, "", "sample_most_likely"], [68, 2, 1, "", "to_quadratic_program"]], "qiskit_optimization.applications.StableSet": [[69, 2, 1, "", "draw"], [69, 4, 1, "", "graph"], [69, 2, 1, "", "interpret"], [69, 2, 1, "", "sample_most_likely"], [69, 2, 1, "", "to_quadratic_program"]], "qiskit_optimization.applications.Tsp": [[70, 2, 1, "", "create_random_instance"], [70, 2, 1, "", "draw"], [70, 4, 1, "", "graph"], [70, 2, 1, "", "interpret"], [70, 2, 1, "", "parse_tsplib_format"], [70, 2, 1, "", "sample_most_likely"], [70, 2, 1, "", "to_quadratic_program"], [70, 2, 1, "", "tsp_value"]], "qiskit_optimization.applications.VehicleRouting": [[71, 2, 1, "", "create_random_instance"], [71, 4, 1, "", "depot"], [71, 2, 1, "", "draw"], [71, 4, 1, "", "graph"], [71, 2, 1, "", "interpret"], [71, 4, 1, "", "num_vehicles"], [71, 2, 1, "", "sample_most_likely"], [71, 2, 1, "", "to_quadratic_program"]], "qiskit_optimization.applications.VertexCover": [[72, 2, 1, "", "draw"], [72, 4, 1, "", "graph"], [72, 2, 1, "", "interpret"], [72, 2, 1, "", "sample_most_likely"], [72, 2, 1, "", "to_quadratic_program"]], "qiskit_optimization.converters": [[73, 3, 1, "", "InequalityToEquality"], [74, 3, 1, "", "IntegerToBinary"], [75, 3, 1, "", "LinearEqualityToPenalty"], [76, 3, 1, "", "LinearInequalityToPenalty"], [77, 3, 1, "", "MaximizeToMinimize"], [78, 3, 1, "", "MinimizeToMaximize"], [79, 3, 1, "", "QuadraticProgramConverter"], [80, 3, 1, "", "QuadraticProgramToQubo"]], "qiskit_optimization.converters.InequalityToEquality": [[73, 2, 1, "", "convert"], [73, 2, 1, "", "interpret"], [73, 4, 1, "", "mode"]], "qiskit_optimization.converters.IntegerToBinary": [[74, 2, 1, "", "convert"], [74, 2, 1, "", "interpret"]], "qiskit_optimization.converters.LinearEqualityToPenalty": [[75, 2, 1, "", "convert"], [75, 2, 1, "", "interpret"], [75, 4, 1, "", "penalty"]], "qiskit_optimization.converters.LinearInequalityToPenalty": [[76, 2, 1, "", "convert"], [76, 2, 1, "", "interpret"], [76, 4, 1, "", "penalty"]], "qiskit_optimization.converters.MaximizeToMinimize": [[77, 2, 1, "", "convert"], [77, 2, 1, "", "interpret"]], "qiskit_optimization.converters.MinimizeToMaximize": [[78, 2, 1, "", "convert"], [78, 2, 1, "", "interpret"]], "qiskit_optimization.converters.QuadraticProgramConverter": [[79, 2, 1, "", "convert"], [79, 2, 1, "", "interpret"]], "qiskit_optimization.converters.QuadraticProgramToQubo": [[80, 2, 1, "", "convert"], [80, 2, 1, "", "get_compatibility_msg"], [80, 2, 1, "", "interpret"], [80, 2, 1, "", "is_compatible"], [80, 4, 1, "", "penalty"]], "qiskit_optimization.infinity": [[81, 5, 1, "", "INFINITY"]], "qiskit_optimization.minimum_eigensolvers": [[82, 3, 1, "", "NumPyMinimumEigensolver"], [83, 3, 1, "", "NumPyMinimumEigensolverResult"], [84, 3, 1, "", "QAOA"], [85, 3, 1, "", "SamplingMinimumEigensolver"], [86, 3, 1, "", "SamplingMinimumEigensolverResult"], [87, 3, 1, "", "SamplingVQE"], [88, 3, 1, "", "SamplingVQEResult"], [89, 3, 1, "", "VQE"], [90, 3, 1, "", "VQEResult"]], "qiskit_optimization.minimum_eigensolvers.NumPyMinimumEigensolver": [[82, 2, 1, "", "compute_minimum_eigenvalue"], [82, 4, 1, "", "filter_criterion"], [82, 2, 1, "", "supports_aux_operators"]], "qiskit_optimization.minimum_eigensolvers.NumPyMinimumEigensolverResult": [[83, 4, 1, "", "aux_operators_evaluated"], [83, 2, 1, "", "combine"], [83, 4, 1, "", "eigenstate"], [83, 4, 1, "", "eigenvalue"]], "qiskit_optimization.minimum_eigensolvers.QAOA": [[84, 4, 1, "", "aggregation"], [84, 4, 1, "", "callback"], [84, 2, 1, "", "compute_minimum_eigenvalue"], [84, 4, 1, "", "initial_point"], [84, 4, 1, "", "initial_state"], [84, 4, 1, "", "mixer"], [84, 4, 1, "", "optimizer"], [84, 4, 1, "", "reps"], [84, 2, 1, "", "supports_aux_operators"]], "qiskit_optimization.minimum_eigensolvers.SamplingMinimumEigensolver": [[85, 2, 1, "", "compute_minimum_eigenvalue"], [85, 2, 1, "", "supports_aux_operators"]], "qiskit_optimization.minimum_eigensolvers.SamplingMinimumEigensolverResult": [[86, 4, 1, "", "aux_operators_evaluated"], [86, 4, 1, "", "best_measurement"], [86, 2, 1, "", "combine"], [86, 4, 1, "", "eigenstate"], [86, 4, 1, "", "eigenvalue"]], "qiskit_optimization.minimum_eigensolvers.SamplingVQE": [[87, 4, 1, "", "aggregation"], [87, 4, 1, "", "ansatz"], [87, 4, 1, "", "callback"], [87, 2, 1, "", "compute_minimum_eigenvalue"], [87, 4, 1, "", "initial_point"], [87, 4, 1, "", "optimizer"], [87, 4, 1, "", "pass_manager"], [87, 4, 1, "", "sampler"], [87, 2, 1, "", "supports_aux_operators"]], "qiskit_optimization.minimum_eigensolvers.SamplingVQEResult": [[88, 4, 1, "", "aux_operators_evaluated"], [88, 4, 1, "", "best_measurement"], [88, 2, 1, "", "combine"], [88, 4, 1, "", "cost_function_evals"], [88, 4, 1, "", "eigenstate"], [88, 4, 1, "", "eigenvalue"], [88, 4, 1, "", "optimal_circuit"], [88, 4, 1, "", "optimal_parameters"], [88, 4, 1, "", "optimal_point"], [88, 4, 1, "", "optimal_value"], [88, 4, 1, "", "optimizer_evals"], [88, 4, 1, "", "optimizer_result"], [88, 4, 1, "", "optimizer_time"]], "qiskit_optimization.minimum_eigensolvers.VQE": [[89, 4, 1, "", "ansatz"], [89, 4, 1, "", "callback"], [89, 2, 1, "", "compute_minimum_eigenvalue"], [89, 4, 1, "", "estimator"], [89, 4, 1, "", "gradient"], [89, 4, 1, "", "initial_point"], [89, 4, 1, "", "optimizer"], [89, 4, 1, "", "pass_manager"], [89, 2, 1, "", "supports_aux_operators"]], "qiskit_optimization.minimum_eigensolvers.VQEResult": [[90, 4, 1, "", "aux_operators_evaluated"], [90, 2, 1, "", "combine"], [90, 4, 1, "", "cost_function_evals"], [90, 4, 1, "", "eigenvalue"], [90, 4, 1, "", "optimal_circuit"], [90, 4, 1, "", "optimal_parameters"], [90, 4, 1, "", "optimal_point"], [90, 4, 1, "", "optimal_value"], [90, 4, 1, "", "optimizer_evals"], [90, 4, 1, "", "optimizer_result"], [90, 4, 1, "", "optimizer_time"]], "qiskit_optimization.optimizers": [[91, 3, 1, "", "COBYLA"], [92, 3, 1, "", "Minimizer"], [93, 3, 1, "", "NELDER_MEAD"], [94, 3, 1, "", "Optimizer"], [95, 3, 1, "", "OptimizerResult"], [96, 3, 1, "", "SPSA"], [97, 3, 1, "", "SciPyOptimizer"]], "qiskit_optimization.optimizers.COBYLA": [[91, 4, 1, "", "bounds_support_level"], [91, 2, 1, "", "get_support_level"], [91, 2, 1, "", "gradient_num_diff"], [91, 4, 1, "", "gradient_support_level"], [91, 4, 1, "", "initial_point_support_level"], [91, 4, 1, "", "is_bounds_ignored"], [91, 4, 1, "", "is_bounds_required"], [91, 4, 1, "", "is_bounds_supported"], [91, 4, 1, "", "is_gradient_ignored"], [91, 4, 1, "", "is_gradient_required"], [91, 4, 1, "", "is_gradient_supported"], [91, 4, 1, "", "is_initial_point_ignored"], [91, 4, 1, "", "is_initial_point_required"], [91, 4, 1, "", "is_initial_point_supported"], [91, 2, 1, "", "minimize"], [91, 2, 1, "", "print_options"], [91, 2, 1, "", "set_max_evals_grouped"], [91, 2, 1, "", "set_options"], [91, 4, 1, "", "setting"], [91, 4, 1, "", "settings"], [91, 2, 1, "", "wrap_function"]], "qiskit_optimization.optimizers.NELDER_MEAD": [[93, 4, 1, "", "bounds_support_level"], [93, 2, 1, "", "get_support_level"], [93, 2, 1, "", "gradient_num_diff"], [93, 4, 1, "", "gradient_support_level"], [93, 4, 1, "", "initial_point_support_level"], [93, 4, 1, "", "is_bounds_ignored"], [93, 4, 1, "", "is_bounds_required"], [93, 4, 1, "", "is_bounds_supported"], [93, 4, 1, "", "is_gradient_ignored"], [93, 4, 1, "", "is_gradient_required"], [93, 4, 1, "", "is_gradient_supported"], [93, 4, 1, "", "is_initial_point_ignored"], [93, 4, 1, "", "is_initial_point_required"], [93, 4, 1, "", "is_initial_point_supported"], [93, 2, 1, "", "minimize"], [93, 2, 1, "", "print_options"], [93, 2, 1, "", "set_max_evals_grouped"], [93, 2, 1, "", "set_options"], [93, 4, 1, "", "setting"], [93, 4, 1, "", "settings"], [93, 2, 1, "", "wrap_function"]], "qiskit_optimization.optimizers.Optimizer": [[94, 4, 1, "", "bounds_support_level"], [94, 2, 1, "", "get_support_level"], [94, 2, 1, "", "gradient_num_diff"], [94, 4, 1, "", "gradient_support_level"], [94, 4, 1, "", "initial_point_support_level"], [94, 4, 1, "", "is_bounds_ignored"], [94, 4, 1, "", "is_bounds_required"], [94, 4, 1, "", "is_bounds_supported"], [94, 4, 1, "", "is_gradient_ignored"], [94, 4, 1, "", "is_gradient_required"], [94, 4, 1, "", "is_gradient_supported"], [94, 4, 1, "", "is_initial_point_ignored"], [94, 4, 1, "", "is_initial_point_required"], [94, 4, 1, "", "is_initial_point_supported"], [94, 2, 1, "", "minimize"], [94, 2, 1, "", "print_options"], [94, 2, 1, "", "set_max_evals_grouped"], [94, 2, 1, "", "set_options"], [94, 4, 1, "", "setting"], [94, 4, 1, "", "settings"], [94, 2, 1, "", "wrap_function"]], "qiskit_optimization.optimizers.OptimizerResult": [[95, 2, 1, "", "combine"], [95, 4, 1, "", "fun"], [95, 4, 1, "", "jac"], [95, 4, 1, "", "nfev"], [95, 4, 1, "", "nit"], [95, 4, 1, "", "njev"], [95, 4, 1, "", "x"]], "qiskit_optimization.optimizers.SPSA": [[96, 4, 1, "", "bounds_support_level"], [96, 2, 1, "", "calibrate"], [96, 2, 1, "", "estimate_stddev"], [96, 2, 1, "", "get_support_level"], [96, 2, 1, "", "gradient_num_diff"], [96, 4, 1, "", "gradient_support_level"], [96, 4, 1, "", "initial_point_support_level"], [96, 4, 1, "", "is_bounds_ignored"], [96, 4, 1, "", "is_bounds_required"], [96, 4, 1, "", "is_bounds_supported"], [96, 4, 1, "", "is_gradient_ignored"], [96, 4, 1, "", "is_gradient_required"], [96, 4, 1, "", "is_gradient_supported"], [96, 4, 1, "", "is_initial_point_ignored"], [96, 4, 1, "", "is_initial_point_required"], [96, 4, 1, "", "is_initial_point_supported"], [96, 2, 1, "", "minimize"], [96, 2, 1, "", "print_options"], [96, 2, 1, "", "set_max_evals_grouped"], [96, 2, 1, "", "set_options"], [96, 4, 1, "", "setting"], [96, 4, 1, "", "settings"], [96, 2, 1, "", "wrap_function"]], "qiskit_optimization.optimizers.SciPyOptimizer": [[97, 4, 1, "", "bounds_support_level"], [97, 2, 1, "", "get_support_level"], [97, 2, 1, "", "gradient_num_diff"], [97, 4, 1, "", "gradient_support_level"], [97, 4, 1, "", "initial_point_support_level"], [97, 4, 1, "", "is_bounds_ignored"], [97, 4, 1, "", "is_bounds_required"], [97, 4, 1, "", "is_bounds_supported"], [97, 4, 1, "", "is_gradient_ignored"], [97, 4, 1, "", "is_gradient_required"], [97, 4, 1, "", "is_gradient_supported"], [97, 4, 1, "", "is_initial_point_ignored"], [97, 4, 1, "", "is_initial_point_required"], [97, 4, 1, "", "is_initial_point_supported"], [97, 2, 1, "", "minimize"], [97, 2, 1, "", "print_options"], [97, 2, 1, "", "set_max_evals_grouped"], [97, 2, 1, "", "set_options"], [97, 4, 1, "", "setting"], [97, 4, 1, "", "settings"], [97, 2, 1, "", "wrap_function"]], "qiskit_optimization.problems": [[98, 3, 1, "", "Constraint"], [99, 3, 1, "", "LinearConstraint"], [100, 3, 1, "", "LinearExpression"], [101, 3, 1, "", "QuadraticConstraint"], [102, 3, 1, "", "QuadraticExpression"], [103, 3, 1, "", "QuadraticObjective"], [104, 3, 1, "", "QuadraticProgramElement"], [105, 3, 1, "", "Variable"]], "qiskit_optimization.problems.Constraint": [[98, 2, 1, "", "evaluate"], [98, 4, 1, "", "name"], [98, 4, 1, "", "quadratic_program"], [98, 4, 1, "", "rhs"], [98, 4, 1, "", "sense"]], "qiskit_optimization.problems.LinearConstraint": [[99, 2, 1, "", "evaluate"], [99, 4, 1, "", "linear"], [99, 4, 1, "", "name"], [99, 4, 1, "", "quadratic_program"], [99, 4, 1, "", "rhs"], [99, 4, 1, "", "sense"]], "qiskit_optimization.problems.LinearExpression": [[100, 4, 1, "", "bounds"], [100, 4, 1, "", "coefficients"], [100, 2, 1, "", "evaluate"], [100, 2, 1, "", "evaluate_gradient"], [100, 4, 1, "", "quadratic_program"], [100, 2, 1, "", "to_array"], [100, 2, 1, "", "to_dict"]], "qiskit_optimization.problems.QuadraticConstraint": [[101, 2, 1, "", "evaluate"], [101, 4, 1, "", "linear"], [101, 4, 1, "", "name"], [101, 4, 1, "", "quadratic"], [101, 4, 1, "", "quadratic_program"], [101, 4, 1, "", "rhs"], [101, 4, 1, "", "sense"]], "qiskit_optimization.problems.QuadraticExpression": [[102, 4, 1, "", "bounds"], [102, 4, 1, "", "coefficients"], [102, 2, 1, "", "evaluate"], [102, 2, 1, "", "evaluate_gradient"], [102, 4, 1, "", "quadratic_program"], [102, 2, 1, "", "to_array"], [102, 2, 1, "", "to_dict"]], "qiskit_optimization.problems.QuadraticObjective": [[103, 4, 1, "", "constant"], [103, 2, 1, "", "evaluate"], [103, 2, 1, "", "evaluate_gradient"], [103, 4, 1, "", "linear"], [103, 4, 1, "", "quadratic"], [103, 4, 1, "", "quadratic_program"], [103, 4, 1, "", "sense"]], "qiskit_optimization.problems.QuadraticProgramElement": [[104, 4, 1, "", "quadratic_program"]], "qiskit_optimization.problems.Variable": [[105, 2, 1, "", "as_tuple"], [105, 4, 1, "", "lowerbound"], [105, 4, 1, "", "name"], [105, 4, 1, "", "quadratic_program"], [105, 4, 1, "", "upperbound"], [105, 4, 1, "", "vartype"]], "qiskit_optimization.translators": [[106, 6, 1, "", "from_docplex_mp"], [107, 6, 1, "", "from_gurobipy"], [108, 6, 1, "", "from_ising"], [109, 6, 1, "", "to_docplex_mp"], [110, 6, 1, "", "to_gurobipy"], [111, 6, 1, "", "to_ising"]], "qiskit_optimization.utils": [[112, 5, 1, "", "algorithm_globals"], [112, 4, 1, "", "random"], [112, 4, 1, "", "random_seed"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "exception", "Python exception"], "2": ["py", "method", "Python method"], "3": ["py", "class", "Python class"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "data", "Python data"], "6": ["py", "function", "Python function"]}, "objtypes": {"0": "py:module", "1": "py:exception", "2": "py:method", "3": "py:class", "4": "py:attribute", "5": "py:data", "6": "py:function"}, "terms": {"": [6, 11, 12, 16, 18, 20, 23, 51, 59, 77, 78, 84, 87, 89, 92, 113, 115, 116, 117, 118, 119, 122, 123, 124], "0": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125], "00": [120, 123], "0000": 120, "000000": 123, "0001": [23, 26, 93], "000111": 122, "0002": 26, "0007": 120, "0009765625": 115, "001011": 122, "001110": 122, "0020045": 122, "005": 115, "0050": 120, "00670929": 122, "00768914": 122, "008018": 122, "0082": 120, "00839765": 122, "00904119": 122, "00945322": 122, "01": [16, 119], "010011": 122, "010110": 122, "01016793": 122, "011010": 122, "0120550256828": 122, "013": 122, "0147937": 122, "0182": 124, "01945": [74, 114], "0195": 124, "01953125": 115, "0196": 124, "01_quadratic_program": 113, "02": 119, "0202": 124, "0205": 124, "02069": [22, 117], "021": 124, "0216": 124, "0221": 124, "022309": 118, "0224609375": 115, "02307313": 122, "0244140625": 115, "02683716": 122, "02739163999996": 122, "02_converters_for_quadratic_program": 114, "03043424": 122, "03075656": 122, "0309": 124, "03167": [2, 11, 50, 57, 124], "03167v2": 124, "03270000000000001": 124, "0335906": 122, "034007": 84, "03489": 84, "03616476": 122, "03740115": 122, "03781288": 122, "03_minimum_eigen_optim": 115, "04": 96, "04067172": 122, "04088": 116, "04769": 87, "04_grover_optim": 116, "05": 124, "05018v2": 96, "05249785": 122, "0591748": 122, "05_admm_optim": 117, "06": [14, 45, 124], "060546875": 123, "06199": 118, "06842969": 122, "06_examples_max_cut_and_tsp": 118, "07": [117, 122], "0712890625": 123, "071509e": 118, "0733": 120, "07616951": 122, "07978412": 122, "07_examples_vehicle_rout": 119, "08": [14, 57], "08464544": 122, "08980": [42, 115], "08_cvar_optim": 120, "0913": 122, "0922": 120, "09229252": 122, "09_application_class": 121, "0e": 117, "0i": 119, "0qiskit": 14, "0qiskit_aer0": 115, "0system": [14, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124], "0tue": 14, "0x7f55746d0d60": 124, "0x7f55746e1370": 124, "1": [2, 14, 16, 18, 20, 22, 23, 26, 27, 29, 33, 37, 39, 40, 41, 42, 45, 47, 48, 51, 53, 57, 58, 59, 60, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 74, 76, 84, 87, 89, 91, 93, 94, 96, 97, 102, 108, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124], "10": [18, 23, 74, 96, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124], "100": [26, 37, 45, 70, 71, 96, 117, 119, 120, 123], "1000": [14, 15, 16, 23, 26, 91, 93, 115, 117, 118, 120], "10000": [16, 23, 124], "100000": 23, "10000000000000001": 123, "100011": 122, "1001": 117, "100110": 122, "10095": [48, 84, 122], "101": [96, 116], "101010": 122, "102": 14, "103515625": 123, "104": [114, 121], "1040": 121, "1043": 121, "10474511999999": 122, "10546875": 123, "10598": [115, 118, 119], "10922887": 122, "1094": [18, 67], "10_warm_start_qaoa": 122, "11": [14, 18, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124], "110010": 122, "1114811568365": 119, "11148115684045": 119, "11227606": 122, "1123046875": 123, "1145": 119, "1148": [20, 108, 111], "11538": 76, "117": [114, 121], "119140625": 115, "11_using_classical_optimization_solvers_and_model": 123, "12": [18, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124], "121": 124, "1211": [18, 67], "12173696": 122, "122": [23, 117], "123": [16, 115, 116, 117, 118, 119, 120, 121, 122, 123], "12345": 122, "123456": 120, "1248": 121, "1268": 118, "1282": 118, "129": 11, "1290": 118, "12993": 119, "12_qaoa_runtim": 18, "12_quantum_random_access_optim": 124, "13": [14, 18, 45, 113, 114, 115, 117, 118, 119, 121, 122, 124], "130": [114, 121], "1304": 89, "130859375": 115, "132": 119, "13367533": 124, "133675331585035": 124, "13926592": 124, "139265920806347": 124, "14": [14, 26, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124], "1400": 14, "1411": [84, 118, 119], "1417": [96, 121], "1424": 96, "1443890447016833": 122, "1496046": 122, "15": [11, 113, 114, 115, 116, 118, 119, 121, 122, 124], "1509": 120, "1543": [119, 120], "156": [114, 121], "1560": 121, "1564": 121, "15956824": 122, "15python": 14, "16": [14, 113, 114, 115, 117, 118, 119, 121, 122, 124], "16847247999999": 122, "16929088": 122, "17": [114, 115, 118, 119, 120, 121, 122, 123, 124], "1703": 118, "1704": 96, "1706": [74, 114], "1709": 84, "17524995761801193": 122, "18": [18, 114, 115, 118, 122, 124], "1811": 76, "19": [96, 114, 115, 118, 122, 124], "1907": 87, "1910": [42, 115], "1912": 116, "195": 121, "1960": 119, "1976341966": 121, "1981715": 124, "1981715031115243": 124, "1983": 11, "1997": 96, "1998": 96, "19th": 118, "1e": [20, 45, 57, 81, 105], "1e10": 118, "1e2": 122, "1e5": 114, "1f": 122, "1qiskit": 14, "1system": 115, "1x_0": 116, "2": [2, 14, 16, 20, 23, 26, 33, 39, 40, 45, 51, 53, 71, 76, 84, 87, 89, 96, 102, 108, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124], "20": [20, 27, 81, 105, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124], "200": [96, 119], "2001": [22, 117], "2006": [11, 119], "2009": [48, 84, 122], "2011": [23, 117], "2012": 120, "2014": [115, 118, 119], "2015": 119, "2016": 118, "2017": [14, 74, 96, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124], "2019": [42, 76, 115, 116], "202": 118, "2020": [18, 22, 117, 120], "2021": 11, "2022": 14, "2024": 123, "2025": [113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124], "2026": 123, "20308746": 122, "208": [114, 121], "2080": 121, "2085": 121, "2087634": 122, "209": 114, "2099914": 122, "21": [114, 115, 118, 122, 124], "210": 114, "211": 114, "2111": [2, 11, 50, 57, 124], "21845774": 122, "22": [14, 18, 114, 115, 118, 122, 123], "220767958435153e": 124, "2208569145117456e": 124, "22669163999996": 122, "23": [14, 115, 122, 123], "232421875": 115, "234": [114, 121, 122], "23801356": 124, "238013563513266": 124, "23oslinuxw": [113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124], "24": 115, "2408476460": 116, "2415": 122, "2431640625": 118, "246": 96, "25": [14, 15, 48, 96, 115, 119, 120], "256": 120, "25672692": 122, "258": [121, 122], "259": 122, "25osdarwincpus4memori": 14, "26": [114, 121], "260": [114, 121, 122], "2600": 121, "2606": 121, "262": 122, "267": 122, "27": [14, 116], "27104997634887695": 124, "2725": 120, "27371876": 122, "27835": 120, "2783500000000174": 120, "27957653999328613": 121, "28": 118, "28602462": 122, "2872558950": 122, "29": 14, "2972095404": 117, "2ak": 119, "2an": 119, "2beta": 47, "2c_i": 122, "2d": 64, "2f": [120, 124], "2p": 84, "2qiskit_optimization0": [113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124], "2x_0x_2": 116, "2x_1": 116, "3": [2, 14, 15, 16, 20, 23, 26, 31, 39, 51, 53, 73, 84, 96, 102, 113, 114, 115, 116, 118, 120, 121, 122, 123, 124], "30": [118, 120], "300": [96, 118], "3010": 120, "30467804": 122, "3061": 89, "311796302": 120, "312": [114, 121], "3127": 121, "321043": 119, "321046": 119, "326": 119, "329": 119, "3299446067": 115, "33": 119, "3304662717": 118, "33779215999999": 122, "34065100000001": 122, "34487328": 122, "349": 122, "35": 121, "3622": 120, "36th": 96, "37044588": 122, "37689163999994": 122, "3809": 120, "384": 122, "388": 121, "39": [113, 114, 115, 117, 118, 121, 122, 123, 124], "390": 121, "3f": 122, "3x_2": 116, "4": [11, 14, 84, 96, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124], "40": 122, "4028": [84, 118, 119], "4051": 122, "40530104": 122, "40922044": 122, "4095": 120, "410": 122, "41462863999999": 122, "416": [114, 121], "418": [114, 122], "42": [16, 122], "43": 122, "4301": 120, "43763867999999": 122, "44": [122, 123], "442": 114, "4436": 122, "4461205005645752": 121, "44910424": 122, "4501953125": 115, "452463940184952e": 124, "455494524857055e": 124, "4659": 120, "468": 121, "4689": 120, "46949996942294325": 124, "46949997": 124, "4707564": 122, "4732": 120, "48": 118, "4803888163984595e": 122, "482": 96, "4831463284800508": 124, "48314633": 124, "49": 124, "492": 96, "499999985486166": 124, "4f": 120, "5": [11, 15, 47, 48, 74, 84, 96, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124], "50": [120, 122], "5067": 120, "517": 121, "52": [114, 121], "520": 121, "52806848": 122, "54049163999997": 122, "5452": 120, "54629397392273": 118, "549": 96, "55339164": 122, "559": 122, "56": 124, "57899163999997": 122, "59679268": 122, "6": [11, 14, 16, 17, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124], "600": 118, "602": 96, "6043817": 122, "606": 118, "618470907211304": 118, "6231": 120, "6233": 120, "624": 121, "626": 122, "63": 118, "63055886": 124, "630558862251217": 124, "647": 121, "65": 121, "650": 121, "65993794": 122, "67": 124, "671": 122, "68314192": 122, "691": 119, "6960120555116913": 124, "69601206": 124, "7": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125], "7296000000000049": 120, "7312": 120, "7313": 120, "7367": 118, "7379": 118, "738416867749415": 122, "744": 122, "75": [18, 115, 118], "7538": 120, "7581": 118, "7667": 120, "7689322": 122, "768932200000002": 122, "769": 122, "776": 121, "78": [11, 114, 121], "780": 121, "789": 11, "79839634": 122, "8": [11, 18, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124], "80": 20, "817": 18, "8183": 119, "82756812": 122, "832": 121, "836": 114, "84880018": 122, "85": 122, "854": 11, "85852282": 122, "8750": 120, "875381013": 119, "88": 11, "8859": [113, 123], "892": 122, "8945": 120, "89799534": 122, "8992": 120, "9": [11, 14, 18, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124], "900": 117, "90768968": 122, "91": 118, "936": 121, "9364916731037085": 115, "94": 118, "953": 122, "97": 18, "970706": 122, "970905326408768": 122, "978": 119, "985353": 122, "9893": 120, "999999978241007": 124, "999999985486166": 124, "9999999916475085": 122, "999999994717701": 124, "A": [0, 13, 18, 20, 21, 22, 25, 26, 28, 29, 30, 31, 35, 36, 37, 39, 41, 42, 44, 45, 46, 47, 48, 51, 52, 53, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 76, 77, 78, 80, 81, 82, 84, 85, 87, 89, 91, 93, 96, 97, 105, 111, 113, 115, 116, 117, 118, 119, 124], "As": [11, 12, 16, 96, 113, 114, 116, 117, 124], "At": [18, 116, 119], "But": [14, 15, 115], "By": [16, 31, 36, 42, 48, 91, 96, 114, 118, 124], "For": [2, 11, 16, 18, 48, 82, 89, 91, 93, 96, 97, 102, 113, 114, 115, 116, 117, 118, 119, 120, 122, 124], "If": [11, 12, 17, 18, 20, 22, 23, 26, 27, 29, 31, 32, 36, 37, 38, 42, 43, 45, 48, 50, 51, 53, 57, 70, 73, 75, 76, 80, 82, 84, 85, 87, 89, 93, 96, 106, 108, 111, 113, 115, 117, 119, 121, 123, 124], "In": [0, 11, 12, 42, 80, 86, 87, 96, 113, 114, 115, 116, 117, 118, 119, 120, 124], "Ising": [18, 20, 36, 108, 111, 114, 115, 120, 124], "It": [11, 14, 15, 18, 20, 36, 51, 59, 61, 62, 64, 69, 70, 71, 72, 87, 89, 93, 96, 115, 118, 122, 123, 124], "No": [14, 33, 113, 114, 115, 116, 118, 121, 122, 124], "On": [2, 14, 15, 18], "One": [11, 118, 124], "Such": 122, "That": 119, "The": [2, 7, 11, 12, 13, 14, 15, 16, 18, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 121, 122, 123, 124], "Then": [12, 115, 116, 117], "There": [73, 76, 118, 119], "These": [18, 83, 84, 86, 87, 88, 89, 90, 114, 119, 124], "To": [16, 18, 73, 96, 113, 114, 117, 118, 122, 123, 124], "With": [114, 118], "_": [39, 119, 120, 122, 124], "_0": 119, "__call__": 96, "__init__": [96, 119], "__traceback__": 19, "_bound_support_level": 94, "_flipproblemsens": [77, 78], "_ge": 18, "_geq": 114, "_gradient_support_level": 94, "_i": [119, 122], "_initial_point_support_level": 94, "_le": 18, "_leg": 114, "_leq": 114, "_m": 11, "_n": 119, "_slack": 114, "a_i": [113, 114, 116], "a_k": 96, "ab": [18, 50, 57, 67, 119], "abc": [25, 37, 38, 56, 66, 79, 85, 94], "abil": 12, "abl": [114, 119, 124], "about": [11, 12, 39, 57, 114, 115, 116, 118, 124], "abov": [11, 12, 16, 87, 89, 114, 116, 117, 119, 122, 124], "absolut": [26, 57, 93], "abstract": [25, 37, 38, 56, 61, 66, 79, 85, 94, 98, 118], "acc": 45, "acceler": 96, "accept": [18, 27, 32, 93, 96, 114], "access": [10, 12, 14, 15, 18, 51, 52, 53, 84, 87, 89, 113, 117], "accommod": 124, "accomplish": [11, 51], "accord": [23, 29, 47, 48, 115], "accordingli": [18, 20, 120], "account": [96, 115, 124], "accur": 93, "accuraci": [26, 45, 91], "achiev": 124, "acm": 119, "across": [18, 112, 124], "act": 11, "activ": [117, 119], "actual": [44, 116, 119, 121], "ad": [18, 20, 36, 75, 76, 80, 96, 114, 118, 119, 122], "adapt": [0, 13, 31, 93, 96, 118, 119], "add": [16, 18, 20, 96, 113, 114, 115, 119], "add_constraint": [18, 113, 117, 120, 122, 123], "add_edg": 118, "add_ind": 123, "add_nodes_from": 118, "add_weighted_edges_from": 118, "addconstr": 123, "addit": [0, 11, 12, 18, 21, 28, 30, 35, 39, 41, 44, 52, 73, 91, 93, 94, 96, 97, 113, 114, 118, 119, 124], "addition": 96, "address": 115, "addvar": 123, "adiabat": 118, "adj_matrix": [29, 70, 118], "adjac": [29, 64, 70], "adjust": 124, "admiss": 11, "admm": [21, 22, 23, 24], "admm_optim": 117, "admm_param": 117, "admm_q": 117, "admmoptim": [18, 21, 117], "admmoptimizationresult": 22, "admmparamet": [22, 117], "admmstat": [18, 21], "adopt": 16, "advantag": [2, 18, 118], "aer": [14, 16, 124], "aer0": 14, "aersampl": 14, "aersimul": [16, 115], "affect": 84, "after": [11, 16, 20, 42, 51, 55, 96, 114, 116, 118, 123], "again": [113, 114, 118, 119], "aggreg": [25, 34, 48, 84, 87, 114, 115, 120], "ahead": 119, "aim": 124, "aka": 124, "al": [2, 11, 42, 48, 76, 84, 89, 96, 119, 120, 124], "algebra": 119, "algorithm": [0, 5, 6, 11, 12, 13, 14, 15, 18, 21, 22, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 48, 52, 82, 84, 87, 89, 91, 93, 94, 96, 97, 112, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124], "algorithm_glob": [16, 18, 96, 115, 118, 119, 120, 121, 122], "algorithmresult": [86, 95, 124], "align": [113, 118, 122], "all": [11, 16, 17, 18, 20, 23, 27, 28, 32, 33, 50, 71, 73, 87, 92, 94, 96, 104, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124], "all_iter": 33, "allow": [0, 2, 11, 12, 13, 14, 15, 18, 39, 82, 84, 87, 89, 93, 96, 115, 118, 119, 124], "allowed_increas": 96, "allowed_statu": 115, "along": [18, 20, 88, 90], "alongsid": 116, "alpha": [18, 84, 87, 96, 118, 120], "alreadi": [12, 18, 20, 47, 53, 124], "also": [0, 11, 12, 13, 14, 18, 32, 84, 86, 87, 89, 96, 113, 114, 115, 116, 117, 118, 119, 121, 124], "alter": [14, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124], "altern": [23, 84, 117, 119], "although": [11, 124], "alwai": [18, 117, 121, 124], "among": [82, 96], "amount": [0, 116, 118], "amp": 123, "amplitud": 116, "an": [4, 5, 7, 11, 12, 13, 14, 15, 18, 20, 21, 22, 27, 28, 29, 31, 32, 36, 37, 38, 39, 40, 41, 42, 43, 46, 47, 48, 51, 53, 56, 57, 59, 60, 61, 62, 64, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 79, 80, 82, 84, 85, 87, 89, 93, 95, 96, 100, 102, 108, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124], "analogi": 11, "analysi": [118, 120], "angl": 122, "ani": [11, 14, 16, 18, 20, 21, 26, 27, 28, 30, 35, 37, 39, 41, 44, 45, 52, 76, 83, 84, 86, 87, 88, 89, 90, 95, 97, 98, 99, 100, 101, 102, 103, 105, 108, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124], "anneal": [74, 84, 118], "annot": 119, "anoth": [11, 79, 94, 113, 115], "ansatz": [2, 14, 15, 16, 18, 84, 86, 87, 88, 89, 96, 118, 119, 120, 124], "answer": [61, 66, 118, 119], "antiferromagnet": 18, "anymor": 114, "apach": [14, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124], "api": [16, 123], "apl": 96, "appear": [117, 118, 122], "append": [20, 96, 115, 119, 120, 122], "appleg": 119, "appli": [2, 11, 12, 18, 22, 26, 27, 31, 32, 36, 37, 38, 42, 43, 45, 48, 50, 114, 115, 116, 120, 121, 122, 123, 124], "applic": [0, 12, 18, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 93, 124], "appreci": 124, "approach": [2, 11, 18, 89, 114, 115, 119, 124], "appropri": [4, 11, 16, 18, 96, 118, 124], "approxim": [0, 2, 11, 13, 18, 29, 36, 50, 84, 86, 88, 91, 96, 114, 116, 119, 122, 124], "aqua": 18, "ar": [0, 7, 11, 12, 13, 14, 16, 17, 18, 20, 23, 24, 26, 31, 33, 37, 42, 45, 50, 51, 53, 57, 67, 73, 75, 76, 80, 82, 83, 84, 86, 87, 88, 89, 90, 93, 94, 96, 102, 108, 111, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124], "arang": 118, "arbitrari": [11, 84], "arch": 119, "architectur": 18, "arcsin": 122, "arg": [32, 87, 89, 91, 92, 93, 94, 96, 97], "argmax": 120, "argument": [18, 26, 45, 83, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 115, 117, 124], "aris": [118, 124], "around": [10, 18, 91, 93, 94, 96, 97, 116, 118, 119], "arrai": [11, 18, 29, 59, 61, 62, 64, 66, 69, 70, 71, 72, 76, 84, 96, 100, 102, 113, 114, 115, 119, 120, 122, 123, 124], "arrow": 119, "arxiv": [2, 11, 18, 22, 42, 48, 50, 57, 67, 74, 76, 84, 87, 89, 96, 114, 115, 116, 117, 118, 119, 122, 124], "as_tupl": 105, "ask": [118, 121], "assembli": 96, "assess": 124, "asset": 120, "assign": [11, 118, 124], "assist": 18, "associ": [11, 18, 114, 119, 124], "assum": [36, 118, 124], "assumpt": 117, "atol": 57, "attempt": [20, 50, 115], "attent": [18, 118], "attribut": [20, 21, 22, 26, 27, 28, 30, 32, 33, 35, 36, 37, 39, 40, 41, 43, 44, 45, 46, 48, 50, 51, 52, 53, 54, 55, 59, 61, 62, 63, 64, 67, 69, 70, 71, 72, 73, 75, 76, 80, 82, 83, 84, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 115, 117, 124], "attributeerror": 31, "aug": [113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124], "augment": 119, "auto": 73, "automat": [0, 2, 12, 13, 16, 18, 75, 76, 80, 96, 106, 115, 120, 123, 124], "aux": [83, 86, 88, 90], "aux_oper": [82, 84, 85, 87, 89], "aux_operators_evalu": [83, 86, 88, 90, 124], "aux_valu": 82, "auxiliari": [53, 82, 84, 85, 87, 89], "avail": [7, 12, 16, 57, 117, 118, 119, 121, 122, 124], "averag": [34, 96, 120], "avg": 96, "avoid": 18, "ax": [11, 118], "axi": [116, 119], "b": [11, 23, 87, 89, 113, 114, 117, 118, 119, 123], "bY": 11, "back": [2, 11, 74, 75, 76, 77, 78, 114, 115, 119, 124], "backend": [14, 16, 18, 50, 115, 117, 124], "backend_opt": 16, "backendsampl": 14, "background": 10, "backward": 18, "bar": 11, "barkoutso": [87, 120], "base": [11, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 115, 117, 118, 119, 120, 124], "baseaggreg": [34, 48], "basebackend": 18, "baseestim": 89, "baseestimatorgradi": 89, "baseestimatorv1": [16, 49, 89], "baseestimatorv2": [16, 18, 49, 89], "baseoper": [20, 82, 84, 85, 87, 89, 108], "basepassmanag": [31, 49, 50, 84, 87, 89], "basesampl": [14, 18, 84], "basesamplerv1": [16, 31, 50, 84, 87], "basesamplerv2": [16, 18, 31, 50, 84, 87], "basi": [11, 50, 55, 84, 87, 118, 119, 124], "basic": [14, 15, 107, 114, 115, 119], "basica": 14, "basis_count": 55, "basis_sampl": 50, "basis_shot": 55, "batch": [91, 93, 94, 96, 97], "bear": 118, "becaus": [11, 14, 15, 18, 114, 117, 124], "becom": [11, 118, 122], "been": [11, 12, 14, 15, 16, 18, 31, 51, 53, 84, 87, 89, 96, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124], "befor": [4, 11, 16, 18, 30, 48, 96, 114, 115, 119, 123, 124], "beforehand": 121, "begin": [11, 18, 76, 113, 116, 122, 124], "behav": [11, 18], "behavior": [47, 96, 122, 124], "behind": 11, "being": [0, 12, 24, 41, 44, 113, 115, 116, 118, 119], "belief": 118, "belong": 124, "below": [2, 17, 18, 113, 115, 116, 119, 122, 124], "benchmark": [0, 13, 115, 117], "benefici": 124, "best": [18, 86, 88, 115, 116, 118, 119, 120, 123, 124], "best_cost_brut": 118, "best_dist": 118, "best_measur": [86, 88], "best_ord": 118, "beta": [23, 84, 117, 122], "better": [11, 18, 93, 115, 120], "between": [0, 4, 8, 11, 13, 16, 18, 47, 48, 93, 114, 117, 118, 119, 120, 121, 124], "bf": 119, "bfg": [87, 89], "big": [11, 18, 106, 119, 123], "bigotimes_": 122, "billion": 119, "bin": [18, 58, 118], "bin_packing_problem": [18, 58], "binari": [0, 2, 11, 14, 18, 20, 22, 23, 29, 36, 51, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 76, 106, 107, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124], "binary_cost": 119, "binary_prob": 120, "binary_represent": 119, "binary_var": [2, 14, 16, 18, 20, 39, 113, 114, 115, 116, 117, 119, 122, 123], "binary_var_dict": 20, "binary_var_list": [18, 20, 120], "binpack": 18, "bit": [18, 124], "bitstr": [11, 18, 86, 88], "bixbi": 119, "block": [22, 23, 96, 117], "blog": 18, "board": 18, "boldsymbol": [118, 119], "bool": [20, 22, 23, 26, 27, 29, 31, 32, 36, 37, 38, 42, 43, 45, 48, 53, 80, 82, 84, 85, 87, 89, 91, 93, 96, 100, 102, 108, 123], "boolean": [23, 82], "both": [10, 11, 14, 16, 18, 31, 93, 96, 114, 115, 117, 118, 122, 123, 124], "bound": [11, 18, 20, 26, 37, 45, 50, 74, 84, 87, 89, 91, 92, 93, 94, 96, 97, 100, 102, 105, 113, 114, 119, 122, 123, 124], "boundari": 118, "bounds_support_level": [91, 93, 94, 96, 97], "boyd": [23, 117], "bracket": 11, "branch": [119, 123], "bravyi": [42, 115], "break": [2, 11, 18, 124], "briefli": 113, "bright": 116, "brows": 123, "brute_force_tsp": 118, "bryce": [2, 11, 124], "budget": 120, "bug": 124, "bui": 118, "build": [59, 61, 62, 64, 69, 70, 71, 72, 113, 122], "buildmain": 14, "built": [118, 119, 122], "bulk": 18, "c": [11, 22, 96, 113, 116, 117, 118, 119, 122, 123], "c0": [20, 113, 118, 121, 122, 123], "c1": [113, 118, 121], "c2": [118, 121], "c3": [118, 121], "c4": [118, 121], "c5": [118, 121], "c6": 121, "c7": 121, "c8": 121, "c_i": 122, "c_k": 96, "c_star": 122, "calcul": [18, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 75, 76, 80, 87, 96, 114, 124], "calibr": 96, "call": [12, 18, 42, 51, 53, 91, 93, 94, 96, 97, 113, 114, 115, 118, 124], "callabl": [26, 37, 45, 82, 84, 87, 89, 91, 92, 93, 94, 96, 97], "callback": [84, 87, 89, 96, 120], "can": [0, 2, 11, 12, 14, 15, 18, 20, 22, 23, 26, 27, 29, 31, 32, 36, 37, 38, 42, 43, 45, 47, 48, 50, 51, 53, 59, 61, 62, 64, 69, 70, 71, 72, 80, 82, 84, 85, 87, 88, 89, 90, 93, 94, 96, 100, 102, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124], "candid": 124, "cannot": [0, 12, 14, 15, 18, 20, 31, 113], "capabl": [2, 124], "capac": [58, 63, 118, 121], "captur": 123, "carri": [14, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124], "case": [11, 18, 21, 27, 28, 30, 35, 39, 41, 42, 44, 48, 52, 73, 74, 75, 76, 77, 78, 80, 84, 92, 93, 113, 114, 115, 116, 117, 118, 119, 120, 124], "cast": [11, 118], "catol": 26, "caus": [18, 124], "cd": 12, "cdot": 11, "cell": [14, 113, 119], "centuri": 118, "certain": [11, 84, 87, 89, 96, 114, 116, 117], "challeng": 119, "chang": [12, 18, 26, 47, 48, 91, 116, 122], "check": [12, 18, 22, 26, 27, 29, 31, 32, 36, 37, 38, 42, 43, 45, 48, 53, 80, 119, 124], "chemistri": [82, 89, 115], "choic": [11, 96, 118, 119], "choos": [11, 50, 73, 117, 118, 119, 124], "chose": 122, "chosen": [18, 67, 87, 96, 118, 119], "chu": [23, 117], "chv\u00e1tal": 119, "circuit": [2, 14, 15, 16, 18, 31, 47, 48, 49, 50, 51, 54, 84, 87, 88, 89, 90, 96, 115, 118, 119, 120, 122, 124], "circuit_factori": 48, "circuit_metadata": 124, "circumst": 0, "citi": [70, 118, 121], "clang": 14, "clariti": 116, "class": [0, 2, 7, 12, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 113, 114, 115, 117, 119, 122, 124], "classic": [0, 2, 6, 11, 13, 18, 22, 84, 86, 87, 88, 89, 115, 118, 120, 124], "classical_cost": 119, "classical_optim": 119, "classicaloptim": 119, "classmethod": [82, 84, 85, 87, 89], "clear": [11, 20, 124], "clf": 117, "client": [18, 119], "clifford": 122, "clip": [26, 37, 45], "cliqu": 121, "clique_": 59, "clone": 12, "close": [11, 32, 118, 119, 124], "cloud": 18, "cluster": 118, "co": 11, "cobyla": [2, 14, 15, 16, 18, 26, 115, 117, 120, 121, 122, 123, 124], "cobylaoptim": 117, "code": [2, 10, 12, 14, 15, 16, 17, 18, 51, 96, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124], "coef": 119, "coeff": [96, 115, 118, 121, 124], "coeffici": [18, 20, 74, 96, 99, 100, 101, 102, 103, 108, 113, 114, 118], "coincid": [115, 116, 117, 118, 119, 120, 121, 122], "col": 119, "collect": [118, 119, 121, 124], "colloqui": 118, "color": [11, 59, 61, 62, 64, 69, 70, 71, 72, 116, 118, 119], "com": [12, 18, 20, 27, 108, 111], "combin": [25, 34, 83, 86, 88, 90, 95, 118, 119, 121, 124], "combinatori": [2, 11, 84, 116, 118, 119], "come": [118, 123], "command": 12, "common": [3, 112, 114], "commonli": 114, "commun": [11, 12, 18], "commut": [49, 51, 124], "compar": [2, 18, 118, 122, 123, 124], "comparison": [119, 124], "compat": [0, 12, 13, 16, 18, 22, 26, 27, 29, 31, 32, 36, 37, 38, 42, 43, 45, 48, 53, 80, 114, 119, 124], "compilerclang": 14, "complet": [0, 18, 45, 96, 118, 119, 121], "complex": [11, 54, 55, 87, 118], "compon": [16, 18, 96, 116, 118, 119, 121, 124], "compos": 11, "composit": 11, "comprehens": [16, 18, 113, 117, 124], "compress": [51, 102, 113, 124], "compression_ratio": [51, 124], "compris": [84, 111, 119], "comput": [2, 11, 18, 21, 22, 23, 24, 29, 36, 48, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 96, 97, 115, 117, 119, 121, 122, 124], "computation": 119, "compute_allowed_combin": 119, "compute_minimum_eigenvalu": [18, 82, 84, 85, 87, 89, 118], "conceiv": 11, "concept": [11, 115], "concret": [11, 116], "condit": [11, 117, 118, 120], "confer": 96, "confid": 120, "configur": [18, 50, 67, 84, 124], "confus": 18, "conjug": 11, "connect": [11, 118, 119, 121], "cons1": 117, "cons2": 117, "cons3": 117, "consequ": [11, 124], "consid": [11, 23, 82, 115, 118, 119, 120, 124], "consider": [93, 118], "consist": [16, 18, 26, 30, 36, 45, 101, 105, 122], "consolid": [115, 124], "const": 118, "constant": [18, 20, 51, 81, 96, 103, 108, 111, 113, 115, 119], "constrain": [0, 11, 20, 84, 91, 113, 116, 117], "constraint": [0, 11, 14, 18, 20, 23, 26, 36, 42, 43, 51, 73, 74, 75, 76, 80, 93, 99, 101, 106, 107, 111, 114, 115, 116, 117, 118, 119, 121, 122, 124], "constraintsens": [20, 98, 99, 101, 113], "construct": [20, 30, 37, 41, 44, 47, 51, 76, 84, 87, 89, 91, 93, 94, 96, 97, 101, 103, 115, 116, 117, 118, 124], "construct_problem": 119, "constructor": [16, 26, 45, 105, 117], "consumpt": [118, 124], "contain": [6, 26, 28, 41, 45, 50, 51, 54, 57, 73, 74, 75, 84, 85, 86, 87, 91, 93, 94, 96, 97, 100, 102, 106, 107, 109, 114, 115, 116, 117, 119, 124], "context": [11, 18, 50, 53, 57, 116, 118, 124], "continu": [0, 11, 18, 20, 22, 23, 26, 45, 48, 73, 105, 106, 107, 111, 113, 117, 118, 119, 122], "continuous_optim": [22, 117], "continuous_var": [18, 20, 45, 113, 117], "continuous_var_dict": 20, "continuous_var_list": [18, 20], "contrast": [86, 87], "contribut": 119, "control": [26, 96, 118, 119, 122, 124], "conv": [73, 74, 80, 114, 121], "conveni": [11, 114, 118, 123, 124], "convent": 119, "converg": [23, 91, 93, 96, 117, 118, 124], "convers": [0, 4, 11, 13, 75, 76, 79, 80, 113, 114, 115], "convert": [18, 20, 31, 36, 39, 42, 48, 53, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 106, 116, 118, 120, 121, 122, 123, 124], "convex": [0, 27, 32, 43, 117, 122], "convex_optim": 117, "convinc": 11, "cook": 119, "coordin": [70, 71], "copi": [11, 14, 16, 20, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124], "copyright": [14, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124], "core": [11, 18, 116, 118], "correct": [11, 48, 114, 119], "correctli": [18, 20, 114, 116], "correl": [21, 28, 30, 35, 39, 41, 44, 52], "correspond": [11, 14, 15, 20, 21, 28, 30, 35, 36, 39, 41, 42, 44, 47, 48, 51, 52, 54, 55, 59, 60, 63, 64, 68, 69, 70, 72, 83, 89, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 120, 121, 124], "correspondingli": [26, 37, 45], "cost": [88, 90, 117, 119, 122], "cost_function_ev": [88, 90, 124], "could": [11, 18, 118, 119, 122, 124], "count": [18, 20, 30, 55, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 82, 84, 87, 89, 119, 124], "countabl": 118, "counter": 116, "cours": 96, "covari": 120, "cover": [0, 13, 16, 18, 60, 72], "cplex": [12, 18, 20, 27, 115, 117, 123], "cplex_optim": 114, "cplex_paramet": [18, 27, 123], "cplex_result": 123, "cplex_solut": 119, "cplexerror": 119, "cplexoptim": [12, 18, 39, 114, 117, 122, 123], "cpxparam_read_datacheck": 123, "cpxparam_thread": 123, "cpxparam_timelimit": 123, "creat": [12, 16, 20, 31, 36, 42, 47, 48, 58, 59, 60, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 100, 102, 105, 108, 115, 116, 117, 118, 120, 122, 124], "create_initial_st": 47, "create_initial_vari": 47, "create_mix": 47, "create_problem": 122, "create_random_inst": [70, 71, 118], "criterion": [82, 96, 118], "cross": [18, 118], "crow": 119, "crucial": [11, 124], "crunch": 115, "current": [11, 21, 22, 28, 30, 35, 39, 41, 44, 52, 114, 116], "curvatur": 96, "custom": [16, 84, 96, 116, 117], "cut": [11, 29, 64, 114, 119, 121, 123, 124], "cvar": [18, 84, 87], "cvx": 12, "cvxpy": 12, "cycl": [70, 118], "cz": [11, 118], "d": [11, 84, 116, 118, 119, 121, 122, 124], "dai": 119, "daniel": 48, "data": [70, 84, 87, 89, 119], "databas": 119, "date": 20, "deal": [113, 118, 122], "dec": 14, "decid": 18, "decim": 114, "decis": [11, 18, 23, 51, 53, 96, 117, 118, 119, 124], "declar": 113, "decompos": 11, "decomposit": 117, "decreas": [11, 116], "dedic": 18, "deduc": 11, "deepcopi": 122, "deeper": 11, "def": [32, 87, 89, 96, 115, 118, 119, 120, 122, 123], "default": [12, 18, 20, 23, 31, 36, 42, 45, 48, 50, 51, 53, 58, 59, 91, 93, 94, 96, 97, 108, 114, 118, 119, 124], "default_ax": 118, "default_precis": 16, "default_rng": 67, "default_shot": [16, 115, 120, 124], "defin": [7, 11, 18, 23, 30, 33, 44, 73, 80, 92, 100, 102, 113, 114, 116, 117, 118, 119, 120, 122, 123, 124], "definit": [96, 118, 122], "delet": 20, "deliveri": 119, "delta": 119, "demonstr": [2, 18, 117, 118, 119, 124], "denot": [11, 20, 115, 119], "dens": 113, "densiti": 11, "depart": 71, "depend": [11, 12, 16, 18, 27, 32, 43, 87, 114, 118, 119, 122, 123, 124], "depot": [71, 119, 121], "deprec": [14, 15, 16, 17, 20, 115, 116, 117, 118, 119, 120, 121, 122], "deprecationwarn": [115, 116, 117, 118, 119, 120, 121, 122], "depth": [18, 84, 115, 118, 119], "deriv": [14, 91, 93, 106, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124], "descent": 96, "describ": [11, 26, 31, 36, 42, 43, 44, 45, 48, 50, 53, 80, 116, 118], "design": [0, 2, 6, 13, 51, 117, 119, 124], "desir": [112, 124], "despit": 115, "detail": [11, 12, 14, 15, 16, 18, 20, 27, 50, 91, 93, 96, 97, 108, 111, 114, 115, 118, 123, 124], "detect": [16, 18], "determin": [27, 57, 76, 96, 100, 102, 119, 124], "determinist": [16, 18, 57, 124], "dev": 12, "develop": [0, 12, 13, 18], "deviat": [96, 115], "devic": [0, 13, 96, 115, 117, 118, 124], "devis": 117, "devnul": 32, "diag": 87, "diagon": [18, 84, 85, 87, 122, 124], "dict": [20, 27, 30, 41, 55, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 84, 87, 89, 91, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 113], "dictat": 84, "dictionari": [18, 20, 21, 28, 30, 35, 39, 41, 44, 52, 84, 87, 88, 89, 90, 91, 93, 94, 96, 97, 100, 102, 113, 120], "did": [18, 50, 114], "didn": 18, "differ": [0, 2, 4, 11, 13, 14, 16, 18, 31, 36, 42, 44, 48, 75, 76, 77, 78, 84, 96, 114, 115, 117, 118, 119, 120, 122, 124], "differenti": [91, 93, 94, 96, 97], "difficulti": 118, "diffus": 116, "digest": 96, "digraph": 118, "dimens": [96, 119], "dimension": [93, 113], "dipol": [82, 89], "dir": 124, "direct": [23, 96, 117], "directli": [7, 11, 16, 18, 59, 61, 62, 64, 69, 70, 71, 72, 84, 115, 118, 123, 124], "directori": [14, 20, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124], "disabl": 20, "discov": 124, "discrep": 124, "discret": 11, "discuss": [11, 116, 117, 119], "disjoint": 121, "disord": [18, 67], "disp": [26, 27, 32, 43, 91, 93, 123], "displai": [18, 27, 32, 43, 116, 117, 123], "distanc": [118, 119, 121], "distinct": [2, 11, 18, 119, 124], "distinguish": 11, "distribut": [23, 67, 86, 88, 116, 117, 118, 119, 122, 124], "dive": 12, "divers": 124, "divid": [51, 62, 113, 124], "dmitri": [18, 67], "dmod": 123, "do": [11, 12, 18, 39, 76, 114, 118, 119, 120, 122], "doc": [18, 26, 27, 43, 45, 91, 93, 97, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124], "docpblex": 123, "docplex": [0, 13, 18, 106, 109, 114, 116, 117, 120, 122], "docplex_model": 123, "docplex_model1": [116, 122], "docplex_mp": 114, "docplexexcept": 20, "document": [10, 11, 14, 15, 18, 44, 113, 124], "doe": [11, 14, 16, 18, 20, 23, 36, 53, 75, 84, 87, 89, 91, 93, 94, 96, 97, 103, 115, 116, 118, 124], "doesn": 94, "doi": 119, "dok_matrix": [100, 102], "don": 12, "done": [2, 18, 118], "dot": [11, 113, 119], "down": [11, 116, 118, 124], "draw": [12, 59, 61, 62, 64, 69, 70, 71, 72, 121, 122, 124], "draw_graph": 118, "draw_networkx": 118, "draw_networkx_edge_label": 118, "draw_tsp_solut": 118, "drawn": [26, 37, 45, 118], "driven": 18, "drop": 18, "dual": [23, 117], "due": [14, 20, 27, 31, 32, 42, 43, 112, 113, 114, 118, 119], "dump": [21, 28, 30, 35, 39, 41, 44, 52], "duplic": 124, "dure": [24, 36, 119], "dvar": 123, "e": [0, 11, 12, 16, 18, 20, 23, 26, 31, 36, 42, 45, 48, 53, 67, 80, 84, 87, 89, 91, 93, 94, 96, 97, 102, 108, 111, 113, 114, 115, 116, 117, 118, 119, 122, 123], "e_": 11, "each": [11, 23, 24, 30, 33, 34, 42, 45, 51, 55, 58, 71, 84, 87, 89, 96, 112, 114, 115, 116, 117, 118, 119, 120, 121, 124], "earli": [115, 118], "earlier": [11, 20, 116, 124], "easi": [0, 13, 61, 66, 118, 122], "easier": [11, 122], "easili": [0, 13, 113, 121], "eckstein": [23, 117], "ecosystem": 18, "edg": [11, 70, 118, 119, 121, 124], "edge_color": 118, "edge_label": 118, "edit": 12, "edu": 96, "ee": 118, "effect": [12, 22], "effici": [0, 12, 13, 18, 96, 117, 118], "egger": [48, 84, 122], "eigen": [14, 15, 35, 36, 41, 42, 114, 117, 118, 121, 124], "eigensolv": [0, 18, 36, 48, 50, 52, 53, 82, 83, 84, 85, 86, 87, 89, 90, 96, 116, 117, 118, 119, 120, 121, 124], "eigenst": [11, 36, 82, 83, 84, 85, 86, 87, 88, 90, 118, 120], "eigenvalu": [5, 18, 82, 83, 84, 85, 86, 87, 88, 89, 90, 118, 124], "eigenvector": 118, "either": [11, 41, 48, 50, 57, 84, 87, 89, 92, 96, 100, 102, 113, 124], "element": [11, 20, 41, 51, 82, 96, 106, 107, 109, 110, 116], "elimin": [16, 18, 119, 124], "elist": 118, "ell": 117, "els": [20, 27, 32, 118, 119, 120], "embed": 11, "emphas": 18, "empir": 124, "emploi": [119, 124], "empti": [18, 20, 22, 27, 29, 32, 37, 38, 43, 82, 94, 113], "en": [18, 27, 58, 59, 60, 62, 63, 64, 65, 68, 69, 70, 71, 72], "enabl": [0, 2, 12, 13, 18, 118, 124], "encapsul": 124, "encod": [18, 29, 49, 51, 52, 53, 54, 74, 113, 114, 116, 119, 123], "encoded_obj_v": 124, "encodingcommutationverifi": 124, "encourag": [11, 18, 124], "end": [11, 18, 20, 33, 40, 76, 96, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123], "endpoint": 121, "energi": [11, 18, 84, 87, 89, 92, 118], "enforc": [11, 117, 119], "engin": 118, "enhanc": [18, 124], "enough": [11, 118, 119, 122], "ensur": [11, 16, 18, 51, 96, 114, 118, 122], "entangl": [118, 119], "entir": [86, 88], "entri": 124, "enum": [33, 40], "enumer": [115, 122], "environ": 12, "eof": 18, "epsilon": [14, 15, 47, 48, 91, 93, 94, 96, 97, 122], "eq": [20, 74, 113, 114], "eqnarrai": 116, "equal": [0, 11, 18, 20, 23, 36, 39, 42, 58, 73, 75, 76, 80, 114, 115, 116, 117, 119, 121, 124], "equiv": 118, "equival": [11, 114, 115, 116, 118], "error": [0, 14, 18, 19, 93, 113, 119], "especi": [93, 124], "essenti": [11, 16, 18, 114, 124], "establish": [18, 119], "estim": [2, 11, 14, 16, 18, 49, 87, 89, 96, 118, 119, 124], "estimate_stddev": 96, "et": [2, 11, 42, 48, 76, 84, 89, 96, 119, 120, 124], "etc": 10, "euc_2d": 70, "euclidean": 119, "eval": [91, 93, 94, 96, 97], "evalu": [11, 18, 26, 82, 84, 85, 87, 88, 89, 90, 91, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 118, 119, 120, 124], "evaluate_gradi": [18, 100, 102, 103], "even": [23, 82, 114, 117, 118, 119], "everi": [11, 42, 75, 76, 80, 89, 116, 118, 119, 124], "everyth": 20, "evolut": 84, "evolv": [47, 84], "ex": 14, "ex6": 117, "exact": [60, 96, 115, 117, 118, 119, 121], "exact_cov": 60, "exact_m": [115, 122, 124], "exact_result": [115, 116, 124], "exact_solv": 116, "exactli": [11, 114, 119, 121], "examin": 124, "exampl": [2, 11, 14, 18, 20, 26, 27, 32, 36, 39, 42, 45, 73, 74, 80, 92, 96, 102, 112, 114, 115, 116, 118, 119, 121, 122, 124], "exc": 119, "exce": 20, "except": [14, 15, 16, 19, 27, 31, 32, 43, 113, 114, 115, 119, 121], "execut": [18, 87, 89, 96], "exist": [11, 14, 15, 18, 20, 75, 76, 83, 86, 88, 90, 95, 111, 114, 118, 122], "exit": 44, "expand": 36, "expect": [11, 18, 30, 50, 54, 55, 57, 82, 83, 84, 85, 86, 87, 88, 89, 90, 104, 114, 118, 119, 120, 124], "expectation_valu": [54, 55], "experi": [2, 18], "expir": 123, "explain": [26, 31, 36, 42, 45, 48, 53, 80, 113, 114, 119, 124], "explan": [14, 15, 124], "explic": 11, "explicit": [16, 48], "explicitli": [11, 124], "exploit": 118, "explor": [2, 18, 28, 116, 124], "expon": 96, "exponenti": [11, 118, 122], "export_as_lp_str": [18, 20, 113, 123], "expos": 105, "express": [18, 99, 100, 101, 102, 106, 113], "extend": [0, 11, 12, 13, 84, 119], "extens": [14, 15, 118], "extent": 118, "extern": [18, 105], "extra": 18, "extract": 11, "ey": 119, "f": [11, 84, 91, 93, 94, 96, 97, 115, 119, 121, 122, 123, 124], "f4cec290b": 123, "facilit": [0, 13], "fact": [18, 83, 90, 93], "factor": [11, 18, 23, 31, 36, 42, 48, 53, 75, 76, 80, 113, 114, 120, 124], "factor_c": [23, 117], "factori": [47, 48, 119], "fail": 18, "failur": [11, 21, 28, 30, 35, 39, 40, 41, 44, 52, 73, 74, 75, 76, 77, 78, 115], "faithfulli": 11, "fallback": 18, "fals": [20, 22, 23, 26, 27, 29, 31, 32, 36, 37, 38, 42, 43, 45, 48, 53, 80, 82, 84, 85, 87, 89, 91, 93, 96, 100, 102, 108, 117], "familiar": 11, "far": 11, "farhi": [84, 118, 119], "fashion": 119, "faster": [18, 118], "favor": 16, "feasibl": [11, 18, 20, 23, 26, 40, 82, 84, 117, 118, 119], "featur": [2, 12, 96, 106, 122], "feedback": 118, "ferromagnet": 18, "fewer": [2, 116, 124], "field": [18, 117, 118], "fig": 58, "figsiz": 120, "figur": [119, 120], "file": [12, 14, 18, 20, 64, 70, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124], "filenam": [20, 64, 70], "filenotfounderror": 20, "filter": [20, 82, 115], "filter_criterion": 82, "filtered_sampl": 115, "filtertyp": 82, "final": [11, 26, 44, 45, 84, 85, 86, 87, 88, 91, 95, 114, 115, 117, 118, 119, 120, 124], "financ": [117, 118], "find": [5, 11, 12, 18, 26, 31, 36, 40, 45, 84, 87, 89, 93, 96, 113, 115, 118, 119, 121, 124], "fine": 84, "finit": [96, 118], "first": [11, 12, 23, 26, 37, 41, 45, 93, 96, 113, 114, 115, 117, 118, 119, 121, 122, 123], "fix": 96, "flag": [23, 116], "flexibl": [2, 18, 124], "fli": 119, "flip": [11, 77, 78], "float": [20, 21, 23, 24, 26, 28, 29, 30, 31, 35, 36, 37, 39, 41, 42, 44, 45, 46, 47, 48, 52, 53, 57, 70, 73, 74, 75, 76, 77, 78, 80, 84, 86, 87, 88, 89, 91, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 108, 111, 115], "float64": [113, 115, 119, 123, 124], "flow": 124, "flush": 32, "fmin_cobyla": 26, "fmin_slsqp": [44, 45], "focu": 124, "focus": [12, 18, 120], "folder": 12, "follow": [7, 11, 12, 14, 15, 16, 17, 18, 20, 39, 51, 76, 84, 87, 89, 92, 106, 107, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124], "font_color": 118, "fontsiz": 120, "foral": [11, 117, 118, 119], "form": [11, 20, 31, 36, 42, 48, 79, 80, 102, 103, 114, 115, 118, 119, 121, 124], "formal": [116, 118, 119], "format": [16, 18, 20, 59, 61, 62, 64, 66, 69, 70, 71, 72, 80, 83, 86, 88, 90, 94, 113, 114, 115, 120, 123], "format_qaoa_sampl": 122, "former": [15, 18], "formul": [18, 76, 106, 113, 114, 115, 118, 123], "fortun": 11, "forward": 124, "found": [18, 21, 22, 23, 28, 29, 30, 35, 37, 38, 39, 41, 44, 52, 116, 117, 118, 119, 123, 124], "foundat": [18, 23, 117], "four": 11, "frac": [11, 96, 118], "fraction": 115, "frame": 118, "frameon": 118, "framework": [13, 116], "fred": 76, "free": [11, 118, 123], "freez": 51, "frequenc": 26, "friendli": 18, "from": [0, 2, 11, 12, 13, 14, 15, 18, 20, 21, 26, 27, 28, 29, 30, 32, 33, 35, 36, 37, 39, 41, 42, 43, 44, 45, 47, 48, 50, 52, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 83, 84, 86, 87, 88, 89, 90, 95, 96, 106, 108, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124], "from_docplex": 18, "from_docplex_mp": [18, 20, 113, 116, 117, 120, 122, 123], "from_gurobipi": [18, 20, 123], "from_is": [18, 20, 115], "front": 115, "frontier": 118, "frozen": 51, "full": [11, 18, 84, 117, 123], "full_output": 45, "fuller": [2, 11, 124], "fulli": [118, 119], "fun": [87, 89, 91, 92, 93, 94, 95, 96, 97, 119, 124], "func": [45, 91, 93, 94, 96, 97], "function": [4, 11, 12, 18, 20, 21, 26, 28, 30, 31, 35, 36, 39, 41, 43, 44, 45, 46, 49, 51, 52, 76, 84, 87, 89, 91, 92, 93, 94, 95, 96, 97, 103, 106, 107, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124], "function_wrapp": [91, 93, 94, 96, 97], "functool": [87, 89], "fundament": [0, 13], "further": [11, 18, 51, 91, 93, 96, 97, 120, 123], "furthermor": [0, 13, 118], "futur": [14, 16, 18, 118], "fval": [11, 14, 18, 21, 28, 30, 35, 39, 41, 44, 46, 52, 114, 115, 117, 120, 122, 123, 124], "fx": 44, "g": [11, 16, 18, 20, 36, 42, 67, 87, 91, 93, 94, 96, 97, 113, 114, 115, 116, 117, 118, 119, 123], "g2": 118, "ga": [31, 116], "gambella": [22, 117], "gamma": [84, 96], "gate": [118, 119], "gb": 14, "ge": [20, 113, 114], "gener": [11, 18, 26, 29, 39, 43, 45, 47, 50, 51, 57, 67, 84, 87, 89, 91, 93, 96, 97, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124], "generate_inst": 119, "generate_preset_pass_manag": [16, 115], "geq": [11, 18, 76, 113, 114], "get": [13, 18, 20, 21, 28, 30, 35, 39, 41, 44, 52, 58, 64, 82, 89, 96, 113, 115, 118, 119, 123], "get_backend": [14, 18], "get_compatibility_msg": [22, 26, 27, 29, 31, 32, 36, 37, 38, 42, 43, 45, 48, 53, 80], "get_correl": [21, 28, 30, 35, 39, 41, 44, 52], "get_count": 18, "get_edge_attribut": 118, "get_edge_data": 118, "get_feasibility_info": 20, "get_figur": 58, "get_filtered_sampl": 115, "get_gset_result": 64, "get_linear_constraint": [20, 113], "get_num_binary_var": [20, 119], "get_num_continuous_var": 20, "get_num_integer_var": 20, "get_num_linear_constraint": 20, "get_num_quadratic_constraint": 20, "get_num_var": 20, "get_objective_valu": 119, "get_provid": 18, "get_quadratic_constraint": [20, 113], "get_support_level": [91, 93, 94, 96, 97], "get_valu": 119, "get_vari": 20, "getattr": 124, "getter": [30, 59, 61, 62, 63, 64, 67, 69, 70, 71, 72], "gilliam": 116, "git": 12, "github": [12, 18, 20, 108, 111, 113, 124], "give": [11, 12, 114, 122], "given": [4, 11, 18, 20, 22, 26, 27, 29, 31, 32, 36, 37, 38, 42, 43, 45, 48, 50, 51, 53, 67, 73, 74, 75, 76, 77, 78, 80, 87, 89, 91, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 113, 114, 115, 117, 118, 119, 120, 121, 122, 124], "glass": 18, "global": [84, 112, 118, 119], "glover": 76, "gmod": 123, "go": 4, "goal": 11, "goe": [115, 116, 117, 118, 119, 120, 121, 122], "goeman": [11, 12, 28, 29], "goemanswilliamsonoptim": [12, 18], "goldston": [84, 118, 119], "gonciulea": 116, "good": [36, 118], "gp": 123, "gpy_displai": 123, "grad": [91, 93, 94, 96, 97], "gradient": [87, 89, 91, 92, 93, 94, 95, 96, 97, 100, 102, 103], "gradient_num_diff": [91, 93, 94, 96, 97], "gradient_support_level": [91, 93, 94, 96, 97], "grant": 118, "graph": [11, 12, 18, 29, 59, 61, 62, 64, 67, 69, 70, 71, 72, 116, 118, 119, 121, 124], "graph_partit": 62, "graph_theori": [59, 69], "graphoptimizationappl": [59, 62, 64, 69, 70, 71, 72, 121], "grasp": 118, "grb": 123, "greater": [20, 105, 118, 124], "greatli": 124, "grid": 119, "ground": [2, 18, 36, 82, 89, 96, 114, 115, 122, 124], "group": [11, 18, 62, 91, 93, 94, 96, 97], "grover": [0, 13, 30, 31], "grover_optim": [16, 116], "groveroptim": [0, 13, 16, 18, 30, 114, 115, 117], "gset": 64, "gt": [113, 114, 115, 117, 121, 123, 124], "guarante": [11, 18, 23, 26, 91, 117, 118, 119], "guess": [26, 37, 45, 96], "guid": [13, 18], "gurobi": [12, 18, 32, 123], "gurobi_result": 123, "gurobioptim": [12, 18, 123], "gurobipi": [12, 18, 32, 107, 110], "gurobipy_model": 123, "gutmann": [84, 118, 119], "gx": 117, "h": [11, 18, 67, 89, 118, 119], "h_": [87, 122], "ha": [0, 2, 11, 12, 14, 15, 16, 17, 18, 20, 31, 36, 37, 43, 50, 51, 53, 77, 78, 82, 84, 87, 89, 96, 108, 113, 114, 115, 116, 118, 119, 121, 122, 123, 124], "hadfield": 84, "half": 65, "hamilton": 118, "hamiltonian": [2, 18, 20, 36, 51, 53, 54, 67, 84, 87, 89, 108, 111, 114, 115, 122], "hand": [2, 14, 15, 18, 20, 98, 99, 101, 113], "handl": [11, 14, 15, 18, 114, 117], "happen": [109, 110, 119], "hard": [11, 118, 119, 122], "harder": 119, "hardwar": [16, 18, 50, 96, 118, 124], "hast": 118, "have": [4, 11, 12, 14, 16, 18, 87, 89, 104, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124], "hayashi": 11, "he": 118, "head_width": 119, "help": [11, 23, 115], "hen": 84, "here": [11, 12, 18, 26, 27, 32, 36, 42, 45, 82, 89, 96, 112, 115, 117, 118, 119, 122, 124], "hereaft": 117, "hermitian": 11, "hessian": 96, "hessian_delai": 96, "heurist": [11, 22, 93, 117, 118, 119, 124], "hi": 118, "high": [0, 2, 13, 70, 71, 124], "higher": [118, 122, 124], "highest": [11, 116, 124], "hilbert": 84, "hint": 23, "histori": [41, 42, 117, 120], "hline": 11, "hold": [94, 117, 124], "hometown": 118, "hopkin": 96, "hour": 119, "how": [11, 18, 36, 42, 84, 87, 96, 113, 114, 115, 118, 119, 120, 122], "howev": [11, 50, 84, 93, 114, 118, 122, 124], "html": [26, 43, 45, 91, 93, 97, 113], "http": [12, 14, 18, 20, 26, 27, 43, 45, 50, 57, 58, 59, 60, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 91, 93, 97, 108, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124], "hub": 18, "hybrid": [87, 89, 119], "i": [0, 2, 4, 11, 12, 13, 14, 15, 16, 18, 20, 22, 23, 24, 26, 27, 29, 30, 31, 32, 36, 37, 38, 41, 42, 43, 45, 47, 48, 50, 51, 53, 54, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 102, 105, 106, 108, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124], "ibm": [12, 14, 16, 18, 27, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124], "ibmdecisionoptim": 113, "ibmq": 18, "ibmq_qasm_simul": 18, "ico": 27, "id": 18, "id_n": 119, "idea": 11, "ideal": 119, "ident": [11, 96, 123], "identifi": [123, 124], "idx": 122, "ieee": 96, "ignor": [48, 53, 82, 84, 85, 87, 89, 91, 93, 94, 96, 97], "ih": 119, "ii": 119, "iiiiiiiiz": [118, 121], "iiiiiiizi": [118, 121], "iiiiiiizz": [118, 121], "iiiiiizii": [118, 121], "iiiiiiziz": [118, 121], "iiiiiizzi": [118, 121], "iiiiiziii": [118, 121], "iiiiiziiz": [118, 121], "iiiiizizi": [118, 121], "iiiiizzii": [118, 121], "iiiiziiii": [118, 121], "iiiiziiiz": [118, 121], "iiiiziizi": [118, 121], "iiiizizii": [118, 121], "iiiizziii": [118, 121], "iiiziiiii": [118, 121], "iiiziiiiz": [118, 121], "iiiziiizi": [118, 121], "iiiziizii": [118, 121], "iiiziziii": [118, 121], "iiizziiii": [118, 121], "iiz": 115, "iiziiiiii": [118, 121], "iiziiiiiz": [118, 121], "iiziiiizi": [118, 121], "iiziiizii": [118, 121], "iiziiziii": [118, 121], "iiziziiii": [118, 121], "iizz": 118, "iizziiiii": [118, 121], "ij": [11, 118, 119], "illustr": [115, 122], "ilp": 119, "im_n_1": 119, "imag": 11, "imaginari": 108, "immedi": 18, "imod": 44, "impact": 124, "implement": [14, 18, 22, 23, 24, 26, 27, 29, 31, 32, 36, 37, 38, 42, 43, 45, 47, 48, 53, 80, 84, 87, 89, 96, 115, 116, 117, 118], "impli": [26, 114], "implicitli": [91, 93, 94, 96, 97], "import": [2, 11, 14, 15, 16, 18, 26, 27, 32, 36, 39, 42, 45, 73, 74, 80, 87, 89, 96, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124], "imposs": 11, "impract": 118, "improv": [16, 18, 31, 87, 96], "includ": [11, 16, 18, 96, 112, 114, 118, 124], "incompat": [22, 26, 27, 29, 31, 32, 36, 37, 38, 42, 43, 45, 48, 53, 80], "incorpor": [2, 18, 124], "incorrect": 18, "increas": [23, 96, 115, 124], "incumb": 123, "incur": 11, "ind": [18, 120], "ind_mod": 123, "inde": 118, "independ": [11, 12, 16, 18, 67, 69, 116], "independent_set_": 69, "index": [11, 12, 20, 39, 71, 100, 102, 113, 119], "indexerror": 20, "indic": [11, 18, 20, 51, 58, 59, 62, 63, 64, 69, 70, 72, 82, 96, 100, 102, 106, 113, 116, 118], "indicatingthat": [14, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124], "indicator_big_m": 106, "individu": [118, 119], "induc": 121, "industri": 119, "ineq2eq": 114, "inequ": [0, 18, 20, 73, 75, 76, 114, 117], "inequalitytoequ": 18, "inequalitytoequalityconvert": 114, "inf": 23, "infeas": [20, 40, 42, 113, 115], "infinit": 118, "influenc": 118, "info": 32, "inform": [11, 12, 18, 21, 27, 28, 30, 32, 35, 39, 41, 43, 44, 45, 50, 52, 54, 57, 70, 71, 79, 93, 96, 115, 116, 118, 124], "informationpython": [14, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124], "informationqiskit": 14, "informationsoftwareversionqiskit2": [113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124], "ingredi": 116, "inherit": [14, 48, 84, 115], "init_qc": 122, "initi": [16, 22, 23, 24, 26, 27, 32, 36, 37, 42, 43, 45, 47, 48, 84, 87, 89, 91, 92, 93, 94, 96, 97, 98, 104, 115, 116, 118, 120, 122], "initial_hessian": 96, "initial_point": [84, 87, 89, 96, 115, 122, 123], "initial_point_support_level": [91, 93, 94, 96, 97], "initial_st": [84, 122], "initial_vari": 47, "inject": [91, 93, 94, 96, 97], "input": [11, 16, 18, 20, 30, 51, 70, 71, 114, 115, 116, 124], "insid": [18, 119], "inspect": 12, "instal": [18, 20, 27, 32, 117, 119, 121, 123], "instanc": [2, 18, 20, 22, 31, 35, 36, 37, 41, 42, 48, 51, 53, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 82, 87, 89, 94, 104, 114, 115, 117, 118, 119, 120, 121, 122, 124], "instance_vec": 119, "instanti": [7, 20, 119], "instead": [11, 12, 14, 15, 18, 20, 59, 96, 115, 117, 124], "instruct": [12, 17], "int": [20, 23, 26, 29, 30, 31, 37, 41, 42, 44, 45, 48, 50, 51, 53, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 84, 87, 89, 91, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 105, 112, 114, 115, 118, 119, 120, 122, 123], "int2bin": 114, "int32": 113, "int64": 113, "int_slack": [114, 121], "integ": [0, 18, 20, 36, 51, 53, 65, 73, 74, 84, 96, 106, 107, 111, 113, 114, 115, 116, 119, 121, 122, 123], "integer_var": [18, 20, 74, 113, 114, 123], "integer_var_dict": 20, "integer_var_list": [18, 20], "integertobinari": 18, "intend": [7, 11], "intens": 116, "intent": [14, 15], "interact": [18, 118, 119], "interc": 117, "interest": [0, 11, 115, 116, 118], "interfac": [0, 13, 14, 15, 16, 18, 85, 92, 104], "intermedi": [30, 33, 41, 42, 84, 87, 89, 115, 120, 121], "intermediate_fv": 30, "intermediateresult": 42, "intern": [16, 18, 21, 24, 31, 36, 42, 48, 91, 93, 94, 96, 97, 100, 102, 120, 122, 124], "internal_optim": 42, "interpret": [4, 18, 20, 30, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 96, 114, 118, 121], "intract": 0, "introduc": [11, 14, 16, 18, 22, 42, 73, 113, 114, 115, 117, 120, 121], "introduct": [11, 16], "invalid": [20, 31, 36, 42], "invers": [11, 96], "investig": [118, 119, 124], "invok": [26, 41, 45, 113, 117, 124], "involv": 96, "io": [113, 123], "iprint": 45, "ipykernel_10247": 118, "ipykernel_15658": 119, "ipykernel_16022": 120, "ipykernel_16661": 121, "ipykernel_16911": 122, "ipykernel_3661": 115, "ipykernel_4134": 116, "ipykernel_4246": 117, "ipynb": [18, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124], "is_bounds_ignor": [91, 93, 94, 96, 97], "is_bounds_requir": [91, 93, 94, 96, 97], "is_bounds_support": [91, 93, 94, 96, 97], "is_compat": [22, 26, 27, 29, 31, 32, 36, 37, 38, 42, 43, 45, 48, 53, 80], "is_cplex_instal": 27, "is_feas": [20, 118], "is_gradient_ignor": [91, 93, 94, 96, 97], "is_gradient_requir": [91, 93, 94, 96, 97], "is_gradient_support": [91, 93, 94, 96, 97], "is_gurobi_instal": 32, "is_initial_point_ignor": [91, 93, 94, 96, 97], "is_initial_point_requir": [91, 93, 94, 96, 97], "is_initial_point_support": [91, 93, 94, 96, 97], "isbn": 119, "isclos": 124, "iso": [113, 123], "issu": [11, 18, 20, 22, 29, 37, 38, 108, 111, 124], "item": [58, 63, 120, 121], "items_in_bin": 58, "iter": [23, 30, 31, 33, 41, 42, 44, 45, 93, 95, 96, 116, 117, 120, 124], "itertool": 118, "its": [12, 18, 20, 23, 44, 70, 84, 100, 102, 115, 118, 119], "itself": [113, 124], "iv": 96, "iv_n": 119, "iv_n_1": 119, "ix": 119, "izi": 115, "iziiiiiii": [118, 121], "iziiiiiiz": [118, 121], "iziiiiizi": [118, 121], "iziiiizii": [118, 121], "iziiiziii": [118, 121], "iziiziiii": [118, 121], "iziz": 118, "iziziiiii": [118, 121], "izz": 115, "izzi": 118, "izziiiiii": [118, 121], "j": [11, 18, 23, 29, 48, 67, 76, 84, 96, 115, 117, 118, 119, 120, 121, 122, 124], "j0": 119, "jac": [87, 89, 91, 92, 93, 94, 95, 96, 97, 124], "jhuapl": 96, "ji": [118, 119], "jj": 119, "job": [16, 96], "john": 96, "join": [115, 119, 122], "jointli": 117, "journal": 11, "json": 94, "jst": 14, "jupyt": 14, "just": [0, 28, 96, 114], "k": [11, 87, 96, 117, 119, 124], "kandala": 96, "karimi": 74, "keep": [24, 79, 119], "kei": [18, 20, 41, 86, 88, 91, 93, 94, 96, 97, 100, 102, 113, 119, 120, 122], "kept": 76, "key_format": 20, "keyerror": 20, "keyword": 18, "kirkpatrick": [18, 67], "kk": 119, "kliesch": 115, "knapsack_problem": 63, "knowledg": 118, "known": [84, 91, 93, 114, 116, 117, 119, 124], "koenig": 115, "kron": 119, "kwarg": [32, 91, 92, 93, 94, 96, 97], "l": [11, 20, 87, 89, 117, 119], "l_i": 113, "label": 120, "lagrangian": 119, "lambda": [119, 120, 122], "landscap": 120, "langl": [11, 89, 118, 119], "languag": [11, 96, 124], "larg": [0, 13, 18, 96, 114, 118], "larger": [2, 18, 124], "largest": 124, "last": [33, 41, 96, 115, 118, 119], "last_avg": 96, "last_best_dist": 118, "last_iter": [33, 42], "last_valu": 96, "later": [26, 45, 117], "latest": 12, "lb": [113, 119, 123], "lc1": 123, "ldot": [114, 117, 119], "le": [20, 113, 114], "lead": 11, "learn": [18, 23, 96, 117], "learning0": 14, "learning_r": 96, "least": [118, 121], "left": [11, 20, 98, 99, 101, 114, 118], "leftarrow": 113, "leftov": [21, 28, 30, 35, 39, 41, 44, 52], "legaci": 18, "legend": 120, "len": [20, 96, 118, 119, 122, 124], "length": [70, 84, 87, 89, 118], "length_includes_head": 119, "leq": [11, 18, 76, 96, 113, 114, 117, 119], "less": [20, 29, 96], "let": [11, 18, 113, 114, 119, 123, 124], "level": [0, 2, 13, 91, 93, 94, 96, 97, 105, 119, 120, 124], "leverag": [0, 2, 13, 14, 18, 115, 117, 122, 124], "librari": [2, 14, 15, 16, 18, 96, 118, 119, 120, 124], "licens": [14, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124], "lie": 118, "life": [115, 116, 117, 118, 119, 120, 121, 122], "like": [11, 18, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 114], "likelihood": 118, "limit": [18, 91, 93, 94, 96, 97, 118, 119, 123], "lin_eq": [18, 113], "lin_expr": 119, "lin_g": 18, "lin_geq": 113, "lin_leq": 113, "linalg": 96, "line": [18, 117], "linear": [2, 14, 16, 18, 20, 36, 39, 42, 43, 45, 76, 80, 91, 99, 100, 101, 103, 106, 107, 108, 114, 115, 117, 118, 119, 121, 122, 123], "linear2penalti": 120, "linear_constraint": [18, 20, 113, 114, 119, 123], "linear_constraints_index": 20, "linear_ct": 18, "linearconstraint": [18, 20], "linearequalitytopenalti": [18, 120], "linearexpress": 18, "linearinequalitytopenalti": [18, 114], "lineq2penalti": 114, "linewidth": 120, "link": [11, 119, 123], "lint": 12, "list": [20, 21, 25, 28, 29, 30, 31, 34, 35, 36, 39, 41, 42, 44, 47, 48, 51, 52, 54, 55, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 82, 84, 85, 87, 89, 91, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 113, 114, 115, 118, 119], "listop": 20, "listordict": [82, 84, 85, 87, 89], "ll": [11, 16, 124], "load": [20, 106, 107, 117, 119, 123], "load_account": 18, "loc": 120, "local": [2, 12, 18, 26, 37, 45, 96, 119, 124], "locat": 119, "log": 119, "logic": [18, 36, 48, 106, 124], "logical_and": [18, 106], "logical_not": [18, 106], "logical_or": [18, 106], "logist": [117, 119], "long": [18, 20, 117], "longer": [11, 18, 51, 122], "look": [11, 84, 87, 89, 113, 114, 122], "loop": [118, 120], "loos": 116, "loss": [11, 96], "low": [11, 70, 71], "lower": [11, 18, 20, 26, 37, 45, 91, 100, 102, 105, 113, 114, 120], "lowerbound": [20, 26, 37, 45, 74, 105, 113, 114, 123], "lowest": 118, "lp": [12, 18, 20, 123], "lse": 96, "lse_solv": 96, "lt": [113, 114, 115, 117, 121, 122, 123, 124], "luca": [115, 118], "m": [11, 18, 84, 106, 113, 114, 116, 118, 119, 120, 122, 123], "m_0": 11, "m_1": 11, "m_2": 11, "m_3": 11, "m_4": 11, "m_5": 11, "m_i": 11, "m_j": 11, "machin": [14, 18, 23, 117], "made": [12, 118, 119], "magic": [50, 55, 124], "magic_round": [16, 124], "magicround": [2, 16, 18], "magnet": 96, "magnitud": 96, "mai": [11, 12, 18, 27, 29, 32, 43, 44, 73, 74, 84, 91, 93, 94, 96, 97, 115, 119, 124], "main": [16, 18, 82, 84, 85, 87, 89, 96], "maintain": [18, 39], "mainten": 18, "major": [16, 119], "make": [11, 20, 51, 59, 113, 118, 119, 124], "manag": [2, 16, 18, 31, 49, 50, 84, 87, 89], "mani": [0, 11, 93, 114, 115, 118, 119, 122, 124], "manual": [2, 18, 118], "map": [11, 20, 23, 51, 74, 108, 111, 114, 115, 119, 124], "mapsto": 11, "marecek": [84, 122], "market": 118, "masahito": 11, "match": [20, 39, 76, 84, 87, 89, 103, 124], "materi": [11, 118], "math": 119, "mathbb": [11, 117, 119], "mathcal": [11, 117], "mathemat": [11, 113, 118, 119], "mathematician": 118, "mathrm": [117, 118, 119], "matplotlib": [12, 117, 118, 119, 120, 121], "matric": [0, 11, 113, 115], "matrix": [21, 28, 29, 30, 35, 39, 41, 44, 52, 64, 70, 96, 100, 102, 113, 117, 118, 120, 122], "max": [29, 64, 91, 93, 94, 96, 97, 116, 119, 121, 124], "max_cut": 118, "max_cut_valu": 29, "max_evals_group": [91, 93, 94, 96, 97], "max_len": 122, "max_number_of_bin": 58, "max_tim": 23, "max_vars_per_qubit": [2, 18, 51, 53, 124], "max_weight": [58, 63, 121], "maxcut": [11, 118, 124], "maxcut_partit": 124, "maxfev": 93, "maxfun": 26, "maxim": [11, 14, 18, 20, 45, 59, 63, 77, 78, 96, 113, 114, 118, 120, 121, 122, 123, 124], "maximizetominim": [18, 114], "maximum": [23, 26, 45, 51, 53, 58, 63, 64, 70, 71, 91, 93, 96, 116, 121, 124], "maximum_cut": 64, "maxit": [23, 91, 93, 96, 117, 118, 120, 123], "mayobtain": [14, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124], "mbco": 117, "mbo": 117, "mdl": [113, 117, 120, 122, 123], "me": [14, 15], "mead": 93, "mean": [11, 12, 18, 20, 67, 83, 86, 88, 89, 90, 96, 114, 115, 116, 118, 124], "meant": 105, "measur": [11, 50, 55, 86, 87, 88, 96, 116, 124], "member": 18, "mention": [115, 124], "meo": [14, 15, 16, 121, 123], "meo_noisi": 115, "merchandis": 118, "merit": 23, "messag": [18, 19, 22, 26, 29, 31, 36, 37, 38, 42, 44, 45, 48, 53, 80, 91, 93, 123], "meta": [42, 48], "metadata": [84, 86, 87, 88, 89], "method": [2, 10, 12, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 113, 114, 115, 117, 118, 119, 124], "might": [11, 20, 91, 92, 93, 94, 96, 97, 115, 124], "migrat": [13, 18], "mile": 119, "miller": 119, "milp": [18, 43, 119], "min": 116, "min_": [89, 116, 117, 119, 122], "min_eigen_solv": [2, 14, 15, 16, 18, 36, 48, 53, 119, 121, 124], "min_eigen_solver_result": [35, 120, 121], "min_num_var": [42, 115], "min_num_vars_optim": [41, 42, 115], "mind": [118, 119], "minim": [2, 16, 18, 20, 26, 30, 36, 37, 39, 45, 77, 78, 80, 84, 87, 89, 91, 93, 94, 95, 96, 97, 103, 113, 114, 115, 116, 117, 118, 119, 121, 122], "minimizetomaxim": [18, 114], "minimum": [0, 18, 31, 35, 36, 42, 48, 50, 51, 52, 53, 70, 71, 82, 83, 84, 85, 86, 87, 88, 89, 90, 93, 96, 114, 117, 118, 119, 121, 124], "minimum_eigen_solv": 14, "minimum_eigensolv": [2, 14, 15, 16, 18, 36, 42, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124], "minimum_recovery_prob": 51, "minimumeigenoptim": [16, 18, 22, 41, 42, 48, 116, 117, 118, 119, 120, 121, 122, 123, 124], "minimumeigenoptimizationresult": [18, 25, 34, 36, 41, 48], "minimumeigenoptimizerresult": 41, "minimumeigensolv": [0, 14, 15, 18, 36, 52, 53, 82, 86, 89, 115, 117, 120], "minimumeigensolverresult": [35, 52, 53, 83, 90, 124], "minimuneigenoptim": 119, "minu": 114, "miss": 119, "mix": [18, 22, 117, 119], "mixer": [47, 48, 84, 122], "mod": [18, 113], "mode": [12, 44, 73], "model": [0, 8, 13, 18, 20, 27, 32, 59, 67, 76, 96, 106, 107, 109, 110, 114, 116, 117, 118, 120, 122], "modelspac": 96, "modern": 18, "modif": [14, 51, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124], "modifi": [14, 23, 47, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124], "modul": [2, 13, 15, 19, 26, 27, 32, 36, 38, 43, 45, 79, 92, 113, 114, 118, 122, 124], "modular": [0, 13], "molecul": 96, "month": 20, "more": [11, 12, 18, 20, 26, 37, 45, 51, 108, 113, 114, 115, 118, 119, 124], "most": [12, 18, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 96, 116, 119], "motiv": 118, "move": 124, "mp": [18, 106, 109, 113, 114, 116, 117, 120, 122, 123], "mpl": 122, "mr_result": 124, "mtz": 119, "mu": [120, 122], "mu_merit": 23, "mu_r": 23, "much": [96, 122], "multi": [18, 22, 26, 37, 45, 117], "multi_start_solv": [26, 37, 45], "multidimension": 93, "multipl": [2, 11, 18, 20, 96, 113, 115, 124], "multipli": [23, 96, 113, 116, 117, 122], "multiset": 121, "multistartoptim": [26, 45], "must": [2, 11, 14, 16, 18, 48, 50, 82, 84, 87, 89, 96, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124], "my": 113, "my_ctyp": 119, "my_lb": 119, "my_minim": [87, 89], "my_obj": 119, "my_prob": 119, "my_problem": 20, "my_rh": 119, "my_sens": 119, "my_ub": 119, "n": [11, 18, 23, 51, 67, 70, 71, 76, 96, 113, 116, 117, 118, 119, 120, 121, 122, 124], "n_input_qubit": 30, "n_local": 118, "n_output_qubit": 30, "name": [14, 18, 20, 21, 28, 30, 35, 39, 41, 44, 45, 52, 64, 70, 74, 87, 89, 91, 93, 94, 96, 97, 98, 99, 100, 101, 102, 105, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124], "namedtemporaryfil": 123, "nameerror": 119, "nannicini": 87, "nativ": 123, "natur": [11, 96, 118, 119, 124], "nbest": 118, "nconvert": 123, "ncplex": 123, "ndarrai": [20, 21, 26, 28, 29, 30, 35, 37, 39, 41, 44, 45, 46, 47, 52, 55, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 84, 87, 89, 91, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103], "ndisplai": 123, "necessari": [119, 120, 121], "necessarili": 11, "need": [2, 11, 14, 16, 18, 20, 25, 34, 50, 87, 89, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124], "neg": [29, 116, 118], "neg_iv_n_1": 119, "neither": 96, "nelder": 93, "nelder_mead": [16, 18], "neq": 119, "nest": 20, "network": 118, "networkx": [59, 61, 62, 64, 69, 70, 71, 72, 118, 121, 124], "neven": 118, "never": [109, 110], "new": [0, 2, 11, 12, 13, 15, 16, 39, 67, 74, 80, 100, 102, 105, 117, 118, 119, 124], "next": [48, 96, 115, 116, 122, 124], "nfev": [95, 96, 124], "nit": [95, 96, 124], "njev": [95, 124], "nmid": 11, "no_iter": 33, "node": [59, 61, 62, 64, 69, 70, 71, 72, 118, 119, 121, 123, 124], "node_color": 118, "node_s": 118, "nois": 96, "non": [11, 18, 20, 27, 32, 51, 93, 109, 110, 123], "nondeterminist": 124, "none": [20, 21, 22, 26, 27, 28, 30, 31, 32, 35, 36, 39, 41, 42, 44, 48, 49, 50, 52, 53, 54, 55, 57, 58, 59, 61, 62, 64, 67, 69, 70, 71, 72, 75, 76, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 103, 106, 112, 119, 124], "noop": 32, "nor": 96, "norm": 96, "normal": [67, 96, 119], "notabl": [18, 96, 119], "notat": [11, 119], "note": [11, 14, 15, 20, 76, 87, 89, 92, 96, 106, 107, 113, 114, 115, 116, 118, 119, 121, 122, 123, 124], "notebook": [116, 119, 120, 124], "noth": 18, "notic": [11, 14, 67, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124], "notimplementederror": 20, "notin": 118, "notori": 118, "now": [11, 16, 18, 114, 117, 122], "np": [0, 20, 21, 28, 30, 35, 39, 41, 44, 52, 55, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 84, 87, 89, 96, 112, 113, 115, 118, 119, 120, 122, 123, 124], "nsolut": 121, "ntime": 121, "num": 121, "num_cut": 29, "num_initial_solut": 48, "num_iter": [14, 15, 16, 31, 116], "num_min_var": 42, "num_nod": 124, "num_paramet": [96, 120], "num_qubit": [16, 51, 118, 121, 124], "num_sit": 67, "num_value_qubit": [14, 15, 16, 31], "num_var": [51, 124], "num_vehicl": 71, "number": [11, 18, 20, 23, 26, 29, 30, 31, 37, 42, 44, 45, 48, 50, 51, 53, 55, 57, 58, 65, 67, 70, 71, 75, 76, 77, 78, 84, 87, 88, 89, 90, 91, 93, 95, 96, 97, 103, 112, 114, 115, 118, 119, 120, 121, 123, 124], "number_set": 65, "numer": [91, 93, 94, 96, 97], "numpi": [29, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 82, 83, 96, 115, 118, 119, 120, 121, 122, 124], "numpyminimumeigensolv": [16, 18, 22, 35, 42, 115, 116, 117, 118, 120, 121, 122], "numpyminimumeigensolverresult": 82, "nx": [59, 61, 62, 64, 69, 70, 71, 72, 118, 121, 124], "o": [116, 123], "o_i": 116, "obj": [113, 119, 120, 123], "obj_val": 124, "object": [7, 8, 11, 18, 20, 21, 23, 24, 25, 26, 28, 30, 34, 35, 36, 37, 39, 41, 43, 44, 45, 46, 47, 49, 51, 52, 54, 55, 75, 76, 80, 84, 87, 89, 91, 92, 93, 94, 96, 103, 104, 106, 107, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124], "objective_valu": [87, 120], "objsens": 103, "observ": [11, 82, 89, 96, 122, 124], "obstacl": [42, 115], "obtain": [2, 11, 18, 35, 39, 40, 41, 47, 52, 55, 86, 88, 115, 117, 118, 119, 122, 123, 124], "occupi": 20, "occur": [14, 118], "oct": 14, "octob": 18, "odd": 11, "off": 114, "offer": [2, 11, 18, 114, 118], "offset": [20, 51, 103, 108, 111, 113, 115, 116, 118, 119, 120, 121, 124], "often": [11, 112, 117, 122, 124], "onc": [11, 42, 51, 84, 87, 89, 115, 118, 121, 122, 124], "one": [11, 12, 14, 18, 20, 26, 28, 31, 36, 37, 42, 45, 48, 51, 73, 74, 80, 87, 89, 96, 115, 116, 117, 118, 119, 121, 124], "ones": 119, "onli": [2, 11, 14, 15, 16, 18, 26, 29, 33, 36, 43, 45, 48, 50, 70, 73, 75, 77, 78, 82, 96, 107, 112, 114, 115, 116, 118, 119, 123], "onlin": 96, "onto": 11, "op": [18, 24, 115, 121], "open": [13, 18, 20, 123], "oper": [5, 18, 20, 30, 45, 51, 53, 82, 83, 84, 85, 86, 87, 88, 89, 90, 108, 111, 115, 116, 117, 118, 119, 122, 124], "operation_count": 30, "opflow": [14, 18], "opt": 11, "opt_alg": 120, "opt_result": 120, "optim": [8, 12, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 51, 52, 53, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 79, 80, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 103, 113, 114, 119], "optima": 119, "optimal_circuit": [88, 90, 124], "optimal_paramet": [88, 90, 124], "optimal_point": [88, 90, 124], "optimal_solut": 123, "optimal_valu": [88, 90, 124], "optimization0": 14, "optimization_level": [16, 115], "optimizationalgorithm": [22, 26, 27, 29, 31, 32, 36, 37, 42, 43, 45, 48, 53], "optimizationappl": [58, 60, 61, 63, 65, 67, 68], "optimizationresult": [4, 18, 21, 26, 27, 28, 30, 31, 32, 35, 37, 38, 41, 42, 43, 44, 45, 52, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 115, 117], "optimizationresultstatu": [18, 21, 28, 30, 35, 39, 41, 44, 46, 52, 115, 123, 124], "optimizer_ev": [88, 90, 124], "optimizer_result": [88, 90, 124], "optimizer_tim": [88, 90, 118, 121, 124], "optimizerclass": 94, "optimizerresult": [87, 89, 91, 93, 94, 96, 97], "optimum": [26, 45, 116, 118, 120], "option": [16, 23, 36, 48, 73, 82, 84, 85, 87, 89, 91, 93, 94, 96, 97], "oracl": 116, "order": [11, 18, 20, 39, 70, 96, 108, 111, 113, 115, 117, 118, 124], "ordinari": 87, "org": [14, 18, 26, 27, 43, 45, 50, 57, 58, 59, 60, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 74, 91, 93, 96, 97, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124], "organ": 18, "origin": [2, 4, 11, 14, 18, 21, 28, 30, 35, 36, 39, 41, 44, 51, 52, 59, 61, 62, 64, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124], "orthogon": 11, "oserror": 20, "other": [2, 8, 11, 14, 15, 20, 23, 37, 67, 93, 113, 114, 115, 117, 118, 124], "otherwis": [18, 20, 22, 26, 27, 29, 31, 32, 36, 37, 38, 42, 43, 45, 48, 53, 73, 76, 77, 78, 80, 82, 84, 85, 87, 89, 108, 120], "otim": [11, 119], "our": [11, 114, 116, 118, 119, 122, 124], "out": [11, 12, 18, 20, 59, 61, 62, 64, 69, 70, 71, 72, 113], "outcom": [112, 118, 119, 124], "outlin": [11, 36, 42], "output": [16, 18, 20, 26, 27, 30, 32, 43, 45, 102, 114, 118, 122, 124], "over": [17, 67, 82, 86, 88, 96, 118, 120, 124], "overal": [86, 119], "overhead": 11, "overnight": 119, "overridden": 47, "overview": [18, 67, 96, 114], "overwritten": 96, "own": [12, 48, 84, 124], "owner": 18, "p": [18, 51, 76, 84, 87, 117, 118, 120, 124], "p_": 11, "pack": [18, 58, 68, 119, 121], "packag": [6, 12, 16, 18, 117, 118, 119, 121], "pad": 11, "page": [113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124], "pages242": 96, "pair": [11, 113, 119], "pairwis": [118, 121], "panchenko": [18, 67], "paper": 114, "parallel": [91, 93, 94, 96, 97], "param": [20, 22, 70, 83, 86, 88, 90, 95, 117, 120], "paramet": [16, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 118, 119, 122, 123, 124], "parameter": [84, 86, 87, 88, 89, 118, 119], "parametervectorel": 124, "parent": [98, 99, 100, 101, 102, 103, 104, 105], "parikh": [23, 117], "pars": 18, "parse_gset_format": 64, "parse_tsplib_format": [18, 70], "part": [14, 16, 18, 20, 101, 103, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124], "partial": [87, 89], "particl": [82, 89], "particular": [11, 18, 117, 119, 124], "particularli": [18, 120], "partit": [11, 62, 65, 118, 121, 124], "partition_problem": 65, "partli": 119, "pass": [14, 16, 18, 26, 31, 32, 45, 48, 49, 50, 75, 76, 80, 84, 87, 89, 91, 93, 94, 96, 97, 114, 122, 124], "pass_manag": [16, 31, 49, 50, 84, 87, 89, 115], "path": [118, 119], "pattern": [16, 18, 76], "pauli": [11, 18, 20, 50, 57, 108, 115, 118, 124], "paulitwodesign": 96, "pdf": 124, "pedagog": 124, "peleato": [23, 117], "penal": [23, 117], "penalti": [18, 31, 36, 42, 48, 53, 75, 76, 80, 114, 115, 118, 119, 120, 122], "pend": 18, "peopl": 118, "per": [11, 30, 51, 53, 94, 96, 124], "perfectli": 11, "perform": [2, 11, 16, 18, 30, 50, 56, 57, 93, 97], "perhap": 119, "permut": 118, "person": 118, "perspect": 115, "perturb": 96, "perturbation_dim": 96, "peruzzo": 89, "phase": [96, 116, 117, 118, 119], "phi": 122, "phy": [115, 118], "physic": [11, 115, 118], "physrevappli": 84, "pi": [84, 87, 89, 96], "pick": 11, "piec": 113, "pin": 18, "pip": [12, 18, 119, 123], "place": [119, 124], "plan": 117, "plane": 119, "platform": 12, "pleas": [18, 91, 93, 96, 97, 114, 119], "plot": [58, 117, 118, 119, 120], "plot_histogram": 115, "plt": [117, 118, 119, 120], "pm": [11, 18, 67, 118], "pmatrix": 122, "po": [59, 61, 62, 64, 69, 70, 71, 72, 118, 121, 124], "point": [84, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 114, 118, 119], "polyfit": 96, "polynomi": [116, 118, 119], "pooya": 74, "popul": [18, 91, 93, 94, 96, 97, 117], "populatebyrow": 119, "portfolio_optim": 120, "pose": 11, "posit": [18, 59, 61, 62, 64, 69, 70, 71, 72, 96, 102, 114, 119, 121, 122], "possess": [86, 88], "possibl": [28, 73, 115, 116, 118, 119, 124], "possibli": 39, "post": 18, "potenti": [2, 11, 18, 26, 37, 45, 115, 118, 124], "power": [96, 114, 118], "pp": [11, 96], "pprint_as_str": 18, "practic": [11, 74, 117, 118, 124], "pre": [23, 48, 119], "pre_j": 118, "pre_solv": [14, 15, 48, 122], "precis": [26, 91, 113], "precondit": 96, "precondition": 96, "predict": 118, "prefer": 93, "prepar": [42, 51, 87, 89, 115, 116, 119, 120, 124], "prepend": 84, "preprint": [22, 115, 116, 117], "presenc": 96, "present": [18, 20, 117, 119], "preset_passmanag": [16, 115], "presolv": 48, "press": 119, "pretti": [18, 20, 21, 28, 30, 35, 39, 41, 44, 52, 123], "prettyprint": [14, 18, 20, 21, 28, 30, 35, 39, 41, 44, 52, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124], "prevent": [51, 96], "previou": [11, 14, 18, 116, 119, 121, 124], "previous": [14, 15, 16, 17, 18, 124], "primal": [23, 117], "primarili": 11, "primit": [2, 14, 15, 18, 84, 87, 89, 96, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124], "princeton": 119, "princip": 84, "principl": 118, "print": [14, 15, 18, 20, 21, 27, 28, 30, 32, 35, 39, 41, 43, 44, 45, 52, 91, 93, 94, 96, 97, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124], "print_opt": [91, 93, 94, 96, 97], "printabl": [18, 20], "prob": [119, 121], "prob_dict": 120, "probabilist": 18, "probabl": [11, 18, 30, 34, 35, 46, 51, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 86, 87, 88, 115, 116, 118, 120, 122, 123, 124], "problem": [0, 1, 2, 3, 4, 13, 14, 15, 16, 18, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 47, 48, 51, 52, 53, 54, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 84, 91, 93, 96, 104, 108, 111, 113, 114, 115, 117, 119, 120, 122, 123], "problem2": [73, 74, 80], "proce": [0, 119, 124], "procedur": [2, 11, 18, 52, 117], "proceed": [96, 124], "process": [2, 11, 14, 15, 16, 18, 23, 50, 53, 96, 118, 123, 124], "process_result": [53, 124], "processor": 89, "prod_": [118, 119], "produc": [2, 18, 47, 122, 124], "product": [11, 118, 123], "profit": 118, "program": [0, 12, 18, 20, 29, 79, 99, 101, 103, 106, 107, 108, 109, 110, 115, 117, 118, 119, 122], "progress": [116, 120], "prohibit": 115, "project": [11, 12, 18, 27, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124], "properli": [18, 117], "properti": [28, 30, 44, 83, 86, 88, 90, 95, 112, 117], "propos": [11, 74, 96, 114, 117, 118], "prospect": [70, 118], "protect": [42, 115], "protocol": [84, 87, 89, 92], "proven": 11, "provid": [0, 2, 10, 11, 13, 14, 15, 16, 17, 18, 20, 26, 27, 31, 32, 36, 43, 45, 53, 54, 84, 96, 114, 115, 117, 118, 119, 120, 121, 123, 124], "pseudo": 67, "psi": [11, 87, 89, 118, 119], "pull": 18, "puls": 18, "purpos": [114, 124], "put": [11, 116, 118, 119], "py": [115, 116, 117, 118, 119, 120, 121, 122], "pypi": [12, 27, 123], "pyplot": [117, 118, 119, 120], "pyproject": 16, "python": [0, 12, 14, 18, 115, 116, 117, 118, 119, 120, 121, 122, 123], "pythonpath": 20, "q": [18, 102, 113, 116, 117, 119, 120], "q0": [18, 20, 113], "q1": 18, "q2var": [51, 124], "q_0": [113, 124], "q_1": 124, "q_i": [113, 119], "q_j": 119, "qaoa": [0, 11, 13, 18, 36, 42, 47, 48, 114, 115, 116, 117, 118, 121, 123], "qaoa_m": [115, 122], "qaoa_noisi": 115, "qaoa_r": 122, "qaoa_result": [115, 122], "qaoaclient": 18, "qaoaprogram": 18, "qasm": 96, "qasm_simul": [14, 18], "qc": 18, "qc1": 113, "qin": 14, "qiskit": [2, 12, 18, 19, 20, 26, 27, 32, 36, 38, 43, 45, 79, 87, 89, 92, 96, 97, 108, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124], "qiskit_a": [16, 115], "qiskit_algorithm": [15, 16, 18], "qiskit_copyright": [14, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124], "qiskit_ibm_runtim": 16, "qiskit_optim": [14, 15, 16, 18, 20, 26, 27, 32, 36, 39, 42, 45, 73, 74, 80, 87, 89, 96, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124], "qiskit_version_t": [14, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124], "qiskitalgorithmglob": 112, "qiskitoptimizationerror": [18, 20, 22, 26, 27, 31, 32, 36, 37, 38, 39, 42, 43, 45, 47, 48, 50, 51, 57, 70, 73, 74, 75, 76, 77, 78, 80, 100, 102, 103, 105, 106, 107, 108, 109, 110, 111, 113, 115], "qp": [18, 114, 115, 116, 117, 118, 120, 121, 122, 123], "qp2": 123, "qp2qubo": 118, "qp_eq": 114, "qp_eq_bin": 114, "qquad": 11, "qrac": [2, 18, 51, 124], "qrao": [18, 124], "qrao_results_mr": 124, "qrao_results_sdr": 124, "quad": [11, 113, 117, 119], "quad_eq": 113, "quad_geq": 113, "quad_l": 18, "quad_leq": 113, "quad_prog": 111, "quadrat": [0, 11, 18, 20, 29, 36, 45, 51, 79, 96, 99, 101, 102, 103, 106, 107, 108, 109, 110, 115, 116, 117, 118, 119, 122, 123, 124], "quadratic_constraint": [18, 20, 113], "quadratic_constraints_index": 20, "quadratic_program": [20, 98, 99, 100, 101, 102, 103, 104, 105, 109, 110, 113], "quadratic_program_to_qubo": 122, "quadraticconstraint": [18, 20], "quadraticexpress": 18, "quadraticobject": 18, "quadraticprogram": [2, 4, 7, 8, 14, 16, 18, 22, 24, 26, 27, 29, 31, 32, 36, 37, 38, 39, 42, 43, 45, 48, 51, 53, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 114, 115, 116, 117, 118, 119, 121, 122, 124], "quadraticprogramconvert": [31, 36, 42, 48, 73, 74, 75, 76, 80], "quadraticprogramel": [98, 100, 102, 103, 105], "quadraticprogramstatu": 113, "quadraticprogramtonegativevalueoracl": 116, "quadraticprogramtoqubo": [18, 31, 36, 42, 48, 53, 114, 118, 121, 122], "qualiti": 84, "quantit": 118, "quantum": [0, 6, 10, 13, 18, 22, 31, 47, 48, 50, 51, 52, 53, 74, 84, 87, 89, 90, 96, 114, 115, 116, 121], "quantum_cost": 119, "quantum_info": [18, 96, 114], "quantum_inst": [14, 18], "quantum_optim": 119, "quantum_solut": 119, "quantumcircuit": [47, 51, 54, 84, 87, 89, 122], "quantuminst": [14, 18], "quantumoptim": 119, "quantumrandomaccessencod": [2, 18, 49, 52, 53, 54, 124], "quantumrandomaccessoptim": [2, 16, 18], "quantumrandomaccessoptimizationresult": [53, 124], "quasi": [58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 86, 88], "quasidistribut": [58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72], "qubit": [2, 11, 18, 20, 30, 31, 51, 53, 82, 84, 85, 87, 89, 108, 111, 116, 118, 119, 121, 122, 124], "qubit_index": 51, "qubit_op": [20, 51, 108, 111, 124], "qubitop": 118, "qubo": [0, 11, 18, 22, 23, 30, 31, 35, 36, 42, 48, 51, 53, 76, 80, 114, 117, 118, 119, 121, 124], "qubo_optim": [22, 117], "quit": 124, "qx": 113, "r": [12, 115, 116, 117, 118, 119, 120, 123], "r0": 123, "r_i": 113, "r_y": 122, "rac": 11, "rais": [0, 14, 18, 20, 22, 26, 27, 31, 32, 36, 37, 38, 39, 42, 43, 45, 47, 48, 50, 51, 53, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 83, 86, 88, 90, 95, 96, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113], "rand": [96, 119], "random": [10, 18, 29, 50, 51, 52, 53, 57, 67, 70, 71, 84, 87, 89, 96, 112, 116, 118, 119, 120, 121], "random_model": 120, "random_regular_graph": [121, 124], "random_se": [16, 96, 112, 115, 118, 119, 120, 121, 122], "randomli": [11, 119], "rang": [0, 13, 18, 20, 47, 48, 96, 113, 118, 119, 120, 122], "rangl": [11, 87, 89, 116, 118, 119, 122], "rangle_m": 116, "rangle_n": [116, 122], "rapid": [0, 13], "rate": 96, "rather": 11, "ratio": [11, 51, 124], "raw": [30, 35], "raw_result": [21, 28, 30, 35, 39, 41, 44, 52], "raw_sampl": [18, 30, 35], "re": [11, 114, 115, 122], "reach": [42, 93, 118, 119], "read": [12, 14, 15, 18, 64, 70, 84, 87, 89, 112, 123], "read_from_lp_fil": [18, 20], "reader": 11, "readi": [0, 13, 119, 124], "readili": 11, "readout": 18, "real": [0, 13, 96, 118, 123], "real_amplitud": [119, 120, 124], "real_if_clos": 120, "realamplitud": [2, 14, 15, 16, 18], "reason": [11, 26, 91], "recal": 11, "recast": 11, "receiv": [83, 86, 88, 90, 95], "recent": [12, 18, 118], "recogn": 116, "recommend": [16, 96], "reconstruct": 94, "recoveri": [11, 51, 124], "recreat": 24, "recurs": [41, 42, 115], "recursiveminimumeigenoptim": 33, "reduc": [18, 115], "refactor": 119, "refer": [12, 16, 20, 22, 26, 42, 43, 45, 48, 57, 58, 59, 60, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 74, 76, 84, 87, 89, 91, 93, 96, 97, 100, 102, 114, 118, 124], "reflect": 18, "regard": 118, "regardless": [18, 96], "region": [26, 91], "regist": 116, "regular": [47, 48, 96], "reinstal": 12, "relationship": 11, "relax": [2, 10, 23, 47, 48, 49, 51, 52, 53, 54], "relax_for_pre_solv": [14, 15, 48, 122], "relax_problem": 122, "relaxed_fv": [52, 124], "relaxed_problem": 122, "relaxed_result": [2, 18, 52, 53, 124], "releas": [14, 16, 20, 115, 116, 117, 118, 119, 120, 121, 122], "relev": [0, 24, 118, 124], "reli": [18, 124], "remain": [16, 18, 42, 96, 116, 122], "remov": [16, 17, 18, 20, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123], "remove_linear_constraint": [20, 113], "remove_quadratic_constraint": [20, 113], "renam": 18, "rep": [16, 18, 84, 96, 118, 120, 121], "repetit": 18, "replac": [15, 16, 20, 26, 37, 41, 45, 113, 114, 115], "report": 117, "repositori": 12, "repr": 18, "repres": [18, 20, 21, 28, 30, 35, 36, 39, 41, 44, 47, 52, 55, 58, 59, 61, 62, 64, 69, 70, 71, 72, 86, 88, 114, 115, 116, 118, 122, 124], "represent": [0, 4, 13, 20, 67, 99, 100, 101, 102, 103, 105, 113, 114, 115, 118, 119, 120, 124], "reproduc": [11, 96, 112], "request": 45, "requir": [0, 2, 12, 13, 16, 18, 20, 50, 76, 79, 82, 87, 89, 91, 93, 94, 96, 97, 114, 115, 116, 118, 119, 124], "requisit": 119, "resampl": 96, "research": 117, "reshap": 119, "residu": [23, 117], "resolv": 57, "reson": 18, "resourc": [2, 14, 15, 18, 124], "respect": [11, 18, 58, 113, 114, 115, 116, 117, 118, 123, 124], "rest": [11, 96], "restor": 11, "restrict": [96, 123], "result": [2, 4, 11, 14, 15, 16, 18, 20, 21, 22, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 48, 50, 52, 53, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123], "result_eq": 114, "result_eq_bin": 114, "result_orig": 114, "result_q": 117, "result_qubo": 114, "retain": [14, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124], "retriev": [16, 88, 90], "return": [4, 11, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 47, 48, 50, 51, 52, 53, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 115, 116, 117, 118, 119, 120, 122, 124], "rev": 118, "revenu": 118, "revers": [118, 120], "reword": 18, "rh": [20, 98, 99, 101, 113, 114, 119], "rho": [11, 18, 23, 24, 117], "rho_": 11, "rho_initi": [23, 24, 117], "rhobeg": [26, 91], "rhoend": 26, "right": [11, 20, 98, 99, 101, 113, 114, 120], "rightarrow": [11, 18, 76, 116, 118], "risk": 120, "rl": 11, "rng_or_se": 67, "robert": 87, "robust": 93, "ronagh": 74, "root": [14, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124], "rotat": [84, 118, 119, 122], "rotation_count": 18, "round": [10, 18, 50, 52, 53, 54, 55, 56, 57], "rounding_context": [2, 18, 50, 56, 57, 124], "rounding_result": [52, 53, 124], "rounding_schem": [16, 53, 124], "roundingcontext": [50, 53, 57, 124], "roundingresult": [50, 52, 53, 56, 57], "roundingschem": [50, 53, 57], "rout": [71, 121], "routin": [95, 96, 114, 118], "row": 119, "rqaoa": 115, "rqaoa_result": 115, "rule": 23, "run": [0, 12, 13, 18, 23, 26, 27, 31, 32, 36, 37, 38, 42, 43, 45, 48, 84, 96, 115, 116, 117, 119, 120, 121, 122, 124], "runtim": [14, 18, 124], "runtimeerror": 51, "ry": [47, 118, 122, 124], "rz": [47, 122], "sahar": 74, "sai": 118, "sake": [119, 124], "sale": 118, "salesman": [70, 119, 121], "same": [11, 12, 16, 18, 20, 51, 96, 108, 111, 112, 113, 114, 115, 117, 119, 121, 122, 123], "sampl": [11, 14, 18, 21, 25, 28, 30, 31, 34, 35, 39, 41, 44, 46, 50, 52, 55, 84, 85, 86, 87, 88, 96, 118, 119, 122, 123, 124], "sample_most_lik": [58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 118], "sampler": [14, 15, 16, 18, 31, 50, 84, 87, 116, 117, 118, 119, 120, 121, 122, 123, 124], "samplerv2": 115, "samples_for_plot": 115, "sampling_vq": 16, "samplingminimumeigensolv": [14, 15, 18, 35, 87, 115], "samplingminimumeigensolverresult": [84, 85, 87, 88], "samplingvq": [6, 18, 84, 88, 115, 117, 118, 119], "samplingvqeresult": [84, 87], "saniti": [119, 124], "satisfi": 114, "save": [2, 18, 123, 124], "sb": 120, "scalar": [91, 93, 94, 96, 97], "scale": [11, 36, 42, 75, 76, 80, 96, 113, 119, 120], "scatter": 119, "scheme": [10, 18, 42, 50, 53, 56, 57, 115, 124], "scienc": 118, "scientist": 118, "scipi": [18, 26, 43, 44, 45, 87, 89, 91, 92, 93, 97], "scipymilpoptim": 18, "scipyoptim": [16, 18, 91, 93], "sdp": 28, "sdp_solut": 28, "sdr_result": 124, "seamless": [2, 18], "seamlessli": 18, "search": [0, 13, 31, 82, 93, 118, 124], "sec": 123, "second": [23, 41, 93, 96, 114, 119], "second_ord": 96, "section": [10, 11, 16, 17, 96, 113, 116, 121, 123, 124], "see": [11, 12, 14, 18, 20, 27, 44, 93, 96, 108, 111, 114, 116, 118, 119, 123], "seed": [16, 29, 50, 57, 67, 70, 71, 96, 112, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124], "seed_simul": 16, "seed_transpil": 16, "seek": 11, "seen": [18, 118], "segment": 119, "select": [11, 23, 73, 117, 119, 121, 124], "self": [11, 19, 96, 119], "sell": 118, "semi": [57, 122, 124], "semideterministicround": [2, 16, 18, 53, 124], "semideterministricround": 124, "semidterministic_round": 124, "send": 94, "sens": [18, 20, 73, 77, 78, 98, 99, 101, 103, 113, 114, 119], "separ": [12, 117], "sequenc": 20, "sequenti": 123, "seri": [2, 96, 124], "serial": 94, "serializ": 94, "serv": 119, "server": 94, "servic": 119, "session": 18, "set": [0, 4, 11, 13, 14, 16, 18, 19, 20, 23, 27, 31, 32, 43, 51, 64, 68, 69, 83, 84, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 113, 115, 117, 118, 119, 120, 121, 122, 123], "set_error_stream": 119, "set_log_stream": 119, "set_max_evals_group": [91, 93, 94, 96, 97], "set_opt": [91, 93, 94, 96, 97], "set_pack": 68, "set_results_stream": 119, "set_sens": 119, "set_warning_stream": 119, "setobject": 123, "setter": 18, "setup": [14, 113, 120], "sever": [48, 114], "shape": 103, "share": [11, 124], "sherrington": [18, 67], "shift": [20, 108, 115, 116], "ship": 119, "short": 96, "shortest": 118, "shot": [11, 14, 15, 16, 50, 55, 83, 90, 120, 124], "should": [12, 18, 23, 33, 37, 39, 47, 48, 84, 87, 96, 109, 110, 115, 116, 118, 124], "show": [18, 113, 114, 115, 116, 117, 118, 119, 120, 122], "showcas": 119, "shown": [116, 120, 122], "side": [20, 98, 99, 101, 113, 114], "sigact": 11, "sigma": [120, 122], "sign": [11, 114], "signatur": [82, 87, 89], "signific": [16, 18], "significantli": [18, 124], "silent": 45, "sim": [11, 119], "similar": [11, 119], "similarli": [11, 119], "simonetto": [22, 117], "simpl": [117, 118], "simplest": [12, 119], "simplex": 93, "simpli": [11, 12, 17, 118], "simplic": 0, "simplifi": [2, 18, 124], "simplist": 119, "simul": [0, 13, 16, 18, 50, 96, 117, 119, 124], "simultan": [96, 97], "sinc": [12, 20, 27, 32, 50, 108, 114, 116, 118, 124], "singl": [2, 11, 18, 84, 115, 116, 118, 119, 122, 123, 124], "site": [18, 67], "situat": 96, "size": [20, 26, 39, 59, 91, 115, 116, 119, 121], "sk": [18, 67], "skmodel": 18, "slack": [18, 73, 76, 114], "slope": 96, "slsqp": [44, 45], "slsqpoptim": [14, 15, 22], "small": [96, 115, 119, 122], "smaller": [37, 96], "smallest": 82, "smode": 44, "smoothen": 120, "so": [11, 18, 53, 82, 89, 113, 114, 118, 119, 121, 124], "softwareversionqiskit": 14, "sol": 122, "sole": 124, "solut": [2, 11, 18, 20, 21, 23, 28, 30, 35, 36, 39, 40, 41, 44, 46, 47, 48, 50, 52, 53, 57, 58, 64, 70, 84, 114, 115, 116, 118, 121, 122, 123], "solutionsampl": [25, 28, 30, 34, 35, 39, 52, 55, 115, 123, 124], "solv": [0, 2, 11, 13, 14, 15, 16, 18, 22, 23, 24, 26, 27, 29, 31, 32, 36, 37, 38, 39, 42, 43, 45, 48, 53, 73, 74, 75, 76, 80, 96, 114, 116, 117, 118, 119, 120, 121, 122, 123], "solve_problem": 119, "solve_relax": [2, 18, 53, 124], "solver": [11, 18, 36, 42, 48, 89, 91, 93, 96, 97, 115, 119, 122], "some": [0, 11, 12, 18, 20, 76, 96, 113, 118, 119, 120, 123, 124], "someth": 11, "sometim": 115, "sort": [11, 18, 29, 120, 122], "sort_cut": 29, "sought": 119, "sourc": [12, 13, 14, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124], "space": [11, 84, 93, 96, 116, 118], "spall": 96, "spars": [100, 102, 113], "sparsepauliop": [18, 96, 111, 114, 118, 121, 124], "speak": [118, 119], "special": 18, "specif": [11, 12, 16, 18, 30, 44, 91, 93, 94, 96, 97, 116, 117, 118, 119], "specifi": [14, 20, 22, 26, 27, 31, 32, 36, 37, 39, 42, 45, 48, 51, 55, 59, 61, 62, 64, 69, 70, 71, 72, 73, 84, 87, 89, 96, 99, 101, 113, 118, 121, 124], "spedalieri": 84, "speed": [118, 119], "speedup": 118, "spent": 119, "spin": [18, 67, 115], "split": 117, "spmatrix": [20, 99, 100, 101, 102, 103], "spring_layout": [118, 121, 124], "spsa": [16, 18, 87, 89, 118, 119], "sqrt": [11, 18, 67, 122], "squar": 117, "stabil": 18, "stability_const": 96, "stabl": [69, 96, 121], "stack": 119, "stand": [11, 117], "standalon": 15, "standard": [0, 2, 18, 47, 48, 96, 115, 120, 124], "star": 119, "start": [13, 23, 26, 37, 45, 47, 48, 84, 96, 113, 114, 115, 118, 124], "startswith": 124, "state": [2, 14, 15, 18, 21, 24, 36, 42, 47, 48, 51, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 82, 84, 85, 86, 87, 88, 89, 96, 114, 115, 116, 117, 118, 119, 122, 124], "state_preparation_circuit": 51, "state_vector": [58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72], "statevector": [16, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72], "statevectorestim": [16, 124], "statevectorsampl": [16, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124], "static": [27, 29, 32, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 80, 91, 93, 94, 96, 97], "stationari": 93, "statist": [23, 115, 117, 118], "statu": [14, 18, 20, 21, 28, 30, 35, 39, 40, 41, 44, 45, 46, 52, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124], "std": 115, "stddev": 120, "stdout": 32, "step": [2, 18, 41, 84, 87, 89, 96, 116, 118, 122], "stephen": 11, "stepsiz": 96, "still": [0, 18, 20, 96, 116, 118, 120, 122], "stochast": 96, "stop": 93, "store": [24, 26, 33, 42, 45, 100, 102, 113, 120], "str": [18, 20, 21, 22, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 48, 50, 52, 53, 55, 64, 70, 73, 80, 84, 87, 89, 97, 98, 99, 100, 101, 102, 103, 105, 118, 119, 122], "str_dvar": 124, "straightforward": 18, "strateg": 50, "strategi": [11, 18, 118, 124], "streamlin": [2, 18, 124], "stress": 119, "string": [11, 18, 20, 21, 26, 27, 28, 30, 32, 35, 39, 41, 43, 44, 45, 51, 52, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 113], "stringio": 123, "strong": 118, "stronger": [11, 119], "strongli": 18, "structur": [7, 84], "style": 122, "sub": [0, 37, 113, 119], "subcollect": 121, "subgraph": 121, "subject": [14, 18, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124], "submit": [16, 124], "subproblem": 117, "subsequ": 18, "subset": [11, 60, 65, 68, 114, 118, 121, 124], "subseteq": 117, "subspac": 84, "substitut": [11, 20, 41, 42], "substitute_vari": [20, 113], "succeed": 40, "success": [14, 18, 40, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124], "successfulli": [16, 124], "suffix": [20, 123], "suggest": [14, 15, 118], "suit": [0, 13, 96], "suitabl": [59, 61, 62, 64, 69, 70, 71, 72, 115, 117, 119, 124], "sum": [58, 65, 102, 114, 118, 119, 120, 121, 122, 124], "sum_": [11, 18, 29, 67, 76, 118, 119], "sum_i": [114, 118], "sum_p": 118, "summand": 118, "summar": 119, "summari": 45, "summat": 118, "superposit": [11, 116], "supersed": [15, 18], "supplementari": 96, "suppli": [76, 82, 89], "support": [0, 12, 14, 15, 16, 18, 20, 43, 51, 53, 70, 73, 74, 76, 82, 84, 85, 87, 89, 91, 92, 93, 94, 96, 97, 106, 107, 109, 110, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123], "supports_aux_oper": [82, 84, 85, 87, 89], "suppos": 118, "suppress": 32, "sure": [18, 20, 51, 119, 124], "swap": 18, "switch": [17, 18], "sy": 32, "symbol": 114, "symmetr": [96, 102, 113, 117], "symmetri": [42, 115], "system": [96, 118], "t": [11, 12, 18, 20, 48, 94, 113, 117, 118, 119, 120, 122], "tabl": [11, 14, 15], "tackl": 117, "tail": 124, "take": [11, 18, 26, 36, 42, 45, 87, 92, 96, 114, 115, 116, 117, 118, 119, 121, 124], "taken": [11, 20, 88, 90, 114, 115, 118], "tang": 115, "target": [16, 91, 93, 94, 96, 97, 118, 119], "target_magnitud": 96, "target_precis": 124, "tau_decr": 23, "tau_incr": 23, "tavernelli": 87, "tb": 19, "team": 18, "technic": 96, "techniqu": [10, 87, 89, 93, 116, 124], "tell": 124, "temp": 118, "tempfil": 123, "tensor": 11, "term": [11, 18, 20, 29, 36, 42, 75, 76, 101, 108, 113, 114, 115, 117, 118, 119, 120, 122], "termin": [21, 28, 30, 35, 39, 40, 41, 44, 52, 93, 96, 116, 117], "termination_check": 96, "terminationcheck": 96, "terra": [14, 15, 18, 20, 108, 111, 115], "terra0": 14, "test": [0, 12, 13, 16, 112, 117, 120], "text": [11, 18, 20, 76, 87, 113, 114], "textbf": 118, "th": [11, 20, 96, 108, 111], "than": [11, 20, 26, 29, 37, 45, 51, 96, 105, 108, 118, 119, 124], "thei": [11, 14, 18, 76, 82, 84, 85, 87, 89, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124], "them": [0, 11, 14, 15, 26, 34, 45, 114, 119, 122, 124], "themselv": 118, "theorem": 117, "theori": [11, 59, 69], "therebi": [2, 18, 124], "therefor": [29, 96, 122], "thereof": 36, "theta": [47, 87, 89, 118, 119, 122], "theta_": [118, 119], "theta_i": 122, "thi": [0, 2, 4, 6, 10, 11, 12, 14, 15, 16, 18, 20, 21, 22, 23, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 57, 59, 74, 76, 80, 82, 84, 86, 87, 89, 91, 92, 93, 94, 96, 97, 105, 106, 107, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124], "thing": 18, "third": [24, 119], "thiscopyright": [14, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124], "those": [12, 114], "though": [11, 12, 14, 115, 119], "thread": [18, 123], "three": [11, 113, 114, 116], "three_block": [23, 117], "threshold": [30, 42, 115, 116], "through": [2, 14, 15, 16, 118, 124], "throughout": 119, "throw": 27, "thrown": 115, "thu": [11, 29, 84, 113, 114, 115, 120], "tick": 123, "tild": 118, "time": [18, 20, 23, 88, 90, 96, 112, 113, 115, 116, 117, 118, 119, 121, 122, 123, 124], "timelimit": 123, "titl": [116, 119], "title_str": 119, "tmp": [115, 116, 117, 118, 119, 120, 121, 122], "tmp_file": 123, "to_arrai": [100, 102, 113], "to_dict": [100, 102, 113], "to_docplex": 18, "to_docplex_mp": [18, 20, 114, 123], "to_gurobipi": [18, 20, 123], "to_is": [18, 20, 115, 118, 120, 121], "to_numpy_arrai": 118, "to_quadratic_program": [58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 118, 121, 124], "todo": 36, "togeth": [118, 119], "toi": 116, "tol": [23, 91, 93, 117], "toler": [23, 26, 57, 93, 117], "toml": 16, "too": 123, "tool": [2, 11, 14, 18, 124], "top": [42, 105, 113, 124], "topic": 27, "total": [20, 65, 70, 82, 89, 95, 118, 121, 122, 123, 124], "tour": 119, "tr": 11, "track": 24, "tradeoff": 120, "transform": [11, 119], "transit": 16, "translat": [18, 36, 106, 107, 109, 110, 111, 113, 114, 115, 116, 117, 120, 122], "transpil": [16, 18, 31, 49, 50, 84, 87, 89, 115], "travel": [70, 119, 121], "travelling_salesman_problem": 70, "travers": 118, "treat": [20, 108], "tree": [14, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124], "trend": [23, 117], "tri": [22, 26, 27, 31, 32, 36, 37, 38, 42, 43, 45, 48, 118], "trial": [26, 37, 45, 87, 89, 118, 119], "triangl": 102, "trivial": [11, 18], "troyer": 118, "truck": 119, "true": [11, 14, 15, 20, 22, 23, 26, 27, 29, 31, 32, 36, 37, 38, 42, 43, 45, 48, 53, 80, 82, 84, 85, 87, 89, 91, 93, 96, 108, 113, 115, 117, 118, 119, 122, 123, 124], "trust": [26, 91, 93], "trust_region": 96, "try": [11, 14, 26, 27, 31, 32, 36, 37, 38, 42, 43, 45, 48, 113, 115, 118, 119, 121, 124], "tsp": [18, 118], "tsp_valu": [70, 118], "tsplib": [18, 70], "tucker": 119, "tune": [23, 84], "tupl": [20, 26, 37, 41, 45, 53, 83, 87, 89, 90, 91, 93, 94, 96, 97, 101, 102, 103, 105, 111, 115, 118], "turn": [18, 119], "tutori": [12, 13, 14, 15, 16, 18, 76, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124], "tutorial_mag": [113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124], "twice": [96, 119], "two": [2, 11, 16, 18, 62, 64, 96, 113, 114, 115, 118, 119, 121, 123], "two_spsa": 96, "tx": 122, "txt": [12, 14, 16, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124], "type": [7, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 47, 48, 50, 51, 52, 53, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 84, 85, 87, 89, 91, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 119, 124], "typeerror": [14, 31, 36, 42, 53, 83, 86, 88, 90, 95, 104], "typic": [118, 119, 124], "u": [11, 18, 114, 117, 118, 119, 121, 123, 124], "u_": [118, 119], "u_i": [113, 119], "u_j": 119, "ub": [113, 119, 123], "ubiquit": 118, "unavail": 119, "unbound": [26, 37, 45, 100, 102], "uncertainti": 96, "unchang": [16, 77, 78], "uncom": 117, "unconstrain": [0, 11, 36, 51, 75, 93, 114, 115, 116, 120, 122, 124], "under": [11, 12, 14, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124], "underli": [35, 52, 91, 93, 94, 96, 97, 114, 122], "understand": [61, 66, 115, 124], "undirect": [118, 121], "unexpect": 124, "uniform": [0, 13, 50], "uniformli": [18, 26, 37, 45, 50, 67, 96], "uniqu": [11, 29], "unique_cut": 29, "unit": [112, 124], "univers": 119, "unknown": [11, 96, 118], "unlik": [11, 84, 96, 124], "unsupport": [73, 76, 106, 107], "until": [14, 42, 116, 117, 118, 119, 124], "up": [18, 96, 102, 116, 118], "updat": [12, 16, 18, 20, 23, 24, 83, 84, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 116, 117, 123], "update_rho_by_residu": [18, 23], "upon": 45, "upper": [11, 18, 20, 26, 37, 45, 100, 102, 113, 114], "upperbound": [20, 26, 37, 45, 74, 105, 113, 114, 123], "us": [0, 2, 6, 10, 11, 12, 13, 14, 15, 16, 18, 20, 22, 23, 26, 27, 30, 31, 32, 36, 37, 38, 42, 43, 45, 47, 48, 49, 50, 51, 52, 53, 55, 57, 61, 66, 73, 74, 75, 76, 79, 80, 84, 87, 88, 89, 90, 91, 93, 94, 96, 97, 98, 100, 102, 105, 106, 112, 113, 114, 115, 117, 118, 121, 122], "usag": [12, 16, 18, 67], "usd": 119, "use_nam": [100, 102, 113], "user": [0, 2, 11, 13, 14, 15, 18, 33, 39, 48, 76, 121, 124], "userwarn": 18, "usual": [11, 115], "utc": [113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124], "util": [2, 14, 16, 18, 96, 112, 115, 116, 118, 119, 120, 121, 122, 124], "v": [11, 18, 115, 117, 118, 119], "v1": [16, 18], "v2": 18, "v_i": 11, "val": 120, "valid": [0, 11, 13, 20, 84, 117], "valu": [11, 18, 20, 21, 23, 24, 26, 28, 29, 30, 31, 33, 35, 37, 39, 40, 41, 42, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 57, 63, 70, 71, 76, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 106, 108, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124], "valueerror": [14, 31, 37, 50, 53, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 96], "var": [20, 39, 74, 115, 123], "var2op": 51, "var_dict": 20, "var_list": 20, "vari": [87, 89, 116], "variabl": [0, 2, 11, 14, 18, 20, 21, 23, 24, 26, 28, 30, 35, 36, 37, 39, 41, 42, 44, 45, 46, 47, 48, 51, 52, 53, 59, 60, 63, 68, 69, 72, 73, 74, 75, 76, 77, 78, 91, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 106, 107, 108, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124], "variable_nam": [21, 28, 30, 35, 39, 41, 44, 52], "variables_dict": [21, 28, 30, 35, 39, 41, 44, 52], "variables_index": 20, "varianc": [67, 83, 90], "variant": [67, 117], "variat": [0, 6, 13, 18, 42, 87, 89, 90, 96, 115, 116, 117, 119, 124], "variationalalgorithm": [87, 89], "variationalresult": [88, 90], "varieti": [6, 114], "variou": [18, 24, 121], "varphi": 117, "vartyp": [20, 105, 122], "vary_rho": [18, 23], "vast": 0, "vec": [87, 89], "vector": [0, 36, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 113, 117, 119, 121, 122], "vehicl": [71, 121], "vehicle_routing_problem": 71, "verbos": 45, "veri": [0, 115], "verif": 49, "verifi": [49, 116, 119], "version": [11, 12, 14, 17, 18, 20, 48, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124], "version3": [14, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124], "vert": 11, "vertex": [72, 118], "vertex_cov": [72, 121], "vertexcov": 121, "vertic": [11, 118, 124], "via": [0, 2, 13, 20, 23, 26, 41, 45, 84, 87, 89, 100, 102, 117, 119, 123, 124], "violat": [20, 26, 124], "virtual": 12, "visit": [118, 119, 121], "visual": [115, 116, 117, 119], "visualize_solut": 119, "vn": 119, "vol": [11, 96], "vqe": [2, 11, 18, 84, 87, 90, 92, 114, 115, 116, 117, 118, 119, 120, 124], "vqe_optim": 118, "vqeclient": 18, "vqeprogram": 18, "vqeprogramresult": 18, "vqeresult": [89, 124], "vqeruntimeresult": 18, "vrp": 119, "vtype": 123, "w": [29, 113, 117, 118, 119, 120, 122], "w_": [18, 67, 118, 119], "w_i": 118, "w_list": 119, "wa": [11, 18, 96, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124], "wai": [11, 12, 91, 93, 94, 96, 97, 102, 113, 114, 118, 119, 122], "want": [12, 18, 96, 115, 121, 123, 124], "warm": [47, 48, 84], "warm_start": 23, "warm_start_factori": 48, "warmstartqaoacircuitfactori": 48, "warmstartqaoafactori": 48, "warmstartqaoaoptim": [18, 122], "warn": [16, 18, 119], "wave": 119, "wavefunct": [118, 119], "we": [0, 2, 11, 14, 15, 18, 82, 89, 91, 93, 94, 96, 97, 102, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124], "wecker": 118, "weigh": 119, "weight": [20, 36, 41, 50, 58, 63, 70, 119, 121, 124], "well": [0, 13, 18, 20, 36, 84, 113, 118, 124], "were": [6, 11, 18, 22, 29, 37, 38, 113, 114], "what": 119, "wheel": 116, "when": [2, 11, 18, 23, 26, 31, 36, 39, 42, 45, 47, 48, 59, 61, 62, 64, 69, 70, 71, 72, 86, 88, 91, 93, 94, 96, 97, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124], "whenev": 118, "where": [11, 12, 18, 23, 58, 67, 71, 76, 84, 86, 88, 91, 96, 112, 113, 114, 116, 118, 119, 124], "wherea": 118, "wherein": 119, "whether": [20, 22, 26, 27, 29, 31, 32, 33, 36, 37, 38, 42, 43, 45, 48, 51, 53, 57, 80, 82, 84, 85, 87, 89, 96, 100, 102, 113, 114], "which": [0, 11, 12, 14, 16, 17, 18, 20, 50, 53, 57, 76, 84, 87, 89, 91, 92, 93, 94, 96, 97, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124], "while": [0, 16, 18, 82, 89, 114, 116, 119, 120, 122, 124], "whitespac": 18, "whole": [0, 13], "whose": [2, 18, 36, 59, 60, 63, 65, 68, 69, 70, 72, 113, 118, 121, 124], "width": 20, "wiesner": 11, "wiki": [18, 58, 59, 60, 62, 63, 64, 65, 68, 69, 70, 71, 72], "wikipedia": [18, 58, 59, 60, 62, 63, 64, 65, 68, 69, 70, 71, 72], "williamson": [11, 12, 28, 29], "wise": 119, "with_label": 124, "with_traceback": 19, "within": [7, 11, 18, 26, 27, 32, 36, 43, 45, 84, 87, 89, 119, 120, 121, 124], "without": [11, 18, 59, 61, 62, 64, 69, 70, 71, 72, 116, 123, 124], "woerner": [84, 87, 116, 122], "won": 20, "word": [11, 124], "work": [14, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124], "workaround": 115, "workflow": [2, 18, 119, 124], "worth": [11, 118, 119, 124], "worthwhil": 119, "would": [11, 96, 114, 118, 119, 120, 124], "wrap": [20, 26, 27, 32, 43, 45, 91, 93, 94, 96, 97, 115, 117], "wrap_funct": [91, 93, 94, 96, 97], "wrapper": [12, 26, 27, 32, 36, 43, 45, 91, 93, 94, 96, 97, 114], "write": [11, 18, 20, 32, 112, 119, 123], "write_to_lp_fil": [18, 20], "writelin": 32, "written": [11, 20, 114, 119], "wrong": 18, "ws_mixer": 122, "ws_qaoa": 122, "ws_qaoa_m": 122, "ws_qaoa_result": 122, "ws_result": 122, "www": [14, 27, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124], "x": [2, 11, 14, 16, 18, 20, 21, 28, 29, 30, 35, 39, 41, 44, 45, 46, 51, 52, 58, 64, 67, 73, 74, 75, 76, 77, 78, 79, 80, 84, 87, 89, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 108, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124], "x0": [18, 20, 87, 89, 91, 92, 93, 94, 96, 97, 115, 116, 122], "x1": [18, 39, 115, 116, 122], "x10": 18, "x11": 18, "x12": 18, "x13": 18, "x14": 18, "x15": 18, "x16": 18, "x17": 18, "x18": 18, "x19": 18, "x2": [18, 39, 115, 116, 122], "x20": 18, "x3": [39, 122], "x4": 122, "x5": [18, 122], "x6": 18, "x7": 18, "x8": 18, "x9": 18, "x_": [117, 118, 119, 120], "x_0": [116, 118, 120, 121, 124], "x_0_0": 118, "x_0_1": 118, "x_0_2": 118, "x_1": [116, 118, 120, 121, 124], "x_1_0": 118, "x_1_1": 118, "x_1_2": 118, "x_1x_2": 116, "x_2": [116, 118, 120, 121, 124], "x_2_0": 118, "x_2_1": 118, "x_2_2": 118, "x_3": [118, 120, 121, 124], "x_4": [120, 121, 124], "x_5": [120, 121, 124], "x_bin": 120, "x_center": [91, 93, 94, 96, 97], "x_i": [11, 18, 67, 76, 113, 114, 118, 122], "x_ix_j": [18, 67], "x_j": [11, 18, 76, 118], "x_quantum": 119, "x_sol": 119, "xatol": 93, "xbest_brut": 118, "xc": 119, "xi": [47, 48], "xlabel": [117, 120], "xlim": 120, "xopt": 93, "xtick": 120, "xx": 124, "xy": 124, "xyz": 114, "xyz_geq": 114, "xyz_leq": 114, "xz": 124, "y": [2, 11, 14, 16, 18, 20, 23, 45, 58, 76, 108, 113, 114, 115, 116, 118, 119, 123], "y_save": 18, "yc": 119, "year": 18, "yet": [12, 51, 96], "yield": [2, 11, 18, 96, 118, 119, 124], "ylabel": [117, 120], "you": [11, 12, 14, 15, 16, 17, 18, 96, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124], "your": [12, 14, 15, 16, 18, 121], "yourself": 11, "ytick": 120, "yx": 124, "yy": 124, "yz": 124, "z": [2, 11, 18, 20, 70, 76, 96, 108, 113, 114, 115, 118, 119, 123], "z_i": [11, 118, 119], "z_iz_j": 118, "z_iz_jz_k": 118, "z_j": [11, 118], "zemlin": 119, "zero": [18, 20, 26, 37, 45, 57, 118, 119, 120], "zfill": 118, "zi": [21, 28, 30, 35, 39, 41, 44, 52], "zii": 115, "ziiiiiiii": [118, 121], "ziiiiiiiz": [118, 121], "ziiiiiizi": [118, 121], "ziiiiizii": [118, 121], "ziiiiziii": [118, 121], "ziiiziiii": [118, 121], "ziiz": 118, "ziiziiiii": [118, 121], "ziz": 115, "ziziiiiii": [118, 121], "zj": [21, 28, 30, 35, 39, 41, 44, 52], "zx": 124, "zy": 124, "zz": [96, 124], "zzi": 115, "zzii": 118, "zziiiiiii": [118, 121], "\u03b2": 122, "\u03b8": 124}, "titles": ["Qiskit Optimization API Reference", "Optimization algorithms (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit_optimization.algorithms</span></code>)", "Quantum Random Access Optimization (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit_optimization.algorithms.qrao</span></code>)", "Optimization applications (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit_optimization.applications</span></code>)", "Optimization converters (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit_optimization.converters</span></code>)", "Minimum Eigensolvers (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit_optimization.minimum_eigensolvers</span></code>)", "Optimizers (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit_optimization.optimizers</span></code>)", "Optimization problems (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit_optimization.problems</span></code>)", "Quadratic program translators (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit_optimization.translators</span></code>)", "Utility functions (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit_optimization.utils</span></code>)", "Qiskit Optimization Explanations", "Background on Quantum Random Access Optimization: <em>Quantum relaxations, quantum random access codes, rounding schemes</em>", "Getting started", "Qiskit Optimization overview", "Qiskit Optimization v0.5 Migration Guide", "Qiskit Optimization v0.6 Migration Guide", "Qiskit Optimization v0.7 Migration Guide", "Qiskit Optimization Migration Guide", "Release Notes", "QiskitOptimizationError", "QuadraticProgram", "ADMMOptimizationResult", "ADMMOptimizer", "ADMMParameters", "ADMMState", "BaseAggregator", "CobylaOptimizer", "CplexOptimizer", "GoemansWilliamsonOptimizationResult", "GoemansWilliamsonOptimizer", "GroverOptimizationResult", "GroverOptimizer", "GurobiOptimizer", "IntermediateResult", "MeanAggregator", "MinimumEigenOptimizationResult", "MinimumEigenOptimizer", "MultiStartOptimizer", "OptimizationAlgorithm", "OptimizationResult", "OptimizationResultStatus", "RecursiveMinimumEigenOptimizationResult", "RecursiveMinimumEigenOptimizer", "ScipyMilpOptimizer", "SlsqpOptimizationResult", "SlsqpOptimizer", "SolutionSample", "WarmStartQAOAFactory", "WarmStartQAOAOptimizer", "EncodingCommutationVerifier", "MagicRounding", "QuantumRandomAccessEncoding", "QuantumRandomAccessOptimizationResult", "QuantumRandomAccessOptimizer", "RoundingContext", "RoundingResult", "RoundingScheme", "SemideterministicRounding", "BinPacking", "Clique", "ExactCover", "GraphOptimizationApplication", "GraphPartition", "Knapsack", "Maxcut", "NumberPartition", "OptimizationApplication", "SKModel", "SetPacking", "StableSet", "Tsp", "VehicleRouting", "VertexCover", "InequalityToEquality", "IntegerToBinary", "LinearEqualityToPenalty", "LinearInequalityToPenalty", "MaximizeToMinimize", "MinimizeToMaximize", "QuadraticProgramConverter", "QuadraticProgramToQubo", "INFINITY", "NumPyMinimumEigensolver", "NumPyMinimumEigensolverResult", "QAOA", "SamplingMinimumEigensolver", "SamplingMinimumEigensolverResult", "SamplingVQE", "SamplingVQEResult", "VQE", "VQEResult", "COBYLA", "Minimizer", "NELDER_MEAD", "Optimizer", "OptimizerResult", "SPSA", "SciPyOptimizer", "Constraint", "LinearConstraint", "LinearExpression", "QuadraticConstraint", "QuadraticExpression", "QuadraticObjective", "QuadraticProgramElement", "Variable", "from_docplex_mp", "from_gurobipy", "from_ising", "to_docplex_mp", "to_gurobipy", "to_ising", "algorithm_globals", "Quadratic Programs", "Converters for Quadratic Programs", "Minimum Eigen Optimizer", "Grover Optimizer", "ADMM Optimizer", "Max-Cut and Traveling Salesman Problem", "Vehicle Routing", "Improving Variational Quantum Optimization using CVaR", "Application Classes for Optimization Problems", "Warm-starting quantum optimization", "Using Classical Optimization Solvers and Models with Qiskit Optimization", "Quantum Random Access Optimization", "Optimization Tutorials"], "titleterms": {"0": 18, "1": [11, 119], "2": [11, 18, 119], "3": [11, 18, 117, 119], "4": [18, 119], "5": [14, 18, 119], "6": [15, 18], "7": [16, 18], "A": 11, "Ising": [118, 119], "The": 119, "access": [2, 11, 16, 124], "ad": 113, "adapt": 116, "admm": 117, "admmoptim": 22, "admmoptimizationresult": 21, "admmparamet": 23, "admmstat": 24, "algorithm": [1, 2, 16, 117], "algorithm_glob": 112, "altern": 124, "an": 113, "analysi": [115, 122], "api": 0, "appendix": 124, "applic": [3, 118, 121], "approach": 118, "approxim": 118, "background": 11, "base": [1, 3, 4, 6], "baseaggreg": 25, "between": 123, "binpack": 58, "bit": 11, "brute": 118, "bug": 18, "call": 117, "chang": 16, "check": [116, 118, 121], "checklist": 16, "class": [1, 3, 4, 6, 118, 121], "classic": [117, 119, 123], "cliqu": 59, "cobyla": 91, "cobylaoptim": 26, "code": 11, "combinatori": 124, "commut": 11, "complet": 16, "comput": 118, "constraint": [98, 113, 123], "construct": [113, 119], "convert": [4, 114, 115], "correct": [116, 124], "cost": 118, "cover": 121, "cplex": 119, "cplexoptim": 27, "cplexsolv": 123, "cut": 118, "cvar": 120, "deprec": 18, "determinist": 11, "directli": 113, "docplex": [113, 123], "eigen": [115, 120], "eigensolv": [5, 16], "encod": [2, 11, 124], "encodingcommutationverifi": 49, "estimatorv2": 16, "exact": 124, "exactcov": 60, "exampl": [16, 117], "execut": 115, "explan": 10, "explicit": 124, "featur": 18, "file": 113, "find": 116, "fix": 18, "forc": 118, "former": 14, "formul": 119, "from": [16, 113, 119], "from_docplex_mp": 106, "from_gurobipi": 107, "from_is": 108, "full": 118, "function": 9, "get": 12, "give": 118, "global": 16, "go": 12, "goemanswilliamsonoptim": 29, "goemanswilliamsonoptimizationresult": 28, "graphoptimizationappl": 61, "graphpartit": 62, "ground": 119, "grover": [16, 116], "groveroptim": [14, 15, 31, 116], "groveroptimizationresult": 30, "guid": [14, 15, 16, 17], "gurobioptim": 32, "gurobipi": 123, "gurobisolv": 123, "h": 117, "hamiltonian": [11, 118, 119, 121, 124], "how": [121, 124], "ibm": 119, "ilog": 119, "improv": 120, "indic": 123, "inequalitytoequ": [73, 114], "infin": 81, "initi": [117, 119], "inspect": 124, "instal": 12, "integertobinari": [74, 114], "intermediateresult": 33, "interpret": 124, "introduct": [113, 115, 116, 117, 118, 119, 120, 121, 122], "kei": 16, "knapsack": [63, 121], "linear": 113, "linearconstraint": 99, "linearequalitytopenalti": [75, 114], "linearexpress": 100, "linearinequalitytopenalti": 76, "load": 113, "lp": 113, "magic": 11, "magicround": [50, 124], "manual": 124, "map": 118, "max": 118, "maxcut": 64, "maximizetominim": 77, "meanaggreg": 34, "migrat": [14, 15, 16, 17], "minim": 92, "minimizetomaxim": 78, "minimum": [5, 16, 115, 116, 120], "minimum_eigensolv": 5, "minimumeigenoptim": [14, 15, 36, 115], "minimumeigenoptimizationresult": 35, "model": [113, 119, 123], "modul": 0, "multistartoptim": 37, "nelder_mead": 93, "new": [14, 18], "next": 13, "note": 18, "numberpartit": 65, "numpyminimumeigensolv": [14, 15, 82, 124], "numpyminimumeigensolverresult": 83, "optim": [0, 1, 2, 3, 4, 6, 7, 10, 11, 13, 14, 15, 16, 17, 94, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125], "optimizationalgorithm": 38, "optimizationappl": 66, "optimizationresult": 39, "optimizationresultstatu": 40, "optimizerresult": 95, "option": 12, "other": 18, "overview": [13, 14, 15, 16], "p": 11, "paramet": 117, "perform": 124, "portfolio": 120, "preliminari": 122, "prelud": 18, "primit": 16, "problem": [7, 11, 116, 118, 121, 124], "program": [7, 8, 113, 114], "qaoa": [14, 15, 16, 84, 122], "qiskit": [0, 10, 13, 14, 15, 16, 17, 123], "qiskit_optim": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9], "qiskitoptimizationerror": 19, "qp": 119, "qrac": 11, "qrao": [2, 16], "quadrat": [7, 8, 113, 114], "quadraticconstraint": 101, "quadraticexpress": 102, "quadraticobject": 103, "quadraticprogram": [20, 113, 123], "quadraticprogramconvert": 79, "quadraticprogramel": 104, "quadraticprogramtoqubo": 80, "quantum": [2, 11, 16, 117, 118, 119, 120, 122, 124], "quantumrandomaccessencod": 51, "quantumrandomaccessoptim": [53, 124], "quantumrandomaccessoptimizationresult": 52, "qubo": [115, 116, 122], "random": [2, 11, 16, 124], "readi": 12, "recov": 11, "recursiveminimumeigenoptim": [42, 115], "recursiveminimumeigenoptimizationresult": 41, "refer": [0, 11, 115, 116, 117, 119, 120, 122], "relax": [11, 122, 124], "releas": 18, "remov": 113, "result": [1, 117, 124], "right": 118, "round": [2, 11, 124], "roundingcontext": 54, "roundingresult": 55, "roundingschem": 56, "rout": 119, "run": 118, "salesman": 118, "sampl": 115, "sampler": 115, "samplerv2": 16, "samplingminimumeigensolv": 85, "samplingminimumeigensolverresult": 86, "samplingvq": [14, 15, 16, 87, 120], "samplingvqeresult": 88, "scheme": [2, 11], "scipymilpoptim": 43, "scipyoptim": 97, "search": 116, "semi": 11, "semideterministicround": 57, "set": 124, "setpack": 68, "simpl": 11, "skmodel": 67, "slsqpoptim": 45, "slsqpoptimizationresult": 44, "solut": [117, 119, 124], "solutionsampl": 46, "solv": [115, 124], "solver": [117, 123], "sparsepauliop": 115, "spsa": 96, "stableset": 69, "standard": 122, "start": [12, 122], "state": 11, "step": [13, 119, 124], "submodul": [0, 1], "subroutin": 124, "substitut": 113, "to_docplex_mp": 109, "to_gurobipi": 110, "to_is": 111, "translat": [8, 123], "travel": 118, "tsp": 70, "tutori": 125, "two": 124, "univers": 118, "up": [119, 124], "upgrad": 18, "us": [116, 119, 120, 123, 124], "util": 9, "v0": [14, 15, 16], "v2": [16, 115], "valu": 116, "variabl": [105, 113], "variat": 120, "vehicl": 119, "vehiclerout": 71, "verifi": 124, "vertex": 121, "vertexcov": 72, "via": 11, "vqe": [14, 16, 89], "vqeresult": 90, "warm": 122, "warmstartqaoafactori": 47, "warmstartqaoaoptim": [14, 15, 48], "weight": 118, "workflow": 16, "your": 124}})