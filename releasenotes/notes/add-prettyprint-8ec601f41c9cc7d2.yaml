---
upgrade:
  - |
    Shows a warning message if non-printable strings are set to
    :class:`~qiskit_optimization.QuadraticProgram`
    as problem name, variable name, or constraint name.
  - |
    If users set an empty variable name ``""`` with
    :meth:`~qiskit_optimization.QuadraticProgram.binary_var`,
    :meth:`~qiskit_optimization.QuadraticProgram.integer_var`, and
    :meth:`~qiskit_optimization.QuadraticProgram.continuous_var`,
    they set the default variable name (e.g., ``x0``)
    while they used to set the empty name as variable name.

    .. code-block:: python

        from qiskit_optimization.problems import QuadraticProgram

        qp = QuadraticProgram()
        x = qp.binary_var(name="")
        y = qp.integer_var(name="")
        z = qp.continuous_var(name="")
        print(x.name)  # x0
        print(y.name)  # x1
        print(z.name)  # x2

features:
  - |
    Adds a method :meth:`~qiskit_optimization.QuadraticProgram.prettyprint`
    to :class:`~qiskit_optimization.QuadraticProgram` to generate a pretty-printed string of the object.

    Here is an example of pretty printing.

    .. code-block:: python

        from qiskit_optimization import QuadraticProgram

        qp = QuadraticProgram('problem 1')
        qp.integer_var(-1, 2, 'x')
        qp.integer_var(-1, 2, 'y')
        qp.continuous_var(-1, name='z')
        qp.binary_var('u')
        qp.binary_var('v')
        qp.binary_var_list(10)
        qp.integer_var_list(3)
        qp.continuous_var_list(3)
        qp.minimize(constant=3, linear={'x': 2, 'y': 3}, quadratic={('u', 'x'): -1})
        qp.linear_constraint({'x': 1, 'y': -2}, '>=', 2, name='lin_GE')
        qp.linear_constraint({'x': 2, 'y': -1}, '==', 1, name='lin_EQ')
        qp.quadratic_constraint({'x': 1, 'u': 1}, {(3, 4): 1, (5, 6): -1}, '<=', 1, name='quad_LE')
        qp.quadratic_constraint({'x': 2, 'y': -1}, {('z', 'z'): -1}, '<=', 1)

        print(qp.prettyprint())

    The output is as follows. ::

        Problem name: problem 1

        Minimize
          -x*u + 2*x + 3*y + 3

        Subject to
          Linear constraints (2)
            x - 2*y >= 2  'lin_GE'
            2*x - y == 1  'lin_EQ'

          Quadratic constraints (2)
            u*v - x5*x6 + u + x <= 1  'quad_LE'
            -z^2 + 2*x - y <= 1  'q1'

          Integer variables (5)
            -1 <= x <= 2
            -1 <= y <= 2
            0 <= x15
            0 <= x16
            0 <= x17

          Continuous variables (4)
            -1 <= z
            0 <= x18
            0 <= x19
            0 <= x20

          Binary variables (12)
            u v x5 x6 x7 x8 x9 x10 x11 x12 x13 x14

